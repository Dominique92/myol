{"version":3,"file":"myol.js","sources":["../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/MapEventType.js","../node_modules/ol/control/Control.js","../node_modules/ol/css.js","../node_modules/ol/has.js","../node_modules/ol/dom.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/MapProperty.js","../node_modules/ol/control/FullScreen.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/math.js","../node_modules/ol/string.js","../node_modules/ol/coordinate.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/console.js","../node_modules/ol/control/ScaleLine.js","../node_modules/ol/easing.js","../node_modules/ol/control/Zoom.js","../src/control/Button.js","../node_modules/ol/asserts.js","../node_modules/ol/Feature.js","../node_modules/ol/transform.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/Circle.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/render/Feature.js","../node_modules/ol/format/Feature.js","../node_modules/ol/format/JSONFeature.js","../node_modules/ol/format/EsriJSON.js","../node_modules/ol/format/GeoJSON.js","../node_modules/ol/xml.js","../node_modules/ol/format/XMLFeature.js","../node_modules/ol/format/GMLBase.js","../node_modules/ol/format/xsd.js","../node_modules/ol/format/GML2.js","../node_modules/ol/format/GML3.js","../node_modules/ol/format/GML.js","../node_modules/ol/format/GPX.js","../node_modules/ol/format/TextFeature.js","../node_modules/ol/format/IGC.js","../node_modules/ol/format/IIIFInfo.js","../node_modules/ol/ImageState.js","../node_modules/color-space/rgb.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/color-parse/node_modules/color-name/index.js","../node_modules/color-parse/index.js","../node_modules/color-space/hsl.js","../node_modules/color-rgba/index.js","../node_modules/ol/color.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Fill.js","../node_modules/ol/size.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/colorlike.js","../node_modules/ol/render/canvas.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/format/KML.js","../node_modules/pbf/index.js","../node_modules/ol/format/MVT.js","../node_modules/ol/format/XML.js","../node_modules/ol/format/xlink.js","../node_modules/ol/format/OWS.js","../node_modules/ol/geom/flat/flip.js","../node_modules/ol/format/Polyline.js","../node_modules/ol/format/TopoJSON.js","../node_modules/ol/format/GML32.js","../node_modules/ol/format/filter/Filter.js","../node_modules/ol/format/filter/LogicalNary.js","../node_modules/ol/format/filter/And.js","../node_modules/ol/format/filter/Bbox.js","../node_modules/ol/format/WFS.js","../node_modules/ol/format/WKB.js","../node_modules/ol/format/WKT.js","../node_modules/ol/format/WMSCapabilities.js","../node_modules/ol/format/WMTSCapabilities.js","../node_modules/ol/format/filter.js","../node_modules/ol/format/WMSGetFeatureInfo.js","../src/control/Download.js","../node_modules/ol/TileState.js","../node_modules/ol/Tile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/Source.js","../node_modules/ol/TileRange.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/tilecoord.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid/WMTS.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/uri.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/BingMaps.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/render/EventType.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/View.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/DataTile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/reproj/DataTile.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/source/common.js","../node_modules/ol/source/wms.js","../node_modules/ol/source/TileWMS.js","../node_modules/ol/source/WMTS.js","../src/layer/TileLayerCollection.js","../src/layer/BackgroundLayer.js","../src/control/LengthLine.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../src/control/Load.js","../node_modules/ol-geocoder/dist/ol-geocoder.js","../src/control/MyGeocoder.js","../node_modules/ol/Geolocation.js","../src/control/MyGeolocation.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/control/MousePosition.js","../src/control/MyMousePosition.js","../src/control/Print.js","../src/control/index.js","../src/control/LayerSwitcher.js","../src/control/Permalink.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/Draw.js","../node_modules/ol/interaction/Modify.js","../node_modules/ol/interaction/Select.js","../node_modules/ol/events/SnapEvent.js","../node_modules/ol/interaction/Snap.js","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/projections/eqearth.js","../node_modules/proj4/lib/projections/bonne.js","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../node_modules/ol/source/Cluster.js","../src/layer/Selector.js","../src/layer/stylesOptions.js","../src/layer/MyVectorLayer.js","../node_modules/ol/format/OSMXML.js","../src/layer/VectorLayerCollection.js","../src/layer/index.js","../src/layer/VectorEditor.js","../src/layer/Hover.js","../src/layer/Marker.js","../node_modules/ol/proj/proj4.js","../src/trace.js","../src/index.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.2.1';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * Abstract class to be used by other control buttons definitions\n * Add some usefull controls with displayed buttons\n */\n//BEST redesign button hover & touch\n//BEST click sur in/out file / ...\n\nimport Control from 'ol/control/Control';\n\nimport './button.css';\n\nclass Button extends Control {\n  constructor(opt) {\n    const options = {\n      label: ' ', // An ascii or unicode character to decorate the button (OR : css button::after)\n      className: '', // To be added to the control.element\n\n      // Sub menu, by priority :\n      // subMenuId : 'id', // Html id-fr or Id containing the scrolling menu\n      // subMenuHTMLfr: '', // html code of the scrolling menu in locale lang\n      subMenuHTML: '', // html code of the scrolling menu\n      // title: '', // html title for button hovering by a mouse\n      // buttonAction() {}, // (evt, active) To run when an <input> ot <a> of the subMenu is clicked / hovered, ...\n      // subMenuAction() {}, // (evt) To run when the button is clicked / hovered, ...\n\n      // All ol.control.Control options\n\n      ...opt,\n    };\n\n    super({\n      element: document.createElement('div'),\n      ...options,\n    });\n\n    this.options = options;\n\n    if (options.buttonAction) this.buttonAction = options.buttonAction;\n    if (options.subMenuAction) this.subMenuAction = options.subMenuAction;\n\n    // Create a button\n    this.buttonEl = document.createElement('button');\n    this.buttonEl.setAttribute('type', 'button');\n    this.buttonEl.innerHTML = options.label;\n    if (options.title)\n      this.buttonEl.setAttribute('title', options.title);\n\n    // Add submenu below the button\n    this.subMenuEl =\n      document.getElementById(options.subMenuId + '-' + navigator.language.match(/[a-z]+/u)) ||\n      document.getElementById(options.subMenuId) ||\n      document.createElement('div');\n    this.subMenuEl.innerHTML ||=\n      options['subMenuHTML' + navigator.language.match(/[a-z]+/u)] ||\n      options.subMenuHTML;\n\n    // Populate the control\n    this.element.className = 'ol-control myol-button ' + options.className;\n    this.element.appendChild(this.buttonEl); // Add the button\n    this.element.appendChild(this.subMenuEl); // Add the submenu\n  }\n\n  setMap(map) {\n    // Add listeners to the buttons\n    this.element.addEventListener('mouseover', evt => this.buttonListener(evt));\n    this.element.addEventListener('mouseout', evt => this.buttonListener(evt));\n    this.buttonEl.addEventListener('click', evt => this.buttonListener(evt));\n\n    // Add listeners in the sub-menus\n    this.subMenuEl.querySelectorAll('a, input')\n      .forEach(el => ['click', 'change'].forEach(type =>\n        el.addEventListener(type, evt =>\n          this.subMenuAction(evt)\n        )));\n\n    return super.setMap(map);\n  }\n\n  buttonListener(evt) {\n    if (evt.type === 'mouseover')\n      this.element.classList.add('myol-button-hover');\n    else // mouseout | click\n      this.element.classList.remove('myol-button-hover');\n\n    if (evt.type === 'click') // Mouse click & touch\n      this.element.classList.toggle('myol-button-selected');\n\n    // Close other open buttons\n    for (const el of document.getElementsByClassName('myol-button'))\n      if (el !== this.element && evt.type === 'click')\n        el.classList.remove('myol-button-selected');\n\n    // Trigger action on the selected button\n    this.buttonAction(evt, this.element.classList.contains('myol-button-selected'));\n  }\n\n  buttonAction() {}\n\n  subMenuAction() {}\n}\n\nexport default Button;","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {containsExtent} from '../extent.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  Point: readPointGeometry,\n  LineString: readLineStringGeometry,\n  Polygon: readPolygonGeometry,\n  MultiPoint: readMultiPointGeometry,\n  MultiLineString: readMultiLineStringGeometry,\n  MultiPolygon: readMultiPolygonGeometry,\n};\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {\n  Point: writePointGeometry,\n  LineString: writeLineStringGeometry,\n  Polygon: writePolygonGeometry,\n  MultiPoint: writeMultiPointGeometry,\n  MultiLineString: writeMultiLineStringGeometry,\n  MultiPolygon: writeMultiPolygonGeometry,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @param {string} [idField] Name of the field where to get the id from.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options, idField) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes, true);\n      const id = esriJSONFeature.attributes[idField];\n      if (id !== undefined) {\n        feature.setId(/** @type {number} */ (id));\n      }\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    options = options ? options : {};\n    if (object['features']) {\n      const esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureSet.features;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(\n            esriJSONFeatures[i],\n            options,\n            object.objectIdFieldName,\n          ),\n        );\n      }\n      return features;\n    }\n    return [this.readFeatureFromObject(object, options)];\n  }\n\n  /**\n   * @param {EsriJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    if (\n      object['spatialReference'] &&\n      object['spatialReference']['wkid'] !== undefined\n    ) {\n      const spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (\n        object['spatialReference']\n      );\n      const crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    }\n    return null;\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n    const object = {};\n    if (!feature.hasProperties()) {\n      object['attributes'] = {};\n      return object;\n    }\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, options);\n      const projection =\n        options && (options.dataProjection || options.featureProjection);\n      if (projection) {\n        object['geometry']['spatialReference'] =\n          /** @type {EsriJSONSpatialReferenceWkid} */ ({\n            wkid: Number(getProjection(projection).getCode().split(':').pop()),\n          });\n      }\n      delete properties[feature.getGeometryName()];\n    }\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONFeatureSet} EsriJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      'features': objects,\n    };\n  }\n}\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = 'Point';\n  } else if (object['points']) {\n    type = 'MultiPoint';\n  } else if (object['paths']) {\n    const esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = 'LineString';\n    } else {\n      type = 'MultiLineString';\n    }\n  } else if (object['rings']) {\n    const esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    const layout = getGeometryLayout(esriJSONPolygon);\n    const rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = 'Polygon';\n      object = Object.assign({}, object, {['rings']: rings[0]});\n    } else {\n      type = 'MultiPolygon';\n      object = Object.assign({}, object, {['rings']: rings});\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return transformGeometryWithOptions(geometryReader(object), false, options);\n}\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(\n      flatRing,\n      0,\n      flatRing.length,\n      layout.length,\n    );\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent(),\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m], 'XYZM');\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z], 'XYZ');\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m], 'XYM');\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  if (object.hasZ === true && object.hasM === true) {\n    layout = 'XYZM';\n  } else if (object.hasZ === true) {\n    layout = 'XYZ';\n  } else if (object.hasM === true) {\n    layout = 'XYM';\n  }\n  return layout;\n}\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  const coordinates = geometry.getCoordinates();\n  /** @type {EsriJSONPoint} */\n  let esriJSON;\n  const layout = geometry.getLayout();\n  if (layout === 'XYZ') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n    };\n  } else if (layout === 'XYM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2],\n    };\n  } else if (layout === 'XYZM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3],\n    };\n  } else if (layout === 'XY') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n    };\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n  return esriJSON;\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: layout === 'XYZ' || layout === 'XYZM',\n    hasM: layout === 'XYM' || layout === 'XYZM',\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, options) {\n  const hasZM = getHasZM(lineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: [\n      /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates()),\n    ],\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(polygon);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      polygon.getCoordinates(false)\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, options) {\n  const hasZM = getHasZM(multiLineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      multiLineString.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, options) {\n  const hasZM = getHasZM(multiPoint);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    points: /** @type {Array<EsriJSONPosition>} */ (\n      multiPoint.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  const hasZM = getHasZM(geometry);\n  const coordinates = geometry.getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(\n    transformGeometryWithOptions(geometry, true, options),\n    options,\n  );\n}\n\nexport default EsriJSON;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {*} value Value to be written.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, value, objectStack) {\n      nodeWriter.call(thisArg ?? this, node, value, objectStack);\n      const parent = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const parentNode = parent.node;\n      parentNode.appendChild(node);\n    }\n  );\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @override\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this,\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName'),\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal,\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.startsWith('en')) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4],\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ',' + point[1]\n      : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    if (axisOrientation === 'neu') {\n      for (let i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    const asXYZ = axisOrientation.startsWith('en');\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (asXYZ) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    const point = value.getCoordinates();\n    // only 2d for simple features profile\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n\n/**\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @class\n * @param {import(\"./GMLBase.js\").Options} [options]\n *     Optional configuration object.\n * @api\n */\nconst GML = GML3;\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst AUTHOR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'email': parseEmail,\n  'link': parseLink,\n});\n\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'author': makeObjectPropertySetter(readAuthor),\n  'copyright': makeObjectPropertySetter(readCopyright),\n  'link': parseLink,\n  'time': makeObjectPropertySetter(readDateTime),\n  'keywords': makeObjectPropertySetter(readString),\n  'bounds': parseBounds,\n  'extensions': parseExtensions,\n});\n\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COPYRIGHT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'year': makeObjectPropertySetter(readPositiveInteger),\n  'license': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */\n  readMetadata(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      return this.readMetadataFromDocument(parse(source));\n    }\n    if (isDocument(source)) {\n      return this.readMetadataFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readMetadataFromNode(source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */\n  readMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        const metadata = this.readMetadataFromNode(/** @type {Element} */ (n));\n        if (metadata) {\n          return metadata;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */\n  readMetadataFromNode(node) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName === 'metadata'\n      ) {\n        return pushParseAndPop({}, METADATA_PARSERS, n, []);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options],\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */\nfunction readAuthor(node, objectStack) {\n  const values = pushParseAndPop({}, AUTHOR_PARSERS, node, objectStack);\n  if (values) {\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */\nfunction readCopyright(node, objectStack) {\n  const values = pushParseAndPop({}, COPYRIGHT_PARSERS, node, objectStack);\n  if (values) {\n    const author = node.getAttribute('author');\n    if (author !== null) {\n      values['author'] = author;\n    }\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseBounds(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const minlat = node.getAttribute('minlat');\n  const minlon = node.getAttribute('minlon');\n  const maxlat = node.getAttribute('maxlat');\n  const maxlon = node.getAttribute('maxlon');\n  if (\n    minlon !== null &&\n    minlat !== null &&\n    maxlon !== null &&\n    maxlat !== null\n  ) {\n    values['bounds'] = [\n      [parseFloat(minlon), parseFloat(minlat)],\n      [parseFloat(maxlon), parseFloat(maxlat)],\n    ];\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseEmail(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  const domain = node.getAttribute('domain');\n  if (id !== null && domain !== null) {\n    values['email'] = `${id}@${domain}`;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTEDATE_RECORD_RE = /^HFDTEDATE:(\\d{2})(\\d{2})(\\d{2}),(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lad_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lod_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStop_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStop_ = 0;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (this.lad_) {\n            y +=\n              parseInt(line.slice(this.ladStart_, this.ladStop_), 10) /\n              60000 /\n              10 ** (this.ladStop_ - this.ladStart_);\n          }\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (this.lod_) {\n            x +=\n              parseInt(line.slice(this.lodStart_, this.lodStop_), 10) /\n              60000 /\n              10 ** (this.lodStop_ - this.lodStart_);\n          }\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTEDATE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = HFDTE_RECORD_RE.exec(line);\n          if (m) {\n            day = parseInt(m[1], 10);\n            month = parseInt(m[2], 10) - 1;\n            year = 2000 + parseInt(m[3], 10);\n          } else {\n            m = H_RECORD_RE.exec(line);\n            if (m) {\n              properties[m[1]] = m[2].trim();\n            }\n          }\n        }\n      } else if (line.charAt(0) == 'I') {\n        const numberAdds = parseInt(line.slice(1, 3), 10);\n        for (let i = 0; i < numberAdds; i++) {\n          const addCode = line.slice(7 + i * 7, 10 + i * 7);\n          if (addCode === 'LAD' || addCode === 'LOD') {\n            // in IGC format, columns are numbered from 1\n            const addStart = parseInt(line.slice(3 + i * 7, 5 + i * 7), 10) - 1;\n            const addStop = parseInt(line.slice(5 + i * 7, 7 + i * 7), 10);\n            if (addCode === 'LAD') {\n              this.lad_ = true;\n              this.ladStart_ = addStart;\n              this.ladStop_ = addStop;\n            } else if (addCode === 'LOD') {\n              this.lod_ = true;\n              this.lodStart_ = addStart;\n              this.lodStop_ = addStop;\n            }\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options),\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 =\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 =\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 =\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n          ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n          : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return ['jpg', 'png', 'gif'].includes(format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && formats.includes(format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions|undefined} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return undefined;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(\n      false,\n      'Cannot determine IIIF Image API version from provided image information JSON',\n    );\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string|undefined} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return undefined;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures|undefined} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return undefined;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options|undefined} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return undefined;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return undefined;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        imageOptions.formats.includes(options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n            ? imageOptions.preferredFormat\n            : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && imageOptions.qualities.includes(options.quality)\n          ? options.quality\n          : imageOptions.qualities.includes('native')\n            ? 'native'\n            : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_,\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source)),\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n)),\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this,\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames,\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i],\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection' || type.startsWith('Multi')) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this,\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                }),\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }),\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName'],\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value'],\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value'],\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this,\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  }),\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ],\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints(),\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings(),\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons(),\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack,\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack,\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options,\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @override\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])',\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds',\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * @typedef {Object} TransactionSummary\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {TransactionSummary} transactionSummary Transaction summary.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_,\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n),\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'),\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_,\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      [],\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_,\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array',\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set',\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter,\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context],\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter,\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version],\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request,\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj,\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack,\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack,\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack,\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/WKB\n */\nimport Feature from '../Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n// WKB spec: https://www.ogc.org/standards/sfa\n// EWKB spec: https://raw.githubusercontent.com/postgis/postgis/2.1.0/doc/ZMSgeoms.txt\n\n/**\n * @const\n * @enum {number}\n */\nconst WKBGeometryType = {\n  POINT: 1,\n  LINE_STRING: 2,\n  POLYGON: 3,\n  MULTI_POINT: 4,\n  MULTI_LINE_STRING: 5,\n  MULTI_POLYGON: 6,\n  GEOMETRY_COLLECTION: 7,\n\n  /*\n  CIRCULAR_STRING: 8,\n  COMPOUND_CURVE: 9,\n  CURVE_POLYGON: 10,\n\n  MULTI_CURVE: 11,\n  MULTI_SURFACE: 12,\n  CURVE: 13,\n  SURFACE: 14,\n  */\n\n  POLYHEDRAL_SURFACE: 15,\n  TIN: 16,\n  TRIANGLE: 17,\n};\n\nclass WkbReader {\n  /**\n   * @param {DataView} view source to read\n   */\n  constructor(view) {\n    /** @private */\n    this.view_ = view;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pos_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.initialized_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isLittleEndian_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasZ_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasM_ = false;\n\n    /**\n     * @type {number|null}\n     * @private\n     */\n    this.srid_ = null;\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * @return {number} value\n   */\n  readUint8() {\n    return this.view_.getUint8(this.pos_++);\n  }\n\n  /**\n   * @param {boolean} [isLittleEndian] Whether read value as little endian\n   * @return {number} value\n   */\n  readUint32(isLittleEndian) {\n    return this.view_.getUint32(\n      (this.pos_ += 4) - 4,\n      isLittleEndian !== undefined ? isLittleEndian : this.isLittleEndian_,\n    );\n  }\n\n  /**\n   * @param {boolean} [isLittleEndian] Whether read value as little endian\n   * @return {number} value\n   */\n  readDouble(isLittleEndian) {\n    return this.view_.getFloat64(\n      (this.pos_ += 8) - 8,\n      isLittleEndian !== undefined ? isLittleEndian : this.isLittleEndian_,\n    );\n  }\n\n  /**\n   * @return {import('../coordinate.js').Coordinate} coords for Point\n   */\n  readPoint() {\n    /** @type import('../coordinate.js').Coordinate */\n    const coords = [];\n\n    coords.push(this.readDouble());\n    coords.push(this.readDouble());\n    if (this.hasZ_) {\n      coords.push(this.readDouble());\n    }\n    if (this.hasM_) {\n      coords.push(this.readDouble());\n    }\n\n    return coords;\n  }\n\n  /**\n   * @return {Array<import('../coordinate.js').Coordinate>} coords for LineString / LinearRing\n   */\n  readLineString() {\n    const numPoints = this.readUint32();\n\n    /** @type Array<import('../coordinate.js').Coordinate> */\n    const coords = [];\n    for (let i = 0; i < numPoints; i++) {\n      coords.push(this.readPoint());\n    }\n\n    return coords;\n  }\n\n  /**\n   * @return {Array<Array<import('../coordinate.js').Coordinate>>} coords for Polygon like\n   */\n  readPolygon() {\n    const numRings = this.readUint32();\n\n    /** @type Array<Array<import('../coordinate.js').Coordinate>> */\n    const rings = [];\n    for (let i = 0; i < numRings; i++) {\n      rings.push(this.readLineString()); // as a LinearRing\n    }\n\n    return rings;\n  }\n\n  /**\n   * @param {number} [expectedTypeId] Expected WKB Type ID\n   * @return {number} WKB Type ID\n   */\n  readWkbHeader(expectedTypeId) {\n    const byteOrder = this.readUint8();\n    const isLittleEndian = byteOrder > 0;\n\n    const wkbType = this.readUint32(isLittleEndian);\n    const wkbTypeThousandth = Math.floor((wkbType & 0x0fffffff) / 1000);\n    const hasZ =\n      Boolean(wkbType & 0x80000000) ||\n      wkbTypeThousandth === 1 ||\n      wkbTypeThousandth === 3;\n    const hasM =\n      Boolean(wkbType & 0x40000000) ||\n      wkbTypeThousandth === 2 ||\n      wkbTypeThousandth === 3;\n    const hasSRID = Boolean(wkbType & 0x20000000);\n    const typeId = (wkbType & 0x0fffffff) % 1000; // Assume 1000 is an upper limit for type ID\n    const layout = /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */ (\n      ['XY', hasZ ? 'Z' : '', hasM ? 'M' : ''].join('')\n    );\n\n    const srid = hasSRID ? this.readUint32(isLittleEndian) : null;\n\n    if (expectedTypeId !== undefined && expectedTypeId !== typeId) {\n      throw new Error('Unexpected WKB geometry type ' + typeId);\n    }\n\n    if (this.initialized_) {\n      // sanity checks\n      if (this.isLittleEndian_ !== isLittleEndian) {\n        throw new Error('Inconsistent endian');\n      }\n      if (this.layout_ !== layout) {\n        throw new Error('Inconsistent geometry layout');\n      }\n      if (srid && this.srid_ !== srid) {\n        throw new Error('Inconsistent coordinate system (SRID)');\n      }\n    } else {\n      this.isLittleEndian_ = isLittleEndian;\n      this.hasZ_ = hasZ;\n      this.hasM_ = hasM;\n      this.layout_ = layout;\n      this.srid_ = srid;\n      this.initialized_ = true;\n    }\n\n    return typeId;\n  }\n\n  /**\n   * @param {number} typeId WKB Type ID\n   * @return {any} values read\n   */\n  readWkbPayload(typeId) {\n    switch (typeId) {\n      case WKBGeometryType.POINT:\n        return this.readPoint();\n\n      case WKBGeometryType.LINE_STRING:\n        return this.readLineString();\n\n      case WKBGeometryType.POLYGON:\n      case WKBGeometryType.TRIANGLE:\n        return this.readPolygon();\n\n      case WKBGeometryType.MULTI_POINT:\n        return this.readMultiPoint();\n\n      case WKBGeometryType.MULTI_LINE_STRING:\n        return this.readMultiLineString();\n\n      case WKBGeometryType.MULTI_POLYGON:\n      case WKBGeometryType.POLYHEDRAL_SURFACE:\n      case WKBGeometryType.TIN:\n        return this.readMultiPolygon();\n\n      case WKBGeometryType.GEOMETRY_COLLECTION:\n        return this.readGeometryCollection();\n\n      default:\n        throw new Error(\n          'Unsupported WKB geometry type ' + typeId + ' is found',\n        );\n    }\n  }\n\n  /**\n   * @param {number} expectedTypeId Expected WKB Type ID\n   * @return {any} values read\n   */\n  readWkbBlock(expectedTypeId) {\n    return this.readWkbPayload(this.readWkbHeader(expectedTypeId));\n  }\n\n  /**\n   * @param {Function} reader reader function for each item\n   * @param {number} [expectedTypeId] Expected WKB Type ID\n   * @return {any} values read\n   */\n  readWkbCollection(reader, expectedTypeId) {\n    const num = this.readUint32();\n\n    const items = [];\n    for (let i = 0; i < num; i++) {\n      const result = reader.call(this, expectedTypeId);\n      if (result) {\n        items.push(result);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * @return {Array<import('../coordinate.js').Coordinate>} coords for MultiPoint\n   */\n  readMultiPoint() {\n    return this.readWkbCollection(this.readWkbBlock, WKBGeometryType.POINT);\n  }\n\n  /**\n   * @return {Array<Array<import('../coordinate.js').Coordinate>>} coords for MultiLineString like\n   */\n  readMultiLineString() {\n    return this.readWkbCollection(\n      this.readWkbBlock,\n      WKBGeometryType.LINE_STRING,\n    );\n  }\n\n  /**\n   * @return {Array<Array<Array<import('../coordinate.js').Coordinate>>>} coords for MultiPolygon like\n   */\n  readMultiPolygon() {\n    return this.readWkbCollection(this.readWkbBlock, WKBGeometryType.POLYGON);\n  }\n\n  /**\n   * @return {Array<import('../geom/Geometry.js').default>} array of geometries\n   */\n  readGeometryCollection() {\n    return this.readWkbCollection(this.readGeometry);\n  }\n\n  /**\n   * @return {import('../geom/Geometry.js').default} geometry\n   */\n  readGeometry() {\n    const typeId = this.readWkbHeader();\n    const result = this.readWkbPayload(typeId);\n\n    switch (typeId) {\n      case WKBGeometryType.POINT:\n        return new Point(\n          /** @type {import('../coordinate.js').Coordinate} */ (result),\n          this.layout_,\n        );\n\n      case WKBGeometryType.LINE_STRING:\n        return new LineString(\n          /** @type {Array<import('../coordinate.js').Coordinate>} */ (result),\n          this.layout_,\n        );\n\n      case WKBGeometryType.POLYGON:\n      case WKBGeometryType.TRIANGLE:\n        return new Polygon(\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ (\n            result\n          ),\n          this.layout_,\n        );\n\n      case WKBGeometryType.MULTI_POINT:\n        return new MultiPoint(\n          /** @type {Array<import('../coordinate.js').Coordinate>} */ (result),\n          this.layout_,\n        );\n\n      case WKBGeometryType.MULTI_LINE_STRING:\n        return new MultiLineString(\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ (\n            result\n          ),\n          this.layout_,\n        );\n\n      case WKBGeometryType.MULTI_POLYGON:\n      case WKBGeometryType.POLYHEDRAL_SURFACE:\n      case WKBGeometryType.TIN:\n        return new MultiPolygon(\n          /** @type {Array<Array<Array<import('../coordinate.js').Coordinate>>>} */ (\n            result\n          ),\n          this.layout_,\n        );\n\n      case WKBGeometryType.GEOMETRY_COLLECTION:\n        return new GeometryCollection(\n          /** @type {Array<import('../geom/Geometry.js').default>} */ (result),\n        );\n\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * @return {number|null} SRID in the EWKB. `null` if not defined.\n   */\n  getSrid() {\n    return this.srid_;\n  }\n}\n\nclass WkbWriter {\n  /**\n   * @type {Object}\n   * @property {string} [layout] geometryLayout\n   * @property {boolean} [littleEndian=true] littleEndian\n   * @property {boolean} [ewkb=true] Whether writes in EWKB format\n   * @property {Object} [nodata] NoData value for each axes\n   * @param {Object} opts options\n   */\n  constructor(opts) {\n    opts = opts || {};\n\n    /** @type {string} */\n    this.layout_ = opts.layout;\n    this.isLittleEndian_ = opts.littleEndian !== false;\n\n    this.isEWKB_ = opts.ewkb !== false;\n\n    /** @type {Array<Array<number>>} */\n    this.writeQueue_ = [];\n\n    /**\n     * @type {Object}\n     * @property {number} X NoData value for X\n     * @property {number} Y NoData value for Y\n     * @property {number} Z NoData value for Z\n     * @property {number} M NoData value for M\n     */\n    this.nodata_ = Object.assign({X: 0, Y: 0, Z: 0, M: 0}, opts.nodata);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeUint8(value) {\n    this.writeQueue_.push([1, value]);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeUint32(value) {\n    this.writeQueue_.push([4, value]);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeDouble(value) {\n    this.writeQueue_.push([8, value]);\n  }\n\n  /**\n   * @param {import('../coordinate.js').Coordinate} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writePoint(coords, layout) {\n    /**\n     * @type {Object}\n     * @property {number} X NoData value for X\n     * @property {number} Y NoData value for Y\n     * @property {number} [Z] NoData value for Z\n     * @property {number} [M] NoData value for M\n     */\n    const coordsObj = Object.assign.apply(\n      null,\n      layout.split('').map((axis, idx) => ({[axis]: coords[idx]})),\n    );\n\n    for (const axis of this.layout_) {\n      this.writeDouble(\n        axis in coordsObj ? coordsObj[axis] : this.nodata_[axis],\n      );\n    }\n  }\n\n  /**\n   * @param {Array<import('../coordinate.js').Coordinate>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeLineString(coords, layout) {\n    this.writeUint32(coords.length); // numPoints\n    for (let i = 0; i < coords.length; i++) {\n      this.writePoint(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} rings rings\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writePolygon(rings, layout) {\n    this.writeUint32(rings.length); // numRings\n    for (let i = 0; i < rings.length; i++) {\n      this.writeLineString(rings[i], layout); // as a LinearRing\n    }\n  }\n\n  /**\n   * @param {number} wkbType WKB Type ID\n   * @param {number} [srid] SRID\n   */\n  writeWkbHeader(wkbType, srid) {\n    wkbType %= 1000; // Assume 1000 is an upper limit for type ID\n    if (this.layout_.includes('Z')) {\n      wkbType += this.isEWKB_ ? 0x80000000 : 1000;\n    }\n    if (this.layout_.includes('M')) {\n      wkbType += this.isEWKB_ ? 0x40000000 : 2000;\n    }\n    if (this.isEWKB_ && Number.isInteger(srid)) {\n      wkbType |= 0x20000000;\n    }\n\n    this.writeUint8(this.isLittleEndian_ ? 1 : 0);\n    this.writeUint32(wkbType);\n    if (this.isEWKB_ && Number.isInteger(srid)) {\n      this.writeUint32(srid);\n    }\n  }\n\n  /**\n   * @param {Array<import('../coordinate.js').Coordinate>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiPoint(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(1);\n      this.writePoint(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiLineString(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(2);\n      this.writeLineString(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<Array<import('../coordinate.js').Coordinate>>>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiPolygon(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(3);\n      this.writePolygon(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<import('../geom/Geometry.js').default>} geometries geometries\n   */\n  writeGeometryCollection(geometries) {\n    this.writeUint32(geometries.length); // numItems\n\n    for (let i = 0; i < geometries.length; i++) {\n      this.writeGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geom geometry\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} [layout] layout\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} minimum layout made by common axes\n   */\n  findMinimumLayout(geom, layout = 'XYZM') {\n    /**\n     * @param {import(\"../geom/Geometry.js\").GeometryLayout} a A\n     * @param {import(\"../geom/Geometry.js\").GeometryLayout} b B\n     * @return {import(\"../geom/Geometry.js\").GeometryLayout} minimum layout made by common axes\n     */\n    const GeometryLayout_min = (a, b) => {\n      if (a === b) {\n        return a;\n      }\n\n      if (a === 'XYZM') {\n        // anything `b` is minimum\n        return b;\n      }\n      if (b === 'XYZM') {\n        // anything `a` is minimum\n        return a;\n      }\n\n      // otherwise, incompatible\n      return 'XY';\n    };\n\n    if (geom instanceof SimpleGeometry) {\n      return GeometryLayout_min(geom.getLayout(), layout);\n    }\n\n    if (geom instanceof GeometryCollection) {\n      const geoms = geom.getGeometriesArray();\n      for (let i = 0; i < geoms.length && layout !== 'XY'; i++) {\n        layout = this.findMinimumLayout(geoms[i], layout);\n      }\n    }\n\n    return layout;\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geom geometry\n   * @param {number} [srid] SRID\n   */\n  writeGeometry(geom, srid) {\n    /**\n     * @type {Object<import(\"../geom/Geometry.js\").Type, WKBGeometryType>}\n     */\n    const wkblut = {\n      Point: WKBGeometryType.POINT,\n      LineString: WKBGeometryType.LINE_STRING,\n      Polygon: WKBGeometryType.POLYGON,\n      MultiPoint: WKBGeometryType.MULTI_POINT,\n      MultiLineString: WKBGeometryType.MULTI_LINE_STRING,\n      MultiPolygon: WKBGeometryType.MULTI_POLYGON,\n      GeometryCollection: WKBGeometryType.GEOMETRY_COLLECTION,\n    };\n    const geomType = geom.getType();\n    const typeId = wkblut[geomType];\n\n    if (!typeId) {\n      throw new Error('GeometryType ' + geomType + ' is not supported');\n    }\n\n    // first call of writeGeometry() traverse whole geometries to determine its output layout if not specified on constructor.\n    if (!this.layout_) {\n      this.layout_ = this.findMinimumLayout(geom);\n    }\n\n    this.writeWkbHeader(typeId, srid);\n\n    if (geom instanceof SimpleGeometry) {\n      const writerLUT = {\n        Point: this.writePoint,\n        LineString: this.writeLineString,\n        Polygon: this.writePolygon,\n        MultiPoint: this.writeMultiPoint,\n        MultiLineString: this.writeMultiLineString,\n        MultiPolygon: this.writeMultiPolygon,\n      };\n      writerLUT[geomType].call(this, geom.getCoordinates(), geom.getLayout());\n    } else if (geom instanceof GeometryCollection) {\n      this.writeGeometryCollection(geom.getGeometriesArray());\n    }\n  }\n\n  getBuffer() {\n    const byteLength = this.writeQueue_.reduce((acc, item) => acc + item[0], 0);\n    const buffer = new ArrayBuffer(byteLength);\n    const view = new DataView(buffer);\n\n    let pos = 0;\n    this.writeQueue_.forEach((item) => {\n      switch (item[0]) {\n        case 1:\n          view.setUint8(pos, item[1]);\n          break;\n        case 4:\n          view.setUint32(pos, item[1], this.isLittleEndian_);\n          break;\n        case 8:\n          view.setFloat64(pos, item[1], this.isLittleEndian_);\n          break;\n        default:\n          break;\n      }\n\n      pos += item[0];\n    });\n\n    return buffer;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into multiple features on reading.\n * @property {boolean} [hex=true] Returns hex string instead of ArrayBuffer for output. This also is used as a hint internally whether it should load contents as text or ArrayBuffer on reading.\n * @property {boolean} [littleEndian=true] Use littleEndian for output.\n * @property {boolean} [ewkb=true] Use EWKB format for output.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout=null] Use specific coordinate layout for output features (null: auto detect)\n * @property {number} [nodataZ=0] If the `geometryLayout` doesn't match with geometry to be output, this value is used to fill missing coordinate value of Z.\n * @property {number} [nodataM=0] If the `geometryLayout` doesn't match with geometry to be output, this value is used to fill missing coordinate value of M.\n * @property {number|boolean} [srid=true] SRID for output. Specify integer value to enforce the value as a SRID. Specify `true` to extract from `dataProjection`. `false` to suppress the output. This option only takes effect when `ewkb` is `true`.\n */\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `Well-Known Binary` (WKB) format.\n * Also supports `Extended Well-Known Binary` (EWKB) format, used in PostGIS for example.\n *\n * @api\n */\nclass WKB extends FeatureFormat {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    this.splitCollection = Boolean(options.splitCollection);\n\n    this.viewCache_ = null;\n\n    this.hex_ = options.hex !== false;\n    this.littleEndian_ = options.littleEndian !== false;\n    this.ewkb_ = options.ewkb !== false;\n\n    this.layout_ = options.geometryLayout; // null for auto detect\n    this.nodataZ_ = options.nodataZ || 0;\n    this.nodataM_ = options.nodataM || 0;\n\n    this.srid_ = options.srid;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return this.hex_ ? 'text' : 'arraybuffer';\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return new Feature({\n      geometry: this.readGeometry(source, options),\n    });\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    let geometries = [];\n    const geometry = this.readGeometry(source, options);\n    if (this.splitCollection && geometry instanceof GeometryCollection) {\n      geometries = geometry.getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    return geometries.map((geometry) => new Feature({geometry}));\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    const view = getDataView(source);\n    if (!view) {\n      return null;\n    }\n\n    const reader = new WkbReader(view);\n    const geometry = reader.readGeometry();\n\n    this.viewCache_ = view; // cache for internal subsequent call of readProjection()\n    options = this.getReadOptions(source, options);\n    this.viewCache_ = null; // release\n\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    const view = this.viewCache_ || getDataView(source);\n    if (!view) {\n      return undefined;\n    }\n\n    const reader = new WkbReader(view);\n    reader.readWkbHeader();\n\n    return (\n      (reader.getSrid() && getProjection('EPSG:' + reader.getSrid())) ||\n      undefined\n    );\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return this.writeGeometry(feature.getGeometry(), options);\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return this.writeGeometry(\n      new GeometryCollection(features.map((f) => f.getGeometry())),\n      options,\n    );\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    options = this.adaptOptions(options);\n\n    const writer = new WkbWriter({\n      layout: this.layout_,\n      littleEndian: this.littleEndian_,\n      ewkb: this.ewkb_,\n\n      nodata: {\n        Z: this.nodataZ_,\n        M: this.nodataM_,\n      },\n    });\n\n    // extract SRID from `dataProjection`\n    let srid = Number.isInteger(this.srid_) ? Number(this.srid_) : null;\n    if (this.srid_ !== false && !Number.isInteger(this.srid_)) {\n      const dataProjection =\n        options.dataProjection && getProjection(options.dataProjection);\n      if (dataProjection) {\n        const code = dataProjection.getCode();\n        if (code.startsWith('EPSG:')) {\n          srid = Number(code.substring(5));\n        }\n      }\n    }\n\n    writer.writeGeometry(\n      transformGeometryWithOptions(geometry, true, options),\n      srid,\n    );\n    const buffer = writer.getBuffer();\n\n    return this.hex_ ? encodeHexString(buffer) : buffer;\n  }\n}\n\n/**\n * @param {ArrayBuffer} buffer source buffer\n * @return {string} encoded hex string\n */\nfunction encodeHexString(buffer) {\n  const view = new Uint8Array(buffer);\n  return Array.from(view.values())\n    .map((x) => (x < 16 ? '0' : '') + Number(x).toString(16).toUpperCase())\n    .join('');\n}\n\n/**\n * @param {string} text source text\n * @return {DataView} decoded binary buffer\n */\nfunction decodeHexString(text) {\n  const buffer = new Uint8Array(text.length / 2);\n  for (let i = 0; i < text.length / 2; i++) {\n    buffer[i] = parseInt(text.substr(i * 2, 2), 16);\n  }\n  return new DataView(buffer.buffer);\n}\n\n/**\n * @param {string | ArrayBuffer | ArrayBufferView} source source\n * @return {DataView} data view\n */\nfunction getDataView(source) {\n  if (typeof source === 'string') {\n    return decodeHexString(source);\n  }\n  if (ArrayBuffer.isView(source)) {\n    if (source instanceof DataView) {\n      return source;\n    }\n    return new DataView(source.buffer, source.byteOffset, source.byteLength);\n  }\n  if (source instanceof ArrayBuffer) {\n    return new DataView(source);\n  }\n  return null;\n}\n\nexport default WKB;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/Geometry.js\").GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon,\n};\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type Type.\n * @property {number|string} [value] Value.\n * @property {number} position Position.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  START: 0,\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n};\n\n/**\n * @type {Object<import(\"../geom/Geometry.js\").Type, string>}\n */\nconst wktTypeLookup = {\n  Point: 'POINT',\n  LineString: 'LINESTRING',\n  Polygon: 'POLYGON',\n  MultiPoint: 'MULTIPOINT',\n  MultiLineString: 'MULTILINESTRING',\n  MultiPolygon: 'MULTIPOLYGON',\n  GeometryCollection: 'GEOMETRYCOLLECTION',\n  Circle: 'CIRCLE',\n};\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean} [decimal] Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, decimal) {\n    decimal = decimal !== undefined ? decimal : false;\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal);\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_ = {\n      position: 0,\n      type: TokenType.START,\n    };\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    return this.token_.type == type;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    return this.parseGeometry_();\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n    let layout = 'XY';\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = 'XYZ';\n      } else if (dimInfo === M) {\n        layout = 'XYM';\n      } else if (dimInfo === ZM) {\n        layout = 'XYZM';\n      }\n      if (layout !== 'XY') {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    );\n  }\n\n  /**\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = /** @type {string} */ (token.value);\n      this.layout_ = this.parseGeometryLayout_();\n      const isEmpty = this.isEmptyGeometry_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        if (isEmpty) {\n          return new GeometryCollection([]);\n        }\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      }\n      const ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      let coordinates;\n\n      if (isEmpty) {\n        if (geomType == 'POINT') {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      } else {\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default:\n            break;\n        }\n      }\n\n      return new ctor(coordinates, this.layout_);\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ =\n      options.splitCollection !== undefined ? options.splitCollection : false;\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const geom = this.readGeometryFromText(text, options);\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, options);\n    if (this.splitCollection_ && geometry.getType() == 'GeometryCollection') {\n      geometries = /** @type {GeometryCollection} */ (\n        geometry\n      ).getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromText(text, options) {\n    const geometry = this.parse_(text);\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeaturesText(features, options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, options);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeGeometryText(geometry, options) {\n    return encode(transformGeometryWithOptions(geometry, true, options));\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === 'XYZ' || layout === 'XYZM') {\n    dimInfo += Z;\n  }\n  if (layout === 'XYM' || layout === 'XYZM') {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n};\n\n/**\n * Encode a geometry as WKT.\n * @param {import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  const type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  let wktType = wktTypeLookup[type];\n  if (typeof (/** @type {?} */ (geom).getFlatCoordinates) === 'function') {\n    const dimInfo = encodeGeometryLayout(\n      /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom),\n    );\n    if (dimInfo.length > 0) {\n      wktType += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return wktType + ' ' + EMPTY;\n  }\n  return wktType + '(' + enc + ')';\n}\n\nexport default WKT;\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport XML from './XML.js';\nimport {compareVersions} from '../string.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  readBooleanString,\n  readDecimal,\n  readDecimalString,\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  readString,\n} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wms'];\n\nfunction isV13(objectStack) {\n  return compareVersions(objectStack[0].version, '1.3') >= 0;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Service': makeObjectPropertySetter(readService),\n  'Capability': makeObjectPropertySetter(readCapability),\n});\n\nconst COMMON_CAPABILITY_PARSERS = {\n  'Request': makeObjectPropertySetter(readRequest),\n  'Exception': makeObjectPropertySetter(readException),\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  ...COMMON_CAPABILITY_PARSERS,\n  'UserDefinedSymbolization': makeObjectPropertySetter(\n    readUserDefinedSymbolization,\n  ),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS_V13 = makeStructureNS(\n  NAMESPACE_URIS,\n  COMMON_CAPABILITY_PARSERS,\n);\n\n/**\n * @typedef {Object} RootObject\n * @property {string} version Version\n * @property {boolean} v13 Whether version is 1.3 or higher\n */\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      [],\n    );\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\nconst COMMON_SERVICE_PARSERS = {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, COMMON_SERVICE_PARSERS);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS_V13 = makeStructureNS(NAMESPACE_URIS, {\n  ...COMMON_SERVICE_PARSERS,\n  'LayerLimit': makeObjectPropertySetter(readPositiveInteger),\n  'MaxWidth': makeObjectPropertySetter(readPositiveInteger),\n  'MaxHeight': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n  'ContactPosition': makeObjectPropertySetter(readString),\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPerson': makeObjectPropertySetter(readString),\n  'ContactOrganization': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AddressType': makeObjectPropertySetter(readString),\n  'Address': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'StateOrProvince': makeObjectPropertySetter(readString),\n  'PostCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeArrayPusher(readString),\n});\n\nconst COMMON_LAYER_PARSERS = {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n  'Dimension': makeObjectPropertyPusher(readDimension),\n  'Attribution': makeObjectPropertySetter(readAttribution),\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n  'Identifier': makeObjectPropertyPusher(readString),\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'Style': makeObjectPropertyPusher(readStyle),\n  'Layer': makeObjectPropertyPusher(readLayer),\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  ...COMMON_LAYER_PARSERS,\n  'SRS': makeObjectPropertyPusher(readString),\n  'Extent': makeObjectPropertySetter(readExtent),\n  'ScaleHint': makeObjectPropertyPusher(readScaleHint),\n  'LatLonBoundingBox': makeObjectPropertySetter((node, objectStack) =>\n    readBoundingBox(node, objectStack, false),\n  ),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS_V13 = makeStructureNS(NAMESPACE_URIS, {\n  ...COMMON_LAYER_PARSERS,\n  'CRS': makeObjectPropertyPusher(readString),\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\n    readEXGeographicBoundingBox,\n  ),\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\n  'GetMap': makeObjectPropertySetter(readOperationType),\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertyPusher(readString),\n  'DCPType': makeObjectPropertyPusher(readDCPType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\nfunction readUserDefinedSymbolization(node, objectStack) {\n  return {\n    'SupportSLD': !!readBooleanString(\n      node.getAttribute('UserDefinedSymbolization'),\n    ),\n    'UserLayer': !!readBooleanString(node.getAttribute('UserLayer')),\n    'UserStyle': !!readBooleanString(node.getAttribute('UserStyle')),\n    'RemoteWFS': !!readBooleanString(node.getAttribute('RemoteWFS')),\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {boolean} withCrs Whether to include the CRS attribute.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack, withCrs = true) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy')),\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy')),\n  ];\n\n  const result = {\n    extent,\n    res: resolutions,\n  };\n  if (!withCrs) {\n    return result;\n  }\n\n  /** @type {RootObject} */\n  if (isV13(objectStack)) {\n    result.crs = node.getAttribute('CRS');\n  } else {\n    result.srs = node.getAttribute('SRS');\n  }\n\n  return result;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['northBoundLatitude']);\n  if (\n    westBoundLongitude === undefined ||\n    southBoundLatitude === undefined ||\n    eastBoundLongitude === undefined ||\n    northBoundLatitude === undefined\n  ) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude,\n    southBoundLatitude,\n    eastBoundLongitude,\n    northBoundLatitude,\n  ];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop(\n    {},\n    isV13(objectStack) ? CAPABILITY_PARSERS_V13 : CAPABILITY_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop(\n    {},\n    isV13(objectStack) ? SERVICE_PARSERS_V13 : SERVICE_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  const layerObject = pushParseAndPop(\n    {},\n    isV13(objectStack) ? LAYER_PARSERS_V13 : LAYER_PARSERS,\n    node,\n    objectStack,\n  );\n\n  if (layerObject['Layer'] === undefined) {\n    return Object.assign(layerObject, readLayer(node, objectStack));\n  }\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const v13 = isV13(objectStack);\n\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (\n    objectStack[objectStack.length - 1]\n  );\n\n  const layerObject = pushParseAndPop(\n    {},\n    v13 ? LAYER_PARSERS_V13 : LAYER_PARSERS,\n    node,\n    objectStack,\n  );\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'AuthorityURL'];\n  if (v13) {\n    addKeys.push('CRS');\n  } else {\n    addKeys.push('SRS', 'Dimension');\n  }\n  addKeys.forEach(function (key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['BoundingBox', 'Attribution'];\n  if (v13) {\n    replaceKeys.push(\n      'Dimension',\n      'EX_GeographicBoundingBox',\n      'MinScaleDenominator',\n      'MaxScaleDenominator',\n    );\n  } else {\n    replaceKeys.push('LatLonBoundingBox', 'ScaleHint', 'Extent');\n  }\n  replaceKeys.forEach(function (key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n  };\n\n  if (isV13(objectStack)) {\n    Object.assign(dimensionObject, {\n      'default': node.getAttribute('default'),\n      'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n      'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n      'current': readBooleanString(node.getAttribute('current')),\n      'values': readString(node),\n    });\n  }\n  return dimensionObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Extent object.\n */\nfunction readExtent(node, objectStack) {\n  return {\n    'name': node.getAttribute('name'),\n    'default': node.getAttribute('default'),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} ScaleHint object.\n */\nfunction readScaleHint(node, objectStack) {\n  return {\n    'min': readDecimalString(node.getAttribute('min')),\n    'max': readDecimalString(node.getAttribute('max')),\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height')),\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\nexport default WMSCapabilities;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase,\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase,\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_,\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers,\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_,\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_,\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * Download control to download vectors features\n * Supports GPX, KML, GeoJSON formats\n */\nimport Feature from 'ol/Feature';\nimport * as format from 'ol/format';\nimport LineString from 'ol/geom/LineString';\n\nimport Button from './Button';\n\nconst subMenuHTML = '\\\n  <p><a mime=\"application/gpx+xml\">GPX</a></p>\\\n  <p><a mime=\"vnd.google-earth.kml+xml\">KML</a></p>\\\n  <p><a mime=\"application/json\">GeoJSON</a></p>',\n\n  subMenuHTMLfr = '\\\n  <p>Cliquer sur un format ci-dessous pour obtenir\\\n  un fichier contenant les éléments visibles dans la fenêtre:</p>' +\n  subMenuHTML;\n\n//BEST BUG incompatible with clusters\nclass Download extends Button {\n  constructor(opt) {\n    const options = {\n      // Button options\n      className: 'myol-button-download',\n      subMenuId: 'myol-button-download',\n      subMenuHTML: subMenuHTML,\n      subMenuHTMLfr: subMenuHTMLfr,\n\n      // savedLayer: layer, // Layer to download\n      fileName: document.title || 'openlayers', // Name of the file to be downloaded \n      //BEST name from feature\n\n      ...opt,\n    };\n\n    super(options);\n\n    // Add a hidden element to handle the download\n    this.hiddenEl = document.createElement('a');\n    this.hiddenEl.target = '_self';\n    this.hiddenEl.style = 'display:none';\n    this.element.appendChild(this.hiddenEl);\n  }\n\n  subMenuAction(evt) {\n    const map = this.getMap(),\n      formatName = evt.target.innerText,\n      downloadFormat = new format[formatName](),\n      mime = evt.target.getAttribute('mime'),\n      mapExtent = map.getView().calculateExtent();\n\n    let featuresToSave = [];\n\n    if (this.options.savedLayer)\n      featuresToSave = this.options.savedLayer.getSource().getFeatures();\n    else\n      // Get all visible features\n      map.getLayers().forEach(l => {\n        if (!l.getProperties().marker &&\n          l.getSource() && l.getSource().forEachFeatureInExtent) // For vector layers only\n          l.getSource().forEachFeatureInExtent(mapExtent, feature =>\n            featuresToSave.push(feature)\n          );\n      });\n\n    if (formatName === 'GPX')\n      // Transform *Polygons in linestrings\n      for (const f in featuresToSave) {\n        const geometry = featuresToSave[f].getGeometry();\n\n        if (geometry.getType().includes('Polygon')) {\n          geometry.getCoordinates().forEach(coords => {\n            if (typeof coords[0][0] === 'number')\n              // Polygon\n              featuresToSave.push(new Feature(new LineString(coords)));\n            else\n              // MultiPolygon\n              coords.forEach(subCoords =>\n                featuresToSave.push(new Feature(new LineString(subCoords)))\n              );\n          });\n        }\n      }\n\n    const data = downloadFormat.writeFeatures(featuresToSave, {\n        dataProjection: 'EPSG:4326',\n        featureProjection: map.getView().getProjection(), // Map projection\n        decimals: 5,\n      })\n      // Beautify the output\n      .replace(/<[a-z]*>(0|null|[[object Object]|[NTZa:-]*)<\\/[a-z]*>/gu, '')\n      .replace(/<Data name=\"[a-z_]*\"\\/>|<Data name=\"[a-z_]*\"><\\/Data>|,\"[a-z_]*\":\"\"/gu, '')\n      .replace(/<Data name=\"copy\"><value>[a-z_.]*<\\/value><\\/Data>|,\"copy\":\"[a-z_.]*\"/gu, '')\n      .replace(/(<\\/gpx|<\\/?wpt|<\\/?trk>|<\\/?rte>|<\\/kml|<\\/?Document)/gu, '\\n$1')\n      .replace(/(<\\/?Placemark|POINT|LINESTRING|POLYGON|<Point|\"[a-z_]*\":|\\})/gu, '\\n$1')\n      .replace(/(<name|<ele|<sym|<link|<type|<rtept|<\\/?trkseg|<\\/?ExtendedData)/gu, '\\n\\t$1')\n      .replace(/(<trkpt|<Data|<LineString|<\\/?Polygon|<Style)/gu, '\\n\\t\\t$1')\n      .replace(/(<[a-z]+BoundaryIs)/gu, '\\n\\t\\t\\t$1')\n      .replace(/ ([cvx])/gu, '\\n\\t$1');\n\n    const file = new Blob([data], {\n      type: mime,\n    });\n\n    this.hiddenEl.download = this.options.fileName + '.' + formatName.toLowerCase();\n    this.hiddenEl.href = URL.createObjectURL(file);\n    this.hiddenEl.click();\n\n    // Close the submenu\n    this.element.classList.remove('myol-display-submenu');\n  }\n}\n\nexport default Download;","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().startsWith('ne');\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport {abstract, getUid} from '../util.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord,\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord)),\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      }),\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection(),\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection,\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z,\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      const entry = this.pop();\n      if (entry instanceof Disposable) {\n        entry.dispose();\n      }\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection_ = undefined;\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection_) {\n      this.renderedProjection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection_) {\n      this.tileCache_.clear();\n      this.renderedProjection_ = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  const bbox =\n    v13 && axisOrientation.startsWith('ne')\n      ? [extent[1], extent[0], extent[3], extent[2]]\n      : extent;\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(baseUrl, params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  if (options.params !== undefined && baseParams['LAYER'] === undefined) {\n    const layers = baseParams['LAYERS'];\n    const isSingleLayer = !Array.isArray(layers) || layers.length !== 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams, expandUrl} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().startsWith('ne');\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * Many simplified display of various tiles layers services\n */\n\nimport BingMaps from 'ol/source/BingMaps.js';\nimport {\n  get,\n} from 'ol/proj';\nimport {\n  getTopLeft,\n  getWidth,\n} from 'ol/extent';\nimport OSM from 'ol/source/OSM.js';\nimport SourceXYZ from 'ol/source/XYZ.js';\nimport TilegridWMTS from 'ol/tilegrid/WMTS.js';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMS from 'ol/source/TileWMS.js';\nimport WMTS from 'ol/source/WMTS.js';\n\n/**\n * Virtual class to factorise XYZ layers code\n */\nclass XYZ extends TileLayer {\n  constructor(options) {\n    super({\n      source: new SourceXYZ(options),\n      ...options,\n    });\n  }\n}\n\n/**\n * Simple layer to be used when a layer is out of extent\n * API : https://api-docs.carto.com/\n */\nexport class Positron extends XYZ {\n  constructor(options) {\n    super({\n      url: 'https://basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png',\n      attributions: '<a href=\"https://carto.com/attribution/\">CartoDB</a>',\n      ...options,\n    });\n  }\n}\n\n/**\n * Simple layer to be used when a layer is out of scope\n */\nexport class NoTile extends XYZ {\n  constructor(options) {\n    super({\n      url: 'https://ecn.t0.tiles.virtualearth.net/tiles/r000000000000000000.jpeg?g=1',\n      attributions: 'Out of zoom',\n\n      ...options,\n    });\n  }\n}\n\n/**\n * OpenStreetMap & co\n * Map : https://www.openstreetmap.org/\n * API : https://wiki.openstreetmap.org/wiki/API/\n */\nexport class OpenStreetMap extends TileLayer {\n  constructor(options) {\n    super({\n      source: new OSM(options),\n      ...options,\n    });\n  }\n}\n\n/**\n * Nice OSM style\n * Map : opentopomap.org\n * API : https://www.opentopodata.org/#public-api\n */\nexport class OpenTopo extends OpenStreetMap {\n  constructor() {\n    super({\n      url: 'https://{a-c}.tile.opentopomap.org/{z}/{x}/{y}.png',\n      maxZoom: 17,\n      attributions: '<a href=\"https://opentopomap.org\">OpenTopoMap</a> ' +\n        '(<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\n    });\n  }\n}\n\n/**\n * Maps of https://www.refuges.info/\n * Map : https://maps.refuges.info/\n * Doc : https://wiki.openstreetmap.org/wiki/Hiking/mri\n */\nexport class MRI extends OpenStreetMap {\n  constructor() {\n    super({\n      url: 'https://maps.refuges.info/hiking/{z}/{x}/{y}.png',\n      maxZoom: 18,\n      attributions: '<a href=\"https://wiki.openstreetmap.org/wiki/Hiking/mri\">Refuges.info</a>',\n    });\n  }\n}\n\n/**\n * Germany maps\n * Map : https://www.kompass.de/wanderkarte/\n * Doc : https://www.kompass.de/\n */\nexport class Kompass extends OpenStreetMap { // Austria\n  constructor(options = {}) {\n    super({\n      hidden: !options.key && options.subLayer !== 'osm', // For LayerSwitcher\n      url: options.key ?\n        'https://map{1-4}.kompass.de/{z}/{x}/{y}/kompass_' + options.subLayer + '?key=' + options.key : // Specific\n        'https://map{1-5}.tourinfra.com/tiles/kompass_' + options.subLayer + '/{z}/{x}/{y}.png', // No key\n      maxZoom: 17,\n      attributions: '<a href=\"https://www.kompass.de/\">Kompass</a>',\n\n      ...options,\n    });\n  }\n}\n\n/**\n * OSM originated maps\n * Doc : https://www.thunderforest.com/maps/\n * Key : https://manage.thunderforest.com/dashboard\n */\nexport class Thunderforest extends OpenStreetMap {\n  constructor(options = {}) {\n    super({\n      hidden: !options.key, // For LayerSwitcher\n      url: 'https://{a-c}.tile.thunderforest.com/' + options.subLayer + '/{z}/{x}/{y}.png?apikey=' + options.key,\n      maxZoom: 22,\n      // subLayer: 'outdoors', ...\n      // key: '...',\n      attributions: '<a href=\"https://www.thunderforest.com/\">Thunderforest</a>',\n\n      ...options, // Include key\n    });\n  }\n}\n\n/**\n * IGN France\n * Doc & API : https://geoservices.ign.fr/services-web\n * Key : https://cartes.gouv.fr\n */\nexport class IGN extends TileLayer {\n  constructor(options = {}) {\n    const IGNresolutions = [],\n      IGNmatrixIds = [];\n\n    for (let i = 0; i < 18; i++) {\n      IGNresolutions[i] = getWidth(get('EPSG:3857').getExtent()) / 256 / (2 ** i);\n      IGNmatrixIds[i] = i.toString();\n    }\n\n    super({\n      source: new WMTS({\n        // WMTS options\n        url: options.key ? 'https://data.geopf.fr/private/wmts?apikey=' + options.key : 'https://wmts.geopf.fr/wmts',\n        style: 'normal',\n        matrixSet: 'PM',\n        format: 'image/jpeg',\n        attributions: '&copy; <a href=\"https://www.geoportail.gouv.fr/\" target=\"_blank\">IGN</a>',\n        tileGrid: new TilegridWMTS({\n          origin: [-20037508, 20037508],\n          resolutions: IGNresolutions,\n          matrixIds: IGNmatrixIds,\n        }),\n\n        // IGN options\n        ...options, // Include layer\n      }),\n\n      ...options, // For layer limits\n    });\n  }\n}\n\n/**\n * Swisstopo https://api.geo.admin.ch/\n * Don't need key nor referer\n * API : https://api3.geo.admin.ch/services/sdiservices.html#wmts\n */\nexport class SwissTopo extends TileLayer {\n  constructor(opt) {\n    const options = {\n      host: 'https://wmts2{0-4}.geo.admin.ch/1.0.0/',\n      subLayer: 'ch.swisstopo.pixelkarte-farbe',\n      maxResolution: 2000, // Resolution limit above which we switch to a more global service\n      extent: [640000, 5730000, 1200000, 6100000],\n      attributions: '&copy <a href=\"https://map.geo.admin.ch/\">SwissTopo</a>',\n\n      ...opt,\n    };\n\n    const projectionExtent = get('EPSG:3857').getExtent(),\n      resolutions = [],\n      matrixIds = [];\n\n    for (let r = 0; r < 18; ++r) {\n      resolutions[r] = getWidth(projectionExtent) / 256 / (2 ** r);\n      matrixIds[r] = r;\n    }\n\n    super({\n      source: new WMTS(({\n        url: options.host + options.subLayer +\n          '/default/current/3857/{TileMatrix}/{TileCol}/{TileRow}.jpeg',\n        tileGrid: new TilegridWMTS({\n          origin: getTopLeft(projectionExtent),\n          resolutions: resolutions,\n          matrixIds: matrixIds,\n        }),\n        requestEncoding: 'REST',\n      })),\n\n      ...options, // For layer limits\n    });\n  }\n}\n\n/**\n * Spain IGN\n * Map : https://www.ign.es/iberpix/visor\n * API : https://api-maps.ign.es/\n */\nexport class IgnES extends XYZ {\n  constructor(opt) {\n    const options = {\n      host: 'https://www.ign.es/wmts/',\n      server: 'mapa-raster',\n      subLayer: 'MTN',\n      maxZoom: 20,\n      attributions: '&copy; <a href=\"https://www.ign.es/\">IGN España</a>',\n\n      ...opt,\n    };\n\n    super({\n      url: options.host + options.server +\n        '?layer=' + options.subLayer +\n        '&Service=WMTS&Request=GetTile&Version=1.0.0' +\n        '&Format=image/jpeg' +\n        '&style=default&tilematrixset=GoogleMapsCompatible' +\n        '&TileMatrix={z}&TileCol={x}&TileRow={y}',\n\n      ...options,\n    });\n  }\n}\n\n/**\n * Italy IGM\n * Doc : https://gn.mase.gov.it/\n * Map : http://www.pcn.minambiente.it/viewer/\n */\nexport class IGM extends TileLayer {\n  constructor() {\n    super({\n      source: new TileWMS({\n        url: 'https://chemineur.fr/assets/proxy/?s=minambiente.it', // Not available via https\n        attributions: '&copy <a href=\"https://gn.mase.gov.it/\">IGM</a>',\n      }),\n      maxResolution: 120,\n      extent: [720000, 4380000, 2070000, 5970000],\n    });\n  }\n\n  setMapInternal(map) {\n    const view = map.getView();\n\n    view.on('change:resolution', () => this.updateResolution(view));\n    this.updateResolution(view);\n\n    return super.setMapInternal(map);\n  }\n\n  updateResolution(view) {\n    const mapResolution = view.getResolutionForZoom(view.getZoom());\n    let layerResolution = 25000; // mapResolution < 10\n\n    if (mapResolution > 10) layerResolution = 100000;\n    if (mapResolution > 30) layerResolution = 250000;\n\n    this.getSource().updateParams({\n      type: 'png',\n      map: '/ms_ogc/WMS_v1.3/raster/IGM_' + layerResolution + '.map',\n      layers: (layerResolution === 100000 ? 'MB.IGM' : 'CB.IGM') + layerResolution,\n    });\n  }\n}\n\n/**\n * Ordnance Survey : Great Britain\n * API & key : https://osdatahub.os.uk/\n */\nexport class OS extends XYZ {\n  constructor(opt) {\n    const options = {\n      hidden: !opt.key, // For LayerSwitcher\n      subLayer: 'Outdoor_3857',\n      minZoom: 7,\n      maxZoom: 16,\n      extent: [-1198263, 6365000, 213000, 8702260],\n      attributions: '&copy <a href=\"https://explore.osmaps.com/\">UK Ordnancesurvey maps</a>',\n\n      ...opt,\n    };\n\n    super({\n      url: 'https://api.os.uk/maps/raster/v1/zxy/' +\n        options.subLayer +\n        '/{z}/{x}/{y}.png' +\n        '?key=' + options.key,\n\n      ...options,\n    });\n  }\n}\n\n/**\n * ArcGIS (Esri)\n * Map : https://www.arcgis.com/home/webmap/viewer.html\n * API : https://developers.arcgis.com/javascript/latest/\n * No key\n */\nexport class ArcGIS extends XYZ {\n  constructor(opt) {\n    const options = {\n      host: 'https://server.arcgisonline.com/ArcGIS/rest/services/',\n      subLayer: 'World_Imagery',\n      maxZoom: 19,\n      attributions: '&copy; <a href=\"https://www.arcgis.com/\">ArcGIS (Esri)</a>',\n\n      ...opt,\n    };\n\n    super({\n      url: options.host + options.subLayer + '/MapServer/tile/{z}/{y}/{x}',\n      ...options,\n    });\n  }\n}\n\n/**\n * Maxbox (Maxar)\n * Key : https://www.mapbox.com/\n */\nexport class Maxbox extends XYZ {\n  constructor(options = {}) {\n    super({\n      hidden: !options.key, // For LayerSwitcher\n      url: 'https://api.mapbox.com/v4/' + options.tileset + '/{z}/{x}/{y}@2x.webp?access_token=' + options.key,\n      // No maxZoom\n      attributions: '&copy; <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    });\n  }\n}\n\n/**\n * Google\n */\nexport class Google extends XYZ {\n  constructor(opt) {\n    const options = {\n      subLayers: 'p', // Terrain\n      maxZoom: 22,\n      attributions: '&copy; <a href=\"https://www.google.com/maps\">Google</a>',\n\n      ...opt,\n    };\n\n    super({\n      url: 'https://mt{0-3}.google.com/vt/lyrs=' + options.subLayers + '&hl=fr&x={x}&y={y}&z={z}',\n      ...options,\n    });\n  }\n}\n\n/**\n * Bing (Microsoft)\n * Doc: https://docs.microsoft.com/en-us/bingmaps/getting-started/\n * Key : https://www.bingmapsportal.com/\n */\nexport class Bing extends TileLayer {\n  constructor(options = {}) {\n    super({\n      hidden: !options.key, // For LayerSwitcher\n\n      // Mandatory\n      // 'key',\n      imagerySet: 'Road',\n\n      // No explicit zoom\n      // attributions, defined by ol.source.BingMaps\n\n      ...options,\n    });\n\n    //HACK : Avoid to call https://dev.virtualearth.net/... if no bing layer is visible\n    this.on('change:visible', evt => {\n      if (evt.target.getVisible() && // When the layer becomes visible\n        !this.getSource()) // Only once\n        this.setSource(new BingMaps(options));\n    });\n  }\n}\n\n/**\n * RGB elevation (Mapbox)\n * Each pixel color encode the elevation\n * Doc: https://docs.mapbox.com/data/tilesets/guides/access-elevation-data/\n * elevation = -10000 + (({R} * 256 * 256 + {G} * 256 + {B}) * 0.1)\n * Key : https://www.mapbox.com/\n */\nexport class MapboxElevation extends Maxbox {\n  constructor(options = {}) {\n    super({\n      hidden: !options.key, // For LayerSwitcher\n      ...options,\n      tileset: 'mapbox.terrain-rgb',\n    });\n  }\n}\n\n/**\n * RGB elevation (MapTiler)\n * Doc: https://cloud.maptiler.com/tiles/terrain-rgb-v2/\n * Doc: https://documentation.maptiler.com/hc/en-us/articles/4405444055313-RGB-Terrain-by-MapTiler\n * elevation = -10000 + ((R * 256 * 256 + G * 256 + B) * 0.1\n * Key : https://cloud.maptiler.com/account/keys/\n */\n/*// Backup of Maxbox elevation\nexport class MapTilerElevation extends XYZ {\n  constructor(options = {}) {\n    super({\n      hidden: !options.key, // For LayerSwitcher\n      url: 'https://api.maptiler.com/tiles/terrain-rgb/{z}/{x}/{y}.png?key=' + options.key,\n      maxZoom: 12,\n      attributions: '<a href=\"https://www.maptiler.com/copyright/\"\">&copy; MapTiler</a> ' + '<a href=\"https://www.openstreetmap.org/copyright\"\">&copy; OpenStreetMap contributors</a>',\n\t  \n      ...options,\n    });\n  }\n}*/\n\n/**\n * Tile layers examples\n */\nexport function collection(options = {}) {\n  return {\n    'OSM': new OpenStreetMap(),\n    'OSM outdoors': new Thunderforest({\n      key: options.thunderforest, // For simplified options\n      ...options.thunderforest, // Include key\n      subLayer: 'outdoors',\n    }),\n    'OpenTopo': new OpenTopo(),\n    'OSM transports': new Thunderforest({\n      key: options.thunderforest, // For simplified options\n      ...options.thunderforest, // Include key\n      subLayer: 'transport',\n    }),\n    'OSM cyclo': new OpenStreetMap({\n      url: 'https://{a-c}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png',\n    }),\n    'Refuges.info': new MRI(),\n\n    'IGN TOP25': new IGN({\n      layer: 'GEOGRAPHICALGRIDSYSTEMS.MAPS',\n      key: options.ign, // Include key\n      ...options.ign, // Include key\n    }),\n    'IGN V2': new IGN({\n      layer: 'GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2',\n      format: 'image/png',\n    }),\n    'IGN N+1': new IGN({\n      layer: 'GEOGRAPHICALGRIDSYSTEMS.MAPS.BDUNI.J1',\n      format: 'image/png',\n    }),\n    'IGN cartes 1950': new IGN({\n      layer: 'GEOGRAPHICALGRIDSYSTEMS.MAPS.SCAN50.1950',\n      extent: [-580000, 506000, 1070000, 6637000],\n      minZoom: 6,\n    }),\n\n    'SwissTopo': new SwissTopo(),\n    'Österreich Kompass': new Kompass({\n      subLayer: 'osm', // No key\n    }),\n    'Kompas winter': new Kompass({\n      key: options.kompass, // For simplified options\n      ...options.kompass, // Include key\n      subLayer: 'winter',\n      maxZoom: 22,\n    }),\n    'England': new OS({\n      key: options.os, // For simplified options\n      ...options.os, // Include key\n    }),\n    'Italie': new IGM(),\n    'España': new IgnES(),\n    'Google': new Google(),\n\n    'Maxar': new Maxbox({\n      key: options.mapbox, // For simplified options\n      ...options.mapbox, // Include key\n      tileset: 'mapbox.satellite',\n    }),\n    'Photo Google': new Google({\n      subLayers: 's',\n    }),\n    'Photo ArcGIS': new ArcGIS(),\n    'Photo Bing': new Bing({\n      key: options.bing, // For simplified options\n      ...options.bing, // Include key\n      imagerySet: 'Aerial',\n    }),\n\n    'Photo IGN': new IGN({\n      layer: 'ORTHOIMAGERY.ORTHOPHOTOS',\n    }),\n    'Photo IGN 1950-65': new IGN({\n      layer: 'ORTHOIMAGERY.ORTHOPHOTOS.1950-1965',\n      style: 'BDORTHOHISTORIQUE',\n      format: 'image/png',\n      extent: [-580000, 506000, 1070000, 6637000],\n      minZoom: 12,\n    }),\n    'IGN E.M. 1820-66': new IGN({\n      layer: 'GEOGRAPHICALGRIDSYSTEMS.ETATMAJOR40',\n      extent: [-580000, 506000, 1070000, 6637000],\n      minZoom: 6,\n    }),\n    'Cadastre': new IGN({\n      layer: 'CADASTRALPARCELS.PARCELLAIRE_EXPRESS',\n      format: 'image/png',\n      extent: [-580000, 506000, 1070000, 6637000],\n      minZoom: 6,\n    }),\n    /* //BEST Cassini ? clé\n\t'IGN Cassini': new IGN({\n      ...options.ign,\n      layer: 'GEOGRAPHICALGRIDSYSTEMS.CASSINI',\n      key: 'an7nvfzojv5wa96dsga5nk8w', //BEST use owner key\n    }),\n\t*/\n  };\n}\n\nexport function examples(options = {}) {\n  return {\n    ...collection(options),\n\n    'OSM fr': new OpenStreetMap({\n      url: 'https://{a-c}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png',\n    }),\n    'OSM orthos FR': new OpenStreetMap({\n      url: 'https://wms.openstreetmap.fr/tms/1.0.0/tous_fr/{z}/{x}/{y}',\n    }),\n\n    'ThF cycle': new Thunderforest({\n      key: options.thunderforest, // For simplified options\n      ...options.thunderforest, // Include key\n      subLayer: 'cycle',\n      maxZoom: 14,\n    }),\n    'ThF trains': new Thunderforest({\n      key: options.thunderforest, // For simplified options\n      ...options.thunderforest, // Include key\n      subLayer: 'pioneer',\n    }),\n    'ThF villes': new Thunderforest({\n      key: options.thunderforest, // For simplified options\n      ...options.thunderforest, // Include key\n      subLayer: 'neighbourhood',\n    }),\n    'ThF landscape': new Thunderforest({\n      key: options.thunderforest, // For simplified options\n      ...options.thunderforest, // Include key\n      subLayer: 'landscape',\n    }),\n    'ThF contraste': new Thunderforest({\n      key: options.thunderforest, // For simplified options\n      ...options.thunderforest, // Include key\n      subLayer: 'mobile-atlas',\n    }),\n\n    'OS light': new OS({\n      key: options.os, // For simplified options\n      ...options.os, // Include key\n      subLayer: 'Light_3857',\n    }),\n    'OS road': new OS({\n      key: options.os, // For simplified options\n      ...options.os, // Include key\n      subLayer: 'Road_3857',\n    }),\n    'Kompas topo': new Kompass({\n      key: options.kompass, // For simplified options\n      ...options.kompass, // Include key\n      subLayer: 'topo',\n    }),\n\n    'Bing': new Bing({\n      key: options.bing, // For simplified options\n      ...options.bing, // Include key\n      imagerySet: 'Road',\n    }),\n    'Bing hybrid': new Bing({\n      key: options.bing, // For simplified options\n      ...options.bing, // Include key\n      imagerySet: 'AerialWithLabels',\n    }),\n\n    'Photo Swiss': new SwissTopo({\n      subLayer: 'ch.swisstopo.swissimage',\n    }),\n    'Photo España': new IgnES({\n      server: 'pnoa-ma',\n      subLayer: 'OI.OrthoimageCoverage',\n    }),\n\n    'Google road': new Google({\n      subLayers: 'm', // Roads\n    }),\n    'Google hybrid': new Google({\n      subLayers: 's,h',\n    }),\n\n    'MapBox elevation': new MapboxElevation({\n      key: options.mapbox, // For simplified options\n      ...options.mapbox, // Include key\n    }),\n\n    'Positron': new Positron(),\n    'No tile': new NoTile(),\n    'Blank': new TileLayer(),\n  };\n}","/**\n * Layer to show around partial layer\n * Outside of layer resolution or extent\n * Must be added to map before partial layers\n */\n\nimport {\n  containsExtent,\n} from 'ol/extent';\nimport * as layerTile from './TileLayerCollection';\n\nclass BackgroundLayer extends layerTile.Positron {\n  constructor(options) {\n    // High resolution background layer\n    super({\n      minResolution: 20,\n      visible: false,\n\n      ...options,\n    });\n\n    // Low resolution background layer\n    this.lowResLayer = new layerTile.NoTile({\n      maxResolution: this.getMinResolution(),\n      visible: false,\n    });\n  }\n\n  setMapInternal(map) {\n    map.addLayer(this.lowResLayer); // Substitution for low resoltions\n    map.on('precompose', () => this.tuneDisplay(map));\n\n    return super.setMapInternal(map);\n  }\n\n  tuneDisplay(map) {\n    const mapExtent = map.getView().calculateExtent(map.getSize());\n\n    let needed = true;\n\n    map.getLayers().forEach(l => {\n      if (l.getUseInterimTilesOnError && // Is a tile layer\n        l !== this && l !== this.lowResLayer && // Not one of the background layers\n        l.isVisible() && // Is visible\n        containsExtent(l.getExtent() || mapExtent, mapExtent))\n        needed = false;\n    });\n\n    this.setVisible(needed);\n    this.lowResLayer.setVisible(needed);\n  }\n}\n\nexport default BackgroundLayer;","/**\n * LengthLine control to display the length of an hovered line\n */\n\nimport Control from 'ol/control/Control';\nimport {\n  getLength as sphereGetLength,\n} from 'ol/sphere';\n\nimport './lengthLine.css';\n\nclass LengthLine extends Control {\n  constructor() {\n    super({\n      element: document.createElement('div'), //HACK button not visible\n    });\n\n    this.element.className = 'ol-control myol-length-line';\n  }\n\n  setMap(map) {\n    map.on('pointermove', evt => {\n      this.element.innerHTML = ''; // Clear the measure if hover no feature\n\n      // Find new features to hover\n      map.forEachFeatureAtPixel(\n        evt.pixel,\n        feature => this.calculateLength(feature), {\n          hitTolerance: 6, // Default is 0\n        });\n    });\n\n    return super.setMap(map);\n  }\n\n  //BEST calculate distance to the ends\n  calculateLength(feature) {\n    if (feature) {\n      const geometry = feature.getGeometry(),\n        length = sphereGetLength(geometry),\n        fcs = this.getFlatCoordinates(geometry);\n      let denivPos = 0,\n        denivNeg = 0;\n\n      // Height difference calculation\n      for (let c = 5; c < fcs.length; c += 3) {\n        const d = fcs[c] - fcs[c - 3];\n\n        if (d > 0)\n          denivPos += d;\n        else\n          denivNeg -= d;\n      }\n\n      // Display\n      //BEST BUG display length of GPS colimator\n      if (length) {\n        this.element.innerHTML =\n          // Line length\n          length < 1000 ?\n          (Math.round(length)) + ' m' :\n          (Math.round(length / 10) / 100) + ' km' +\n          // Height difference\n          (denivPos ? ' +' + denivPos + ' m' : '') +\n          (denivNeg ? ' -' + denivNeg + ' m' : '');\n\n        return false; // Continue detection (for editor that has temporary layers)\n      }\n    }\n  }\n\n  getFlatCoordinates(geometry) {\n    let fcs = [];\n\n    if (geometry.stride === 3)\n      fcs = geometry.flatCoordinates;\n\n    if (geometry.getType() === 'GeometryCollection')\n      for (const g of geometry.getGeometries())\n        fcs.push(...this.getFlatCoordinates(g));\n\n    return fcs;\n  }\n}\n\nexport default LengthLine;","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * Load control to load vectors features\n * Supports any format supported by Openlayers\n */\n\nimport * as format from 'ol/format';\nimport Icon from 'ol/style/Icon';\nimport {\n  isEmpty,\n} from 'ol/extent';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\n\nimport Button from './Button';\n\nconst subMenuHTML = '<input type=\"file\" accept=\".gpx,.kml,.json,.geojson\">',\n  subMenuHTMLfr = '<p>Importer un fichier de points ou de traces</p>' + subMenuHTML;\n\nclass Load extends Button {\n  constructor(options) {\n    super({\n      className: 'myol-button-load', // Button options\n      subMenuId: 'myol-button-load',\n      subMenuHTML: subMenuHTML,\n      subMenuHTMLfr: subMenuHTMLfr,\n      // loadedStyleOptions: {}, // Style of the loaded features\n      // receivingLayer: layer, // Layer to addFeatures when loaded\n\n      ...options,\n    });\n\n    this.reader = new FileReader();\n  }\n\n  subMenuAction(evt) {\n    const blob = evt.target.files[0];\n\n    if (evt.type === 'change' && evt.target.files)\n      this.reader.readAsText(blob);\n\n    this.reader.onload = () => this.loadText(this.reader.result, blob.name);\n  }\n\n  // Method to load a geoJson layer from an url\n  loadUrl(url) {\n    if (url)\n      fetch(url)\n      .then(response => response.text())\n      .then(text => this.loadText(text, url));\n  }\n\n  // Method to load features from a GeoJSON text\n  loadText(text, url) {\n    const map = this.getMap(),\n      formatName = url.split('.').pop().toUpperCase(), // Extract extension to be used as format name\n      loadFormat = new format[formatName in format ? formatName : 'GeoJSON']({ // Find existing format\n        extractStyles: false, // For KML\n      }),\n      receivedLat = text.match(/lat=\"-?([0-9]+)/u); // Received projection depending on the first value\n\n    const receivedProjection =\n      receivedLat &&\n      receivedLat.length &&\n      (parseInt(receivedLat[1], 10) > 100 ? 'EPSG:3857' : 'EPSG:4326');\n\n    const features = loadFormat.readFeatures(text, {\n      dataProjection: receivedProjection,\n      featureProjection: map.getView().getProjection(), // Map projection\n    });\n\n    const gpxSource = new VectorSource({\n      format: loadFormat,\n      features: features,\n      wrapX: false,\n    });\n\n    const fileExtent = gpxSource.getExtent();\n\n    if (isEmpty(fileExtent))\n      alert(url + ' ne comporte pas de point ni de trace.');\n    else {\n      // Add received features to the layer defined in potion\n      if (this.options.receivingLayer)\n        this.options.receivingLayer.getSource().addFeatures(features);\n      // Or create a new layer\n      else {\n        map.addLayer(new VectorLayer({\n          source: gpxSource,\n\n          style: feature => {\n            const properties = feature.getProperties();\n\n            return new Style({\n              stroke: new Stroke({\n                color: 'blue',\n                width: 2,\n              }),\n              image: properties.sym ? new Icon({\n                src: 'https://chemineur.fr/ext/Dominique92/GeoBB/icones/' + properties.sym + '.svg',\n              }) : null,\n\n              ...this.options.loadedStyleOptions,\n            });\n          },\n        }));\n      }\n\n      // Zoom the map on the added features\n      map.getView().fit(\n        fileExtent, {\n          minResolution: 1,\n          padding: [5, 5, 5, 5],\n        });\n    }\n\n    // Close the submenu\n    this.element.classList.remove('myol-display-submenu');\n  }\n}\n\nexport default Load;","/*!\n * ol-geocoder - v4.3.3\n * A geocoder extension compatible with OpenLayers v6.x to v9.0\n * https://github.com/Dominique92/ol-geocoder\n * Built: 15/03/2024 08:57:04\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"ol/control/Control\"),require(\"ol/style/Style\"),require(\"ol/style/Icon\"),require(\"ol/layer/Vector\"),require(\"ol/source/Vector\"),require(\"ol/geom/Point\"),require(\"ol/Feature\"),require(\"ol/proj\")):\"function\"==typeof define&&define.amd?define([\"ol/control/Control\",\"ol/style/Style\",\"ol/style/Icon\",\"ol/layer/Vector\",\"ol/source/Vector\",\"ol/geom/Point\",\"ol/Feature\",\"ol/proj\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).Geocoder=t(e.ol.control.Control,e.ol.style.Style,e.ol.style.Icon,e.ol.layer.Vector,e.ol.source.Vector,e.ol.geom.Point,e.ol.Feature,e.ol.proj)}(this,(function(e,t,s,r,n,o,a,i){\"use strict\";function l(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}function c(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(s){if(\"default\"!==s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}})),t.default=e,Object.freeze(t)}var d=l(e),u=l(t),p=l(s),h=l(r),g=l(n),m=l(o),y=l(a),f=c(i),b=\"gcd-container\",v=\"gcd-button-control\",w=\"gcd-input-query\",x=\"gcd-input-label\",$=\"gcd-input-search\",k={namespace:\"ol-geocoder\",spin:\"gcd-pseudo-rotate\",hidden:\"gcd-hidden\",address:\"gcd-address\",country:\"gcd-country\",city:\"gcd-city\",road:\"gcd-road\",olControl:\"ol-control\",glass:{container:\"gcd-gl-container\",control:\"gcd-gl-control\",button:\"gcd-gl-btn\",input:\"gcd-gl-input\",expanded:\"gcd-gl-expanded\",search:\"gcd-gl-search\",result:\"gcd-gl-result\"},inputText:{container:\"gcd-txt-container\",control:\"gcd-txt-control\",label:\"gcd-txt-label\",input:\"gcd-txt-input\",search:\"gcd-txt-search\",icon:\"gcd-txt-glass\",result:\"gcd-txt-result\"}},S={containerId:b,buttonControlId:v,inputQueryId:w,inputLabelId:x,inputSearchId:$,cssClasses:k};const q=Object.freeze({__proto__:null,containerId:b,buttonControlId:v,inputQueryId:w,inputLabelId:x,inputSearchId:$,cssClasses:k,default:S}),L=\"addresschosen\",C=\"nominatim\",E=\"reverse\",T=\"glass-button\",j=\"text-input\",I=\"bing\",N=\"mapquest\",P=\"opencage\",A=\"osm\",R=\"photon\",F=\"https://dev.virtualearth.net/REST/v1/Locations\",_=\"https://nominatim.openstreetmap.org/search\",M=\"https://api.opencagedata.com/geocode/v1/json?\",O=\"https://nominatim.openstreetmap.org/search\",D=\"https://photon.komoot.io/api/\",V={provider:A,label:\"\",placeholder:\"Search for an address\",featureStyle:null,targetType:T,lang:\"en-US\",limit:5,keepOpen:!1,preventDefault:!1,preventPanning:!1,preventMarker:!1,defaultFlyResolution:10,debug:!1};function B(e,t=\"Assertion failed\"){if(!e){if(\"undefined\"!=typeof Error)throw new Error(t);throw t}}function U(e){const t=function(){if(\"performance\"in window==0&&(window.performance={}),\"now\"in window.performance==0){let e=Date.now();performance.timing&&performance.timing.navigationStart&&(e=performance.timing.navigationStart),window.performance.now=()=>Date.now()-e}return window.performance.now()}().toString(36);return e?e+t:t}function G(e){return/^\\d+$/u.test(e)}function Q(e,t,s){if(Array.isArray(e))return void e.forEach((e=>Q(e,t)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)H(e,r[n])||Y(e,r[n],s)}function z(e,t,s){if(Array.isArray(e))return void e.forEach((e=>z(e,t,s)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)H(e,r[n])&&Z(e,r[n],s)}function H(e,t){return e.classList?e.classList.contains(t):X(t).test(e.className)}function K(e){for(;e.firstChild;)e.firstChild.remove()}function J(e,t){return e.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu,((e,s)=>{const r=void 0===t[s]?\"\":t[s];return String(r).replaceAll(\"&\",\"&amp;\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\").replaceAll('\"',\"&quot;\").replaceAll(\"'\",\"&#039;\")}))}function W(e,t){let s;if(Array.isArray(e)){if(s=document.createElement(e[0]),e[1].id&&(s.id=e[1].id),e[1].classname&&(s.className=e[1].classname),e[1].attr){const{attr:t}=e[1];if(Array.isArray(t)){let e=-1;for(;++e<t.length;)s.setAttribute(t[e].name,t[e].value)}else s.setAttribute(t.name,t.value)}}else s=document.createElement(e);s.innerHTML=t;const r=document.createDocumentFragment();for(;s.childNodes[0];)r.append(s.childNodes[0]);return s.append(r),s}function X(e){return new RegExp(`(^|\\\\s+) ${e} (\\\\s+|$)`,\"u\")}function Y(e,t,s){e.classList?e.classList.add(t):e.className=`${e.className} ${t}`.trim(),s&&G(s)&&window.setTimeout((()=>Z(e,t)),s)}function Z(e,t,s){e.classList?e.classList.remove(t):e.className=e.className.replace(X(t),\" \").trim(),s&&G(s)&&window.setTimeout((()=>Y(e,t)),s)}const ee=q.cssClasses;class te{constructor(e){this.options=e,this.els=this.createControl()}createControl(){let e,t,s;return this.options.targetType===j?(t=`${ee.namespace} ${ee.inputText.container}`,e=W([\"div\",{id:q.containerId,classname:t}],te.input),s={container:e,control:e.querySelector(`.${ee.inputText.control}`),label:e.querySelector(`.${ee.inputText.label}`),input:e.querySelector(`.${ee.inputText.input}`),search:e.querySelector(`.${ee.inputText.search}`),result:e.querySelector(`.${ee.inputText.result}`)},s.label.innerHTML=this.options.label):(t=`${ee.namespace} ${ee.glass.container}`,e=W([\"div\",{id:q.containerId,classname:t}],te.glass),s={container:e,control:e.querySelector(`.${ee.glass.control}`),button:e.querySelector(`.${ee.glass.button}`),input:e.querySelector(`.${ee.glass.input}`),search:e.querySelector(`.${ee.glass.search}`),result:e.querySelector(`.${ee.glass.result}`)}),s.input.placeholder=this.options.placeholder,s}}function se(e){return new Promise(((t,s)=>{const r=function(e,t){t&&\"object\"==typeof t&&(e+=(/\\?/u.test(e)?\"&\":\"?\")+re(t));return e}(e.url,e.data),n={method:\"GET\",mode:\"cors\",credentials:\"same-origin\"};e.jsonp?function(e,t,s){const{head:r}=document,n=document.createElement(\"script\"),o=`f${Math.round(Math.random()*Date.now())}`;n.setAttribute(\"src\",`${e+(e.indexOf(\"?\")>0?\"&\":\"?\")+t}=${o}`),window[o]=e=>{window[o]=void 0,setTimeout((()=>r.removeChild(n)),0),s(e)},r.append(n)}(r,e.callbackName,t):fetch(r,n).then((e=>e.json())).then(t).catch(s)}))}function re(e){return Object.keys(e).reduce(((t,s)=>(t.push(\"object\"==typeof e[s]?re(e[s]):`${encodeURIComponent(s)}=${encodeURIComponent(e[s])}`),t)),[]).join(\"&\")}te.glass=`\\n  <div class=\"${ee.glass.control} ${ee.olControl}\">\\n    <button type=\"button\" id=\"${q.buttonControlId}\" class=\"${ee.glass.button}\"></button>\\n    <input type=\"text\" id=\"${q.inputQueryId}\" class=\"${ee.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <a id=\"${q.inputSearchId}\" class=\"${ee.glass.search} ${ee.hidden}\"></a>\\n  </div>\\n  <ul class=\"${ee.glass.result}\"></ul>\\n`,te.input=`\\n  <div class=\"${ee.inputText.control}\">\\n    <label type=\"button\" id=\"${q.inputSearchId}\" class=\"${ee.inputText.label}\"></label>\\n    <input type=\"text\" id=\"${q.inputQueryId}\" class=\"${ee.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <span class=\"${ee.inputText.icon}\"></span>\\n    <button type=\"button\" id=\"${q.inputSearchId}\" class=\"${ee.inputText.search} ${ee.hidden}\"></button>\\n  </div>\\n  <ul class=\"${ee.inputText.result}\"></ul>\\n`;class ne{constructor(){this.settings={url:D,params:{q:\"\",limit:10,lang:\"en\"},langs:[\"de\",\"it\",\"fr\",\"en\"]}}getParameters(e){return e.lang=e.lang.toLowerCase(),{url:this.settings.url,params:{q:e.query,limit:e.limit||this.settings.params.limit,lang:this.settings.langs.includes(e.lang)?e.lang:this.settings.params.lang}}}handleResponse(e){return 0===e.features.length?[]:e.features.map((e=>({lon:e.geometry.coordinates[0],lat:e.geometry.coordinates[1],address:{name:e.properties.name,postcode:e.properties.postcode,city:e.properties.city,state:e.properties.state,country:e.properties.country},original:{formatted:e.properties.name,details:e.properties}})))}}class oe{constructor(e){this.settings={url:O,...e,params:{q:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",viewbox:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,format:this.settings.params.format,addressdetails:this.settings.params.addressdetails,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,viewbox:e.viewbox||this.settings.params.viewbox,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,bbox:e.boundingbox,address:{name:e.display_name,road:e.address.road||\"\",houseNumber:e.address.house_number||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class ae{constructor(){this.settings={url:_,params:{q:\"\",key:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,format:\"json\",addressdetails:1,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,address:{name:e.address.neighbourhood||\"\",road:e.address.road||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class ie{constructor(){this.settings={url:F,callbackName:\"jsonp\",params:{query:\"\",key:\"\",includeNeighborhood:0,maxResults:10}}}getParameters(e){return{url:this.settings.url,callbackName:this.settings.callbackName,params:{query:e.query,key:e.key,includeNeighborhood:e.includeNeighborhood||this.settings.params.includeNeighborhood,maxResults:e.maxResults||this.settings.params.maxResults}}}handleResponse(e){const{resources:t}=e.resourceSets[0];return 0===t.length?[]:t.map((e=>({lon:e.point.coordinates[1],lat:e.point.coordinates[0],address:{name:e.name},original:{formatted:e.address.formattedAddress,details:e.address}})))}}class le{constructor(){this.settings={url:M,params:{q:\"\",key:\"\",limit:10,countrycode:\"\",pretty:1,no_annotations:1}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,limit:e.limit||this.settings.params.limit,countrycode:e.countrycodes||this.settings.params.countrycodes}}}handleResponse(e){return 0===e.results.length?[]:e.results.map((e=>({lon:e.geometry.lng,lat:e.geometry.lat,address:{name:e.components.house_number||\"\",road:e.components.road||\"\",postcode:e.components.postcode,city:e.components.city||e.components.town,state:e.components.state,country:e.components.country},original:{formatted:e.formatted,details:e.components}})))}}const ce=q.cssClasses;class de{constructor(e,t){this.Base=e,this.layerName=U(\"geocoder-layer-\"),this.layer=new h.default({background:\"transparent\",name:this.layerName,source:new g.default,displayInLayerSwitcher:!1}),this.options=e.options,this.options.provider=\"string\"==typeof this.options.provider?this.options.provider.toLowerCase():this.options.provider,this.provider=this.newProvider(),this.els=t,this.container=this.els.container,this.registeredListeners={mapClick:!1},this.setListeners()}setListeners(){const e=e=>{e.stopPropagation(),H(this.els.control,ce.glass.expanded)?this.collapse():this.expand()};this.els.input.addEventListener(\"keypress\",(e=>{const t=e.target.value.trim();(e.key?\"Enter\"===e.key:e.which?13===e.which:!!e.keyCode&&13===e.keyCode)&&(e.preventDefault(),this.query(t))}),!1),this.els.input.addEventListener(\"click\",(e=>e.stopPropagation()),!1),this.els.input.addEventListener(\"input\",(e=>{0!==e.target.value.trim().length?z(this.els.search,ce.hidden):Q(this.els.search,ce.hidden)}),!1),this.els.search.addEventListener(\"click\",(()=>{this.els.input.focus(),this.query(this.els.input.value)}),!1),this.options.targetType===T&&this.els.button.addEventListener(\"click\",e,!1)}query(e){this.provider||(this.provider=this.newProvider());const t=this.provider.getParameters({query:e,key:this.options.key,lang:this.options.lang,countrycodes:this.options.countrycodes,viewbox:this.options.viewbox,limit:this.options.limit});this.clearResults(!1===this.options.keepOpen),Q(this.els.search,ce.spin);const s={url:t.url,data:t.params};t.callbackName&&(s.jsonp=!0,s.callbackName=t.callbackName),se(s).then((e=>{this.options.debug&&console.info(e),z(this.els.search,ce.spin);const t=this.provider.handleResponse(e);t&&(this.createList(t),this.listenMapClick())})).catch((()=>{z(this.els.search,ce.spin);const e=W(\"li\",\"<h5>Error! No internet connection?</h5>\");this.els.result.append(e)}))}createList(e){const t=this.els.result;e.forEach((s=>{let r;if(this.options.provider===A)r=`<span class=\"${ce.road}\">${s.address.name}</span>`;else r=this.addressTemplate(s.address);if(1==e.length)this.chosen(s,r,s.address,s.original);else{const e=W(\"li\",`<a href=\"#\">${r}</a>`);e.addEventListener(\"click\",(e=>{e.preventDefault(),this.chosen(s,r,s.address,s.original)}),!1),t.append(e)}}))}chosen(e,t,s,r){const n=this.Base.getMap(),o=[Number.parseFloat(e.lon),Number.parseFloat(e.lat)],a=n.getView().getProjection(),i=f.transform(o,\"EPSG:4326\",a);let{bbox:l}=e;l&&(l=f.transformExtent([parseFloat(l[2]),parseFloat(l[0]),parseFloat(l[3]),parseFloat(l[1])],\"EPSG:4326\",a));const c={formatted:t,details:s,original:r};if(this.clearResults(!0),!0===this.options.preventDefault||!0===this.options.preventMarker)this.Base.dispatchEvent({type:L,address:c,coordinate:i,bbox:l,place:e});else{const t=this.createFeature(i,c);this.Base.dispatchEvent({type:L,address:c,feature:t,coordinate:i,bbox:l,place:e})}!0!==this.options.preventDefault&&!0!==this.options.preventPanning&&(l?n.getView().fit(l,{duration:500}):n.getView().animate({center:i,resolution:this.options.defaultFlyResolution,duration:500}))}createFeature(e){const t=new y.default(new m.default(e));return this.addLayer(),t.setStyle(this.options.featureStyle),t.setId(U(\"geocoder-ft-\")),this.getSource().addFeature(t),t}addressTemplate(e){const t=[];return e.name&&t.push(['<span class=\"',ce.road,'\">{name}</span>'].join(\"\")),(e.road||e.building||e.house_number)&&t.push(['<span class=\"',ce.road,'\">{building} {road} {house_number}</span>'].join(\"\")),(e.city||e.town||e.village)&&t.push(['<span class=\"',ce.city,'\">{postcode} {city} {town} {village}</span>'].join(\"\")),(e.state||e.country)&&t.push(['<span class=\"',ce.country,'\">{state} {country}</span>'].join(\"\")),J(t.join(\"<br>\"),e)}newProvider(){switch(this.options.provider){case A:return new oe(this.options);case N:return new ae;case R:return new ne;case I:return new ie;case P:return new le;default:return this.options.provider}}expand(){z(this.els.input,ce.spin),Q(this.els.control,ce.glass.expanded),window.setTimeout((()=>this.els.input.focus()),100),this.listenMapClick()}collapse(){this.els.input.value=\"\",this.els.input.blur(),Q(this.els.search,ce.hidden),z(this.els.control,ce.glass.expanded),K(this.els.result)}listenMapClick(){if(this.registeredListeners.mapClick)return;const e=this,t=this.Base.getMap().getTargetElement();this.registeredListeners.mapClick=!0,t.addEventListener(\"click\",{handleEvent(s){t.removeEventListener(s.type,this,!1),e.registeredListeners.mapClick=!1}},!1)}clearResults(e){e&&this.options.targetType===T?this.collapse():K(this.els.result)}getSource(){return this.layer.getSource()}addLayer(){let e=!1;const t=this.Base.getMap();t.getLayers().forEach((t=>{t===this.layer&&(e=!0)})),e||t.addLayer(this.layer)}}class ue extends d.default{constructor(e=C,t){B(\"string\"==typeof e,\"@param `type` should be string!\"),B(e===C||e===E,`@param 'type' should be '${C}'\\n      or '${E}'!`);const s={...V,featureStyle:[new u.default({image:new p.default({anchor:[.5,1],src:'data:image/svg+xml;charset=utf-8,<svg width=\"26\" height=\"42\" viewBox=\"0 0 26 42\" xmlns=\"http://www.w3.org/2000/svg\"><polygon points=\"1,18 14,42 25,18\" fill=\"rgb(75,75,75)\" /><ellipse cx=\"13\" cy=\"13\" rx=\"13\" ry=\"13\" fill=\"rgb(75,75,75)\" /><ellipse cx=\"13\" cy=\"14\" rx=\"6\" ry=\"6\" fill=\"yellow\" /></svg>'})})],...t};let r,n;const o=new te(s);if(e===C&&(r=o.els.container),super({element:r,...s}),!(this instanceof ue))return new ue;this.options=s,this.container=r,e===C&&(n=new de(this,o.els),this.layer=n.layer)}getLayer(){return this.layer}getSource(){return this.getLayer().getSource()}setProvider(e){this.options.provider=e}setProviderKey(e){this.options.key=e}}return ue}));\n//# sourceMappingURL=ol-geocoder.js.map\n","/**\n * MyGeocoder control that overloads ol-geocoder\n * From https://github.com/jonataswalker/ol-geocoder\n * Corrected https://github.com/kirtan-desai/ol-geocoder\n * Corrected https://github.com/Dominique92/ol-geocoder\n */\n\nimport 'ol-geocoder/dist/ol-geocoder.css';\nimport Geocoder from 'ol-geocoder';\n\nimport './myGeocoder.css';\n\nclass MyGeocoder extends Geocoder {\n  constructor(options) {\n    super('nominatim', {\n      // See https://github.com/kirtan-desai/ol-geocoder#user-content-api\n      placeholder: 'Recherche par nom sur la carte', // Initialization of the input field\n\n      ...options,\n    });\n\n    this.element.classList.add('ol-control');\n\n    // Avoid submit of a form including the map\n    this.element.getElementsByTagName('input')[0]\n      .addEventListener('keypress', evt =>\n        evt.stopImmediatePropagation()\n      );\n\n    // Close other opened buttons when hover with a mouse\n    this.element.addEventListener('pointerover', () => {\n      for (const el of document.getElementsByClassName('myol-button-selected'))\n        el.classList.remove('myol-button-selected');\n    });\n\n    // Close submenu when hover another button\n    document.addEventListener('pointerout', evt => {\n      const hoveredEl = document.elementFromPoint(evt.x, evt.y),\n        controlEl = this.element.firstElementChild;\n\n      if (hoveredEl && hoveredEl.tagName === 'BUTTON')\n        controlEl.classList.remove('gcd-gl-expanded');\n    });\n  }\n}\n\nexport default MyGeocoder;","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * MyGeolocation control to isplay status, altitude & speed\n */\n\nimport Feature from 'ol/Feature';\nimport Geolocation from 'ol/Geolocation';\nimport GeometryCollection from 'ol/geom/GeometryCollection';\nimport LineString from 'ol/geom/LineString';\nimport MultiLineString from 'ol/geom/MultiLineString';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\nimport Button from './Button';\n\n//BEST move this in html\nconst subMenuHTML = '<p>\\\n  <input type=\"radio\" name=\"myol-gps-source\" value=\"0\" checked=\"checked\">None &nbsp;\\\n  <input type=\"radio\" name=\"myol-gps-source\" value=\"1\">Outdoor &nbsp;\\\n  <input type=\"radio\" name=\"myol-gps-source\" value=\"2\">Indoor &nbsp;\\\n  </p><hr><p>\\\n  <input type=\"radio\" name=\"myol-gps-display\" value=\"0\" checked=\"checked\">Free map&nbsp;\\\n  <input type=\"radio\" name=\"myol-gps-display\" value=\"1\">Center &nbsp;\\\n  <input type=\"radio\" name=\"myol-gps-display\" value=\"2\">Center & orient &nbsp;\\\n  </p>',\n\n  subMenuHTMLfr = '\\\n  <p>Localisation GPS:</p>\\\n  <label>\\\n    <input type=\"radio\" name=\"myol-gps-source\" value=\"0\" checked=\"checked\">\\\n    Inactif</label><label>\\\n    <input type=\"radio\" name=\"myol-gps-source\" value=\"1\">\\\n    Position GPS <span>(1) extérieur</span></label><label>\\\n    <input type=\"radio\" name=\"myol-gps-source\" value=\"2\">\\\n    Position GPS ou IP <span>(2) intérieur</span></label>\\\n  <hr><label>\\\n    <input type=\"radio\" name=\"myol-gps-display\" value=\"0\" checked=\"checked\">\\\n    Graticule, carte libre</label><label>\\\n    <input type=\"radio\" name=\"myol-gps-display\" value=\"1\">\\\n    Centre la carte, nord en haut</label><label>\\\n    <input type=\"radio\" name=\"myol-gps-display\" value=\"2\">\\\n    Centre et oriente la carte <span>(3)</span></label>\\\n  <hr>\\\n  <p>(1) plus précis en extérieur mais plus lent à initialiser,\\\n    nécessite un capteur et une réception GPS.</p>\\\n  <p>(2) plus précis et rapide en intérieur ou en zone urbaine\\\n    mais peut être très erroné en extérieur à l\\'initialisation.\\\n    Utilise les position des points WiFi proches en plus du GPS dont il peut se passer.</p>\\\n  <p>(3) nécessite un capteur magnétique et un explorateur le supportant.</p>';\n\nclass MyGeolocation extends Button {\n  constructor(options) {\n    super(\n      location.href.match(/(https|localhost)/u) ? {\n        // Button options\n        className: 'myol-button-geolocation',\n        subMenuId: 'myol-button-geolocation',\n        subMenuHTML: subMenuHTML,\n        subMenuHTMLfr: subMenuHTMLfr,\n\n        // ol.Geolocation options\n        // https://www.w3.org/TR/geolocation/#position_options_interface\n        enableHighAccuracy: true,\n        maximumAge: 1000,\n        timeout: 1000,\n\n        ...options,\n      } :\n      // Hide if http\n      {\n        className: 'myol-button-hide',\n      });\n\n    // Add status display element\n    this.statusEl = document.createElement('p');\n    this.element.appendChild(this.statusEl);\n\n    this.addGraticule();\n\n    // Browser heading from the inertial & magnetic sensors\n    window.addEventListener('deviceorientationabsolute', evt => {\n      this.heading = evt.alpha || evt.webkitCompassHeading; // Android || iOS\n      this.subMenuAction(evt);\n    });\n  } // End constructor\n\n  addGraticule() {\n    this.graticuleFeature = new Feature();\n    this.northGraticuleFeature = new Feature();\n\n    this.graticuleFeature.setStyle(new Style({\n      stroke: new Stroke({\n        color: '#00f',\n        lineDash: [16, 14],\n        width: 1,\n      }),\n    }));\n\n    this.northGraticuleFeature.setStyle(new Style({\n      stroke: new Stroke({\n        color: '#c00',\n        lineDash: [16, 14],\n        width: 1,\n      }),\n    }));\n\n    this.graticuleLayer = new VectorLayer({\n      source: new VectorSource({\n        features: [this.graticuleFeature, this.northGraticuleFeature],\n      }),\n      wrapX: false,\n      zIndex: 300, // Above the features\n    });\n  }\n\n  setMap(map) {\n    map.addLayer(this.graticuleLayer);\n    map.on('moveend', evt => this.subMenuAction(evt)); // Refresh graticule after map zoom\n\n    this.geolocation = new Geolocation({\n      projection: map.getView().getProjection(),\n      trackingOptions: this.options,\n\n      ...this.options,\n    });\n    this.geolocation.on('change', evt => this.subMenuAction(evt));\n    this.geolocation.on('error', error => {\n      console.log('Geolocation error: ' + error.message);\n    });\n\n    return super.setMap(map);\n  }\n\n  buttonAction(evt, active) {\n    const sourceEls = document.getElementsByName('myol-gps-source');\n\n    if (evt.type === 'click' && active && sourceEls[0].checked)\n      sourceEls[1].click();\n  }\n\n  subMenuAction(evt) {\n    const sourceLevelEl = document.querySelector('input[name=\"myol-gps-source\"]:checked'),\n      displayEls = document.getElementsByName('myol-gps-display'),\n      displayLevelEl = document.querySelector('input[name=\"myol-gps-display\"]:checked'),\n      sourceLevel = sourceLevelEl ? parseInt(sourceLevelEl.value, 10) : 0, // On/off, GPS, GPS&WiFi\n      displayLevel = displayLevelEl ? parseInt(displayLevelEl.value, 10) : 0, // Graticule & sourceLevel\n      map = this.getMap(),\n      view = map ? map.getView() : null;\n\n    // Tune the tracking level\n    if (evt.target.name === 'myol-gps-source') {\n      this.geolocation.setTracking(sourceLevel > 0);\n      this.graticuleLayer.setVisible(false);\n      if (!sourceLevel)\n        displayEls[0].checked = true;\n      if (sourceLevel && displayLevel === 0)\n        displayEls[2].checked = true;\n    }\n\n    // Get geolocation values\n    ['Position', 'AccuracyGeometry', 'Speed', 'Altitude'].forEach(valueName => {\n      const value = this.geolocation['get' + valueName]();\n\n      if (value)\n        this[valueName.toLowerCase()] = value;\n    });\n\n    // State 1 only takes positions from the GPS which have an altitude\n    if (sourceLevel === 0 ||\n      (sourceLevel === 1 && !this.altitude))\n      this.position = null;\n\n    // Aware all who needs\n    map.dispatchEvent({\n      type: 'myol:gpspositionchanged',\n      position: this.position,\n    });\n\n    // Render position & graticule\n    if (map && view && sourceLevel && this.position) {\n      // Estimate the viewport size to draw a visible graticule\n      const p = this.position,\n        hg = map.getCoordinateFromPixel([0, 0]),\n        bd = map.getCoordinateFromPixel(map.getSize()),\n        far = Math.hypot(hg[0] - bd[0], hg[1] - bd[1]) * 10;\n\n      const // The graticule\n        geometry = [\n          new MultiLineString([\n            [\n              [p[0] - far, p[1]],\n              [p[0] + far, p[1]]\n            ],\n            [\n              [p[0], p[1]],\n              [p[0], p[1] - far]\n            ],\n          ]),\n        ],\n        // Color north in red\n        northGeometry = [\n          new LineString([\n            [p[0], p[1]],\n            [p[0], p[1] + far]\n          ]),\n        ];\n\n      // The accuracy circle\n      if (this.accuracygeometry)\n        geometry.push(this.accuracygeometry);\n\n      this.graticuleFeature.setGeometry(new GeometryCollection(geometry));\n      this.northGraticuleFeature.setGeometry(new GeometryCollection(northGeometry));\n\n      // Center the map\n      if (displayLevel > 0)\n        view.setCenter(p);\n\n      // Orientation\n      if (!sourceLevel || displayLevel === 1)\n        view.setRotation(0);\n      else if (this.heading && displayLevel === 2)\n        view.setRotation(\n          Math.PI / 180 * (this.heading - screen.orientation.angle) // Delivered ° reverse clockwize\n        );\n\n      // Zoom on the area\n      if (!this.isZoomed) { // Only the first time after activation\n        this.isZoomed = true;\n        view.setZoom(17);\n\n        // Close submenu when GPS locates\n        this.element.classList.remove('myol-button-hover');\n        this.element.classList.remove('myol-button-selected');\n      }\n      this.graticuleLayer.setVisible(true);\n    } else\n      view.setRotation(0); // Return to inactive state\n\n    // Display data under the button\n    let status = this.position ? '' : 'Sync...';\n    if (this.altitude) {\n      status = Math.round(this.altitude) + ' m';\n      if (this.speed)\n        status += ' ' + (Math.round(this.speed * 36) / 10) + ' km/h';\n    }\n    if (this.statusEl)\n      this.statusEl.innerHTML = sourceLevel ? status : '';\n\n    // Close the submenu\n    if (evt.target.name) // Only when an input is hit\n      this.element.classList.remove('myol-display-submenu');\n  } // End subMenuAction\n}\n\nexport default MyGeolocation;","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * MyMousePosition control to display the mouse position\n * Improve style\n */\n\nimport {\n  createStringXY,\n} from 'ol/coordinate';\nimport {\n  getDistance,\n} from 'ol/sphere';\nimport MousePosition from 'ol/control/MousePosition';\nimport {\n  transform,\n} from 'ol/proj';\n\nimport './control.css';\n\nclass MyMousePosition extends MousePosition {\n  constructor(options) {\n    super({\n      // From MousePosition options\n      className: 'ol-control myol-mouse-position',\n      projection: 'EPSG:4326',\n      placeholder: String.fromCharCode(0), // Hide control when mouse is out of the map\n      coordinateFormat: c => this.display(c),\n\n      ...options,\n    });\n  }\n\n  setMap(map) {\n    map.on('myol:gpspositionchanged', evt => {\n      this.position = evt.position;\n    });\n\n    return super.setMap(map);\n  }\n\n  display(coordinates) {\n    if (this.position) {\n      const ll4326 = transform(this.position, 'EPSG:3857', 'EPSG:4326'),\n        distance = getDistance(coordinates, ll4326);\n\n      return distance < 1000 ?\n        (Math.round(distance)) + ' m' :\n        (Math.round(distance / 10) / 100) + ' km';\n    }\n    return createStringXY(4)(coordinates);\n  }\n}\n\nexport default MyMousePosition;","/**\n * Print control\n */\n\nimport Button from './Button';\nimport './print.css';\n\nconst subMenuHTML = '\\\n  <label><input type=\"radio\" name=\"myol-print-orientation\" value=\"0\">Portrait</label>\\\n  <label><input type=\"radio\" name=\"myol-print-orientation\" value=\"1\">Landscape</label>\\\n  <p><a id=\"myol-print\">Print</a></p>',\n\n  subMenuHTMLfr = '\\\n  <p style=\"float:right\" title=\"Cancel\"><a onclick=\"location.reload()\">&#10006;</a></p>\\\n  <p style=\"width:175px\">Choisir le format et recadrer</p>' +\n  subMenuHTML\n  .replace('Landscape', 'Paysage')\n  .replace('Print', 'Imprimer');\n\nclass Print extends Button {\n  constructor(options) {\n    super({\n      // Button options\n      className: 'myol-button-print',\n      subMenuId: 'myol-button-print',\n      subMenuHTML: subMenuHTML,\n      subMenuHTMLfr: subMenuHTMLfr,\n\n      ...options,\n    });\n\n    // To return without print\n    document.addEventListener('keydown', evt => {\n      if (evt.key === 'Escape')\n        setTimeout(() => { // Delay reload for FF & Opera\n          location.reload();\n        });\n    });\n  }\n\n  subMenuAction(evt) {\n    const map = this.getMap(),\n      mapEl = map.getTargetElement(),\n      poEl = this.element.querySelector('input:checked'), // Selected orientation inputs\n      orientation = poEl && poEl.value === '1' ? 'landscape' : 'portrait';\n\n    // Fix resolution to an available tiles resolution\n    map.getView().setConstrainResolution(true);\n\n    // Set or replace the page style\n    if (document.head.lastChild.textContent.match(/^@page\\{size:/u))\n      document.head.lastChild.remove();\n    document.head.insertAdjacentHTML('beforeend', '<style>@page{size: A4 ' + orientation + '}</style>');\n\n    // Parent the map to the top of the page\n    document.body.appendChild(mapEl);\n    mapEl.className = 'myol-print-' + orientation;\n\n    // Finally print if required\n    if (evt.target.id === 'myol-print') {\n      if (poEl) { // If a format is set, the full page is already loaded\n        window.print();\n        location.reload();\n      } else // Direct print : wait for full format rendering\n        map.once('rendercomplete', () => {\n          window.print();\n          location.reload();\n        });\n    }\n  }\n}\n\nexport default Print;","/**\n * This file defines the myol.control exports\n */\n\nimport Attribution from 'ol/control/Attribution';\nimport FullScreen from 'ol/control/FullScreen';\nimport ScaleLine from 'ol/control/ScaleLine';\nimport Zoom from 'ol/control/Zoom';\n\nimport Button from './Button';\nimport Download from './Download';\nimport LayerSwitcher from './LayerSwitcher';\nimport LengthLine from './LengthLine';\nimport Load from './Load';\nimport MyGeocoder from './MyGeocoder';\nimport MyGeolocation from './MyGeolocation';\nimport MyMousePosition from './MyMousePosition';\nimport Permalink from './Permalink';\nimport Print from './Print';\n\n/**\n * Basic list of controls\n */\nexport function collection(options = {}) {\n  return [\n    // Top left\n    new Zoom(options.zoom),\n    new FullScreen(options.fullScreen),\n    new MyGeocoder(options.geocoder),\n    new MyGeolocation(options.geolocation),\n    new Load(options.load),\n    new Download(options.download),\n    new Print(options.print),\n\n    // Bottom left\n    new LengthLine(options.lengthLine),\n    new MyMousePosition(options.myMousePosition),\n    new ScaleLine(options.scaleLine),\n\n    // Bottom right\n    new Attribution(options.attribution),\n  ];\n}\n\nexport default {\n  Button: Button,\n  Download: Download,\n  LengthLine: LengthLine,\n  LayerSwitcher: LayerSwitcher,\n  Load: Load,\n  MyGeocoder: MyGeocoder,\n  MyGeolocation: MyGeolocation,\n  MyMousePosition: MyMousePosition,\n  Permalink: Permalink,\n  Print: Print,\n  collection,\n};","/**\n * LayerSwitcher control for both tiled & vectors layers\n */\n\nimport Button from './Button';\nimport BackgroundLayer from '../layer/BackgroundLayer';\nimport './layerSwitcher.css';\n\n//BEST how do we do on touch terminal ? alt key to switch layers / transparency\n//BEST slider transparency doesn't work out of range (no BackgroundLayer)\n//BEST BUG Attribution must be set before LayerSwitcher\nclass LayerSwitcher extends Button {\n  constructor(options) {\n    super({\n      // Button options\n      className: 'myol-button-switcher',\n      subMenuHTML: '<div>',\n\n      ...options,\n    });\n\n    this.selectExtId = options.selectExtId;\n\n    // Filter null or hidden layers\n    this.layers = {};\n    for (const name in options.layers)\n      if (options.layers[name] && !options.layers[name].getProperties().hidden)\n        this.layers[name] = options.layers[name];\n\n    // Get baselayer from url hash (#baselayer=...) if any\n    const bl = location.href.match(/baselayer=([^&]+)/u);\n\n    if (bl)\n      localStorage.myolBaselayer = decodeURI(bl[1]);\n\n    this.sliderEl = document.createElement('input');\n    this.sliderEl.type = 'range';\n    this.sliderEl.title = 'Glisser pour faire varier la tranparence';\n    this.sliderEl.oninput = () => this.displayTransparencyRange();\n  }\n\n  setMap(map) {\n    map.addLayer(new BackgroundLayer());\n\n    for (const name in this.layers) {\n      // Build html layers selectors\n      this.subMenuEl.insertAdjacentHTML('beforeend', '<label><input type=\"checkbox\" name=\"baselayer\" value=\"' + name + '\">' + name + '</label>');\n\n      // Make layers available for display\n      this.layers[name].setVisible(false); // Don't begin to get the tiles yet (Necessary for Bing)\n      map.addLayer(this.layers[name]);\n    }\n    this.selectorEls = this.element.querySelectorAll('input[name=\"baselayer\"]');\n    this.action(); // Display active layer\n    this.subMenuEl.insertAdjacentHTML('beforeend', '<p>Ctrl+click: multicouches</p>');\n\n    // Attach html additional selector (must be there to be after base layers)\n    const selectExtEl = document.getElementById(this.selectExtId);\n\n    if (selectExtEl) {\n      selectExtEl.classList.add('select-ext');\n      this.subMenuEl.appendChild(selectExtEl);\n      selectExtEl.style.display = ''; // Unmask the selector if it has been at the declaration\n    }\n\n    // Register action listeners\n    this.element.querySelectorAll('input[name=baselayer]')\n      .forEach(el =>\n        el.addEventListener('click', evt =>\n          this.action(evt)\n        )\n      );\n\n    // Hide the selector when the cursor is out of the selector\n    map.on('pointermove', evt => {\n      const maxX = map.getTargetElement().offsetWidth - this.element.offsetWidth - 20,\n        maxY = this.element.offsetHeight + 20;\n\n      if (evt.pixel[0] < maxX || evt.pixel[1] > maxY)\n        this.element.classList.remove('myol-button-switcher-open');\n    });\n\n    return super.setMap(map);\n  }\n\n  action(evt) {\n    // Clean checks\n    if (evt && !evt.ctrlKey) {\n      this.selectorEls.forEach(el => {\n        el.checked = false;\n      });\n      evt.target.checked = true;\n    }\n    if (!this.element.querySelector('input[name=\"baselayer\"]:checked'))\n      (this.element.querySelector('input[value=\"' + localStorage.myolBaselayer + '\"]') ||\n        this.selectorEls[0]\n      ).checked = true;\n\n    const selectedEls = this.element.querySelectorAll('input[name=\"baselayer\"]:checked');\n\n    localStorage.myolBaselayer = selectedEls[0].value;\n    this.sliderEl.value = 50;\n    this.sliderEl.remove();\n    this.transparentlayer = null;\n\n    // Display the layers & slider\n    this.selectorEls.forEach(el => {\n      this.layers[el.value].setVisible(el.checked);\n      this.layers[el.value].setOpacity(1);\n\n      if (el.checked && selectedEls.length > 1) {\n        el.parentElement.after(this.sliderEl);\n        this.transparentlayer = this.layers[el.value];\n      }\n    });\n\n    this.displayTransparencyRange();\n  }\n\n  displayTransparencyRange() {\n    if (this.transparentlayer)\n      this.transparentlayer.setOpacity(this.sliderEl.value / 100);\n  }\n}\n\nexport default LayerSwitcher;","/**\n * Permalink control\n * \"map\" url hash or localStorage: zoom=<ZOOM> lon=<LON> lat=<LAT>\n * Don't set view when you declare the map\n */\n\nimport Control from 'ol/control/Control.js';\nimport {\n  transform,\n} from 'ol/proj';\n\nimport './control.css';\n\nclass Permalink extends Control {\n  constructor(opt) {\n    const options = {\n      // display: false, // {false | true} Display permalink link the map.\n      // init: false, // {undefined | false | true | [<zoom>, <lon>, <lat>]} use url hash or localStorage to position the map.\n      default: [6, 2, 47], // France\n      // setUrl: false, // {false | true} Change url hash when moving the map.\n      hash: '?', // {?, #} the permalink delimiter after the url\n\n      ...opt,\n    };\n\n    super({\n      element: document.createElement('div'),\n\n      ...options,\n    });\n\n    this.options = options;\n\n    if (options.display) {\n      this.element.className = 'ol-control myol-permalink';\n      this.linkEl = document.createElement('a');\n      this.linkEl.innerHTML = 'Permalink';\n      this.linkEl.title = 'Generate a link with map zoom & position';\n      this.element.appendChild(this.linkEl);\n    }\n  }\n\n  render(evt) {\n    const view = evt.map.getView(),\n      //BEST init with res=<resolution> or extent (not zoom, lon, lat)\n      urlMod = (typeof this.options.init === 'object' ? // init: [<zoom>, <lon>, <lat>]\n        'zoom=' + this.options.init[0] + '&lon=' + this.options.init[1] + '&lat=' + this.options.init[2] + ',' :\n        '') +\n      location.href.replace( // Get value from params with priority url / ? / #\n        /map=([0-9.]+)\\/(-?[0-9.]+)\\/(-?[0-9.]+)/u, // map=<zoom>/<lon>/<lat>\n        'zoom=$1&lon=$2&lat=$3' // zoom=<zoom>&lon=<lon>&lat=<lat>\n      ) + ',' +\n      // Last values\n      'zoom=' + localStorage.myolZoom + ',' +\n      'lon=' + localStorage.myolLon + ',' +\n      'lat=' + localStorage.myolLat + ',' +\n      // Default\n      'zoom=' + this.options.default[0] + '&lon=' + this.options.default[1] + '&lat=' + this.options.default[2];\n\n    // Set center & zoom at the init\n    if (this.options.init) {\n      this.options.init = false; // Only once\n\n      view.setZoom(urlMod.match(/zoom=([0-9.]+)/u)[1]);\n\n      view.setCenter(transform([\n        urlMod.match(/lon=(-?[0-9.]+)/u)[1],\n        urlMod.match(/lat=(-?[0-9.]+)/u)[1],\n      ], 'EPSG:4326', 'EPSG:3857'));\n    }\n\n    // Set the permalink with current map zoom & position\n    if (view.getCenter()) {\n      const ll4326 = transform(view.getCenter(), 'EPSG:3857', 'EPSG:4326'),\n        newParams = 'map=' +\n        (localStorage.myolZoom = Math.round(view.getZoom() * 10) / 10) + '/' +\n        (localStorage.myolLon = Math.round(ll4326[0] * 10000) / 10000) + '/' +\n        (localStorage.myolLat = Math.round(ll4326[1] * 10000) / 10000);\n\n      if (this.linkEl) {\n        this.linkEl.href = this.options.hash + newParams;\n\n        if (this.options.setUrl)\n          location.href = '#' + newParams;\n      }\n    }\n\n    return super.render(evt);\n  }\n}\n\nexport default Permalink;","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     * @private\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     * @private\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @override\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection,\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that uses them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] =\n          geometry.getExtent(createEmpty());\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        }),\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_,\n      ),\n      projection,\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n            closestFeature = segmentData.feature;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.militargeographische_institut = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Militar-Geographische Institut\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(FeatureType):(Point|null)} [geometryFunction]\n * Function that takes a {@link module:ol/Feature~Feature} as argument and returns a\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<FeatureType>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource<FeatureType>} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {VectorSource<Feature<import(\"../geom/Geometry.js\").default>>}\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options<FeatureType>} [options] Cluster options.\n   */\n  constructor(options) {\n    options = options || {};\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {FeatureType} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries',\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<FeatureType>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource<FeatureType>|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   * @override\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource<FeatureType>|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @override\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source?.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource<FeatureType>|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   * @override\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<FeatureType>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * Manage a collection of checkboxes with the same name\n * name : name of all the related input checkbox\n * The checkbox without value (all) check / uncheck the others\n * Check all the checkboxes check the checkbox without value (all)\n * Current selection is saved in window.localStorage\n * You can force the values in window.localStorage[simplified name]\n * callback(selection) : function to call at init or click\n * getSelection() : returns an array of selected values\n * If no name is specified or there are no checkbox with this name, return []\n */\n\nclass Selector {\n  constructor(name, initSelect) {\n    if (name) {\n      this.safeName = 'myol_' + name.replace(/[^a-z]/giu, '');\n      this.init =\n        typeof initSelect === 'undefined' ?\n        localStorage[this.safeName] || '' :\n        initSelect.toString();\n      this.init = this.init.split(',');\n      this.selectEls = [...document.getElementsByName(name)];\n      this.selectEls.forEach(el => {\n        el.addEventListener('click', evt => this.action(evt));\n        el.checked =\n          this.init.includes(el.value) ||\n          this.init.includes('all') ||\n          this.init.join(',') === el.value;\n      });\n      this.action(); // Init with \"all\"\n    }\n    this.callbacks = [];\n  }\n\n  action(evt) {\n    // Test the \"all\" box & set other boxes\n    if (evt && evt.target.value === 'all')\n      this.selectEls.forEach(el => {\n        el.checked = evt.target.checked;\n      });\n\n    // Test if all values are checked\n    const allChecked = this.selectEls\n      .filter(el => !el.checked && el.value !== 'all');\n\n    // Set the \"all\" box\n    this.selectEls\n      .forEach(el => {\n        if (el.value === 'all')\n          el.checked = !allChecked.length;\n      });\n\n    // Save the current status\n    if (this.safeName && this.getSelection().length)\n      localStorage[this.safeName] = this.getSelection().join(',');\n    //BEST BUG : don't recover values including a ,\n    else\n      delete localStorage[this.safeName];\n\n    // Call the posted callbacks\n    if (evt)\n      this.callbacks.forEach(cb => cb(this.getSelection()));\n  }\n\n  getSelection() {\n    if (this.selectEls)\n      return this.selectEls\n        .filter(el => el.checked && el.value !== 'all')\n        .map(el => el.value);\n\n    return [null];\n  }\n}\n\nexport default Selector;","/**\n * Some usefull style functions\n * These functions return an area of style options to be transformed into an area of Style\n * They all take 2 arguments :\n *   feature : to be displayed\n *   layer : that owns the feature\n */\n\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport {\n  getArea,\n} from 'ol/extent';\nimport Icon from 'ol/style/Icon';\nimport Stroke from 'ol/style/Stroke';\nimport Text from 'ol/style/Text';\n\n// Display a label with properties.label\nexport function label(feature) {\n  const properties = feature.getProperties();\n\n  if (properties.label) {\n    const featureArea = getArea(feature.getGeometry().getExtent()),\n      elLabel = document.createElement('span');\n\n    elLabel.innerHTML = properties.label; //HACK to render the html entities in the canvas\n\n    return {\n      text: new Text({\n        text: elLabel.innerText,\n        overflow: properties.overflow, // Display label even if not contained in polygon\n        textBaseline: featureArea ? 'middle' : 'bottom',\n        offsetY: featureArea ? 0 : -13, // Above the icon\n        padding: [1, 1, -1, 3],\n        //BEST line & poly label following the cursor\n        font: '12px Verdana',\n        fill: new Fill({\n          color: 'black',\n        }),\n        backgroundFill: new Fill({\n          color: 'white',\n        }),\n        backgroundStroke: new Stroke({\n          color: 'blue',\n        }),\n      }),\n    };\n  }\n}\n\n// Basic style to display a geo vector layer based on standard properties\nexport function basic(feature, resolution, layer) {\n  const properties = feature.getProperties();\n\n  return [{\n    // Point\n    image: properties.icon ?\n      new Icon({\n        anchor: resolution < layer.options.minResolution ? [\n          feature.getId() / 5 % 1 / 2 + 0.25, // 32 px width frame\n          feature.getId() / 9 % 1, // 44 px hight frame\n        ] : [0.5, 0.5],\n        src: properties.icon, // 24 * 24 icons\n      }) : null,\n\n    // Lines\n    stroke: new Stroke({\n      color: 'blue',\n      width: 2,\n    }),\n\n    // Polygons\n    fill: new Fill({\n      color: 'rgba(0,0,256,0.3)',\n    }),\n    // properties.label if any\n    //BEST appliquer gigue anchor au label\n    ...label(...arguments),\n  }];\n}\n\n// Display a circle with the number of features on the cluster\nexport function cluster(feature) {\n  return [{\n    image: new Circle({\n      radius: 14,\n      stroke: new Stroke({\n        color: 'blue',\n      }),\n      fill: new Fill({\n        color: 'white',\n      }),\n    }),\n    //BEST laisser le texte sur les clusters < 3 icônes\n    text: new Text({\n      text: feature.getProperties().cluster.toString(),\n      font: '12px Verdana',\n    }),\n  }];\n}\n\n// Display the detailed information of a cluster based on standard properties\n// Simplify & aggregate an array of lines\nexport function agregateText(lines, glue) {\n  return lines\n    .filter(Boolean) // Avoid empty lines\n    .map(l => l.toString().replace('_', ' ').trim())\n    .map(l => l[0].toUpperCase() + l.substring(1))\n    .join(glue || '\\n');\n}\n\nexport function details(feature, resolution, layer) {\n  const properties = feature.getProperties();\n\n  feature.setProperties({\n    overflow: true, // Display label even if not contained in polygon\n    label: agregateText([\n      properties.name,\n      agregateText([\n        properties.ele ? parseInt(properties.ele, 10) + ' m' : null,\n        properties.bed ? parseInt(properties.bed, 10) + '\\u255E\\u2550\\u2555' : null,\n      ], ', '),\n      properties.type,\n      properties.cluster ? null : properties.attribution || layer.options.attribution,\n    ]),\n  }, true);\n\n  return label(...arguments);\n}\n\n// Display the basic hovered features\nexport function hover(...args) {\n  return {\n    ...details(...args),\n\n    stroke: new Stroke({\n      color: 'red',\n      width: 2,\n    }),\n  };\n}","/**\n * MyVectorLayer class to facilitate vector layers display\n */\n\nimport {\n  bbox,\n} from 'ol/loadingstrategy';\nimport ClusterSource from 'ol/source/Cluster';\nimport Feature from 'ol/Feature';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport {\n  getCenter,\n} from 'ol/extent';\nimport Point from 'ol/geom/Point';\nimport Style from 'ol/style/Style';\nimport {\n  transformExtent,\n} from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\nimport Selector from './Selector';\nimport * as stylesOptions from './stylesOptions';\n\n/**\n * GeoJSON vector display\n * display the loading status\n */\nclass MyVectorSource extends VectorSource {\n  constructor(options) {\n    // selectName: '', // Name of checkbox inputs to tune the url parameters\n    // addProperties: properties => {}, // Add properties to each received feature\n\n    super(options);\n\n    this.options = options;\n    this.statusEl = document.getElementById(options.selectName + '-status');\n\n    // Display loading satus\n    this.on(['featuresloadstart', 'featuresloadend', 'error', 'featuresloaderror'], evt => {\n      if (this.statusEl)\n        switch (evt.type) {\n          case 'featuresloadstart':\n            this.statusEl.innerHTML = '&#8987;';\n            break;\n          case 'featuresloadend':\n            this.statusEl.innerHTML = '';\n            break;\n          default:\n            this.statusEl.innerHTML = '&#9888;'; // Error symbol\n        }\n    });\n\n    // Compute properties when the layer is loaded & before the cluster layer is computed\n    this.on('change', () =>\n      this.getFeatures().forEach(f => {\n        if (!f.yetAdded) {\n          f.yetAdded = true;\n          f.setProperties(\n            options.addProperties(f.getProperties()),\n            true, // Silent : add the feature without refresh the layer\n          );\n        }\n      })\n    );\n  }\n\n  tuneDistance() {} // MyClusterSource compatibility\n\n  // Redirection for cluster.source compatibility\n  reload() {\n    this.refresh();\n  }\n}\n\n/**\n * Cluster source to manage clusters in the browser\n */\nclass MyClusterSource extends ClusterSource {\n  constructor(options) {\n    // options:\n    // browserClusterFeaturelMaxPerimeter: 300, // (pixels) perimeter of a line or poly above which we do not cluster\n    // Any MyVectorSource options\n\n    // Source to handle the features\n    const initialSource = new MyVectorSource(options);\n\n    // Source to handle the clusters & the isolated features\n    super({\n      source: initialSource,\n      geometryFunction: f => this.geometryFunction_(f, options),\n      createCluster: (p, f) => this.createCluster_(p, f),\n\n      ...options,\n    });\n\n    this.options = options;\n  }\n\n  // Generate a center point where to display the cluster\n  geometryFunction_(feature, options) {\n    const geometry = feature.getGeometry();\n\n    if (geometry) {\n      const ex = feature.getGeometry().getExtent(),\n        featurePixelPerimeter = (ex[2] - ex[0] + ex[3] - ex[1]) * 2 / this.resolution;\n\n      // Don't cluster lines or polygons whose the extent perimeter is more than x pixels\n      if (featurePixelPerimeter > options.browserClusterFeaturelMaxPerimeter)\n        this.addFeature(feature); // And return null to not cluster this feature\n      else\n        return new Point(getCenter(feature.getGeometry().getExtent()));\n    }\n  }\n\n  // Generate the features to render the cluster\n  createCluster_(point, features) {\n    let nbMaxClusters = 0,\n      includeCluster = false,\n      lines = [];\n\n    features.forEach(f => {\n      const properties = f.getProperties();\n\n      lines.push(properties.name);\n      nbMaxClusters += parseInt(properties.cluster, 10) || 1;\n      if (properties.cluster)\n        includeCluster = true;\n    });\n\n    // Single feature : display it\n    if (nbMaxClusters === 1)\n      return features[0];\n\n    if (includeCluster || lines.length > 5)\n      lines = ['Cliquer pour zoomer'];\n\n    // Display a cluster point\n    return new Feature({\n      id: features[0].getId(), // Pseudo id = the id of the first feature in the cluster\n      name: stylesOptions.agregateText(lines),\n      geometry: point, // The gravity center of all the features in the cluster\n      features: features,\n      cluster: nbMaxClusters, //BEST voir pourquoi on ne met pas ça dans properties\n    });\n  }\n\n  tuneDistance(map) {\n    const s = map.getSize(),\n      n = this.options.nbMaxClusters,\n      f = (s[0] + s[1] + 5000) / 5000; // More clusters on big maps\n\n    if (n)\n      this.setDistance(Math.sqrt(s[0] * s[1] / n / f));\n  }\n\n  reload() {\n    // Reload the wrapped source\n    this.getSource().reload();\n  }\n}\n\n/**\n * Browser & server clustered layer\n */\nclass MyBrowserClusterVectorLayer extends VectorLayer {\n  constructor(options) {\n    // browserClusterMinResolution: 10, // (meters per pixel) resolution below which the browser no longer clusters but add a jitter\n\n    // Any ol.source.layer.Vector options\n\n    // High resolutions layer, can call for server clustering\n    const hiResOptions = {\n      source: options.nbMaxClusters ?\n        new MyClusterSource(options) : // Use a cluster source and a vector source to manages clusters\n        new MyVectorSource(options), // or a vector source to get the data\n\n      ...options,\n\n      minResolution: Math.max(\n        options.minResolution || 0,\n        options.browserClusterMinResolution || 0,\n      ),\n    };\n\n    super(hiResOptions);\n    this.options = hiResOptions; // Mem for further use\n\n    // Low resolutions layer without clustering\n    if (options.browserClusterMinResolution &&\n      options.browserClusterMinResolution < options.maxResolution) {\n      const lowResOptions = {\n        source: new MyVectorSource(options),\n\n        ...options,\n\n        maxResolution: options.browserClusterMinResolution,\n        type: 'lowResolution',\n      };\n\n      this.lowResolutionLayer = new VectorLayer(lowResOptions);\n      this.lowResolutionLayer.options = lowResOptions;\n    }\n  }\n\n  setMapInternal(map) {\n    if (this.lowResolutionLayer)\n      map.addLayer(this.lowResolutionLayer);\n\n    return super.setMapInternal(map);\n  }\n\n  // Propagate reload\n  reload(visible) {\n    this.setVisible(visible);\n\n    if (visible && this.state_) //BEST find better than this.state_\n      this.getSource().reload();\n\n    if (this.lowResolutionLayer) {\n      this.lowResolutionLayer.setVisible(visible);\n\n      if (visible && this.lowResolutionLayer.state_)\n        this.lowResolutionLayer.getSource().reload();\n    }\n  }\n}\n\nclass MyServerClusterVectorLayer extends MyBrowserClusterVectorLayer {\n  constructor(options) {\n    // serverClusterMinResolution: 100, // (meters per pixel) resolution above which we ask clusters to the server\n\n    // Low resolutions layer to display the normal data\n    super({\n      ...options,\n\n      maxResolution: options.serverClusterMinResolution,\n      type: 'browserCluster',\n    });\n\n    // High resolutions layer to get and display the clusters delivered by the server at hight resolutions\n    if (options.serverClusterMinResolution)\n      this.serverClusterLayer = new MyBrowserClusterVectorLayer({\n        ...options,\n\n        minResolution: options.serverClusterMinResolution,\n        type: 'serverCluster',\n      });\n  }\n\n  setMapInternal(map) {\n    if (this.serverClusterLayer)\n      map.addLayer(this.serverClusterLayer);\n\n    map.on('change:size', () => {\n      this.getSource().tuneDistance(map);\n\n      if (this.serverClusterLayer)\n        this.serverClusterLayer.getSource().tuneDistance(map);\n    });\n\n    return super.setMapInternal(map);\n  }\n\n  // Propagate the setVisible to the serverClusterLayer\n  //BEST check why reload doesn't do the job\n  setVisible(visible) {\n    if (this.serverClusterLayer)\n      this.serverClusterLayer.setVisible(visible);\n\n    return super.setVisible(visible);\n  }\n\n  // Propagate the reload to the serverClusterLayer\n  reload(visible) {\n    if (this.serverClusterLayer)\n      this.serverClusterLayer.reload(visible);\n\n    return super.reload(visible);\n  }\n}\n\n/**\n * Facilities added vector layer\n * Style features\n * Layer & features selector\n */\nclass MyVectorLayer extends MyServerClusterVectorLayer {\n  constructor(opt) {\n    const options = {\n      // host: '',\n      strategy: bbox,\n      dataProjection: 'EPSG:4326',\n\n      // Clusters:\n      // serverClusterMinResolution: 100, // (meters per pixel) resolution above which we ask clusters to the server\n      // browserClusterMinResolution: 10, // (meters per pixel) resolution below which the browser no longer clusters but add a jitter\n      // nbMaxClusters: 108, // Number of clusters on the map display. Replace distance\n      // distance: 50, // (pixels) distance above which we cluster\n      minDistance: 24, // (pixels) minimum distance in pixels between clusters (can slide cluster icons)\n      // browserClusterFeaturelMaxPerimeter: 300, // (pixels) perimeter of a line or poly above which we do not cluster\n\n      // Features\n      // addProperties: properties => {}, // Add properties to each received feature\n      basicStylesOptions: stylesOptions.basic, // (feature, resolution, layer)\n      hoverStylesOptions: stylesOptions.hover, // (feature, resolution, layer)\n      // selectName: '', // Name of checkbox inputs to tune the url parameters\n      // initSelect: string|true|false, // If defined, force the selector\n      selector: new Selector(opt.selectName, opt.initSelect), // Tune the url parameters\n      zIndex: 100, // Above tiles layers\n\n      // Any ol.source.Vector options\n      // Any ol.source.layer.Vector options\n\n      // Methods to instantiate\n      // url (extent, resolution, mapProjection) // Calculate the url\n      // query (extent, resolution, mapProjection, optioons) ({_path: '...'}),\n      // bbox (extent, resolution, mapProjection) => {}\n      // addProperties (properties) => {}, // Add properties to each received features\n\n      ...opt,\n    };\n    options.format ||= new GeoJSON(options); //BEST treat & display Json errors\n\n    super({\n      url: (e, r, p) => this.url(e, r, p),\n      addProperties: p => this.addProperties(p),\n      style: (f, r) => this.style(f, r, this), //BEST BUG should apply on each ol.vector.layer (now only the basic layer of 3)\n\n      ...options,\n    });\n\n    this.host = options.host;\n    this.url ||= options.url;\n    this.query ||= options.query;\n    this.bbox ||= options.bbox;\n    this.addProperties ||= options.addProperties;\n    this.style ||= options.style;\n    this.strategy = options.strategy;\n    this.dataProjection = options.dataProjection;\n    this.format = options.format;\n    this.selector = options.selector;\n\n    // Define the selector action\n    this.selector.callbacks.push(() => this.reload());\n    this.reload();\n  }\n\n  url(...args) {\n    const urlArgs = this.query(...args, this.options),\n      url = this.host + urlArgs._path; // Mem _path\n\n    if (this.strategy === bbox)\n      urlArgs.bbox = this.bbox(...args);\n\n    // Add a pseudo parameter if any marker or edit has been done\n    const version = sessionStorage.myolLastchange ?\n      '&' + Math.round(sessionStorage.myolLastchange / 2500 % 46600).toString(36) : '';\n\n    // Clean null & not relative parameters\n    Object.keys(urlArgs).forEach(k => {\n      if (k === '_path' || urlArgs[k] === 'on' || !urlArgs[k] || !urlArgs[k].toString())\n        delete urlArgs[k];\n    });\n\n    return url + '?' + new URLSearchParams(urlArgs).toString() + version;\n  }\n\n  bbox(extent, resolution, mapProjection) {\n    return transformExtent(\n      extent,\n      mapProjection,\n      this.dataProjection, // Received projection\n    ).map(c => c.toPrecision(6)); // Limit the number of digits (10 m)\n  }\n\n  addProperties() {}\n\n  // Function returning an array of styles options\n  style(feature, ...args) {\n    const sof = feature.getProperties().cluster ?\n      stylesOptions.cluster :\n      this.options.basicStylesOptions;\n\n    return sof(feature, ...args) // Call the styleOptions function\n      .map(so => new Style(so)); // Transform into an array of Style objects\n  }\n\n  // Define reload action\n  reload() {\n    return super.reload(this.selector.getSelection().length > 0);\n  }\n}\n\nexport default MyVectorLayer;","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options],\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack,\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * Many simplified display of various vector layers services\n */\n\nimport {\n  all,\n} from 'ol/loadingstrategy';\nimport OSMXML from 'ol/format/OSMXML';\nimport {\n  transformExtent,\n} from 'ol/proj';\n\nimport MyVectorLayer from './MyVectorLayer';\n\n// Get icon from chemineur.fr\nfunction genericIconUrl(type, hostIcons) {\n  if (type) {\n    const icons = type.split(' ');\n\n    return (hostIcons || 'https://chemineur.fr/ext/Dominique92/GeoBB/icones/') +\n      icons[0] +\n      (icons.length > 1 ? '_' + icons[1] : '') + // Limit to 2 type names & ' ' -> '_'\n      '.svg';\n  }\n}\n\nfunction addTag(doc, node, k, v) {\n  const newTag = doc.createElement('tag');\n\n  newTag.setAttribute('k', k);\n  newTag.setAttribute('v', v);\n  node.appendChild(newTag);\n}\n\nexport class GeoBB extends MyVectorLayer {\n  constructor(options) {\n    super({\n      serverClusterMinResolution: 100, // (meters per pixel) resolution above which we ask clusters to the server\n      browserClusterMinResolution: 10, // (meters per pixel) resolution below which the browser no longer clusters but add a jitter\n      nbMaxClusters: 108, // Number of clusters on the map display. Replace distance\n      browserClusterFeaturelMaxPerimeter: 300, // (pixels) perimeter of a line or poly above which we do not cluster\n\n      // Any myol.layer.MyVectorLayer, ol.source.Vector options, ol.source.layer.Vector\n      ...options,\n    });\n  }\n\n  query(extent, resolution) {\n    return {\n      _path: 'ext/Dominique92/GeoBB/gis.php',\n      cat: this.options.selector.getSelection(),\n      layer: resolution < this.options.serverClusterMinResolution ? null : 'cluster', // For server cluster layer\n    };\n  }\n}\n\n// chemineur.fr\nexport class Chemineur extends GeoBB {\n  constructor(options) {\n    super({\n      host: 'https://chemineur.fr/',\n      attribution: '&copy;chemineur.fr',\n\n      // Any myol.layer.MyVectorLayer, ol.source.Vector options, ol.source.layer.Vector\n\n      ...options,\n    });\n  }\n}\n\n// alpages.info\n//TODO vite : Access to XMLHttpRequest at 'https://alpages.info/ext/Dominique92/GeoBB/gis.php?forums=on&bbox=5.85311%2C44.7727%2C5.91689%2C44.8093' from origin 'http://localhost:5173' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\nexport class Alpages extends MyVectorLayer {\n  constructor(options) {\n    super({\n      host: 'https://alpages.info/',\n      attribution: '&copy;alpages.info',\n      browserClusterFeaturelMaxPerimeter: 300, // (pixels) perimeter of a line or poly above which we do not cluster\n\n      // Any myol.layer.MyVectorLayer, ol.source.Vector options, ol.source.layer.Vector\n\n      ...options,\n    });\n  }\n\n  query() {\n    return {\n      _path: 'ext/Dominique92/GeoBB/gis.php',\n      forums: this.options.selector.getSelection(),\n    };\n  }\n\n  addProperties(properties) {\n    return {\n      icon: genericIconUrl(properties.type, this.options.hostIcons), // Replace the alpages icon\n      link: this.host + 'viewtopic.php?t=' + properties.id,\n    };\n  }\n}\n\n// refuges.info\nexport class WRI extends MyVectorLayer {\n  constructor(options) {\n    super({\n      host: 'https://www.refuges.info/',\n      attribution: '&copy;refuges.info',\n\n      serverClusterMinResolution: 100, // (meters per pixel) resolution above which we ask clusters to the server\n      nbMaxClusters: 108, // Number of clusters on the map display. Replace distance\n      browserClusterMinResolution: 10, // (meters per pixel) resolution below which the browser no longer clusters\n\n      // Any myol.layer.MyVectorLayer, ol.source.Vector options, ol.source.layer.Vector\n\n      ...options,\n    });\n  }\n\n  query(extent, resolution) {\n    return {\n      _path: 'api/bbox',\n      'nb_points': 'all',\n      'type_points': this.options.selector.getSelection(),\n      cluster: resolution > this.options.serverClusterMinResolution ? 0.1 : null, // For server cluster layer\n    };\n  }\n\n  addProperties(properties) {\n    if (!properties.cluster)\n      return {\n        name: properties.nom,\n        icon: this.host + 'images/icones/' + properties.type.icone + '.svg',\n        ele: properties.coord.alt,\n        bed: properties.places.valeur,\n        type: properties.type.valeur,\n        link: properties.lien,\n      };\n  }\n}\n\n// pyrenees-refuges.com\nexport class PRC extends MyVectorLayer {\n  constructor(options) {\n    super({\n      url: 'https://www.pyrenees-refuges.com/api.php?type_fichier=GEOJSON',\n      strategy: all,\n      attribution: '&copy;Pyrenees-Refuges',\n      nbMaxClusters: 108, // Number of clusters on the map display. Replace distance\n\n      // Any myol.layer.MyVectorLayer, ol.source.Vector options, ol.source.layer.Vector\n\n      ...options,\n    });\n  }\n\n  addProperties(properties) {\n    return {\n      type: properties.type_hebergement,\n      icon: genericIconUrl(properties.type_hebergement, this.options.hostIcons),\n      ele: properties.altitude,\n      capacity: properties.cap_ete,\n      link: properties.url,\n    };\n  }\n}\n\n// CampToCamp.org\nexport class C2C extends MyVectorLayer {\n  constructor(options) {\n    super({\n      host: 'https://api.camptocamp.org/',\n      dataProjection: 'EPSG:3857',\n      attribution: '&copy;Camp2camp',\n\n      // Any myol.layer.MyVectorLayer options\n\n      ...options,\n    });\n\n    this.format.readFeatures = json => {\n      const features = [];\n\n      JSON.parse(json).documents.forEach(properties =>\n        features.push({\n          id: properties.document_id,\n          type: 'Feature',\n          geometry: JSON.parse(properties.geometry.geom),\n          properties: {\n            name: properties.locales[0].title,\n            type: properties.waypoint_type,\n            icon: genericIconUrl(properties.waypoint_type, options.hostIcons),\n            ele: properties.elevation,\n            link: 'https://www.camptocamp.org/waypoints/' + properties.document_id,\n          },\n        })\n      );\n\n      return this.format.readFeaturesFromObject({\n        type: 'FeatureCollection',\n        features: features,\n      });\n    };\n  }\n\n  query() {\n    return {\n      _path: 'waypoints',\n      wtyp: this.selector.getSelection(),\n      limit: 100, // C2C max limit\n    };\n  }\n}\n\n/**\n * OSM XML overpass POI layer\n * From: https://openlayers.org/en/latest/examples/vector-osm.html\n * Doc: http://wiki.openstreetmap.org/wiki/Overpass_API/Language_Guide\n */\nexport class Overpass extends MyVectorLayer {\n  constructor(options) {\n    const statusEl = document.getElementById(options.selectName),\n      selectEls = document.getElementsByName(options.selectName);\n\n    super({\n      host: 'https://overpass-api.de',\n      //host: 'https://lz4.overpass-api.de',\n      //host: 'https://overpass.kumi.systems',\n      bbox: () => null, // No bbox at the end of the url\n      format: new OSMXML(),\n      attribution: '&copy;OpenStreetMap',\n\n      maxResolution: 50,\n      nbMaxClusters: 108, // Number of clusters on the map display. Replace distance\n\n      // Any myol.layer.MyVectorLayer, ol.source.Vector options, ol.source.layer.Vector\n      ...options,\n    });\n\n    // List of acceptable tags in the request return\n    let tags = '';\n\n    for (const e in selectEls)\n      if (selectEls[e].value)\n        tags += selectEls[e].value.replace('private', '');\n\n    // Extract features from data when received\n    this.format.readFeatures = function(doc, opt) {\n      const newNodes = [];\n\n      for (let node = doc.documentElement.firstElementChild; node; node = node.nextSibling) {\n        // Translate attributes to standard myol\n        for (let tag = node.firstElementChild; tag; tag = tag.nextSibling)\n          if (tag.attributes) {\n            const tagv = tag.getAttribute('v');\n            if (tags.indexOf(tag.getAttribute('k')) !== -1 &&\n              tags.indexOf(tagv) !== -1 &&\n              tag.getAttribute('k') !== 'type') {\n              addTag(doc, node, 'type', tagv);\n              addTag(doc, node, 'icon',\n                genericIconUrl(tagv, options.hostIcons)\n              );\n\n              // Only once for a node\n              addTag(doc, node, 'link', 'https://www.openstreetmap.org/' + node.nodeName + '/' + node.id);\n            }\n\n            if (tag.getAttribute('k') && tag.getAttribute('k').includes('capacity:'))\n              addTag(doc, node, 'capacity', tagv);\n          }\n\n        // Transform an area to a node (picto) at the center of this area\n        if (node.nodeName === 'way') {\n          const newNode = doc.createElement('node');\n\n          newNode.id = node.id;\n          newNodes.push(newNode);\n\n          // Browse <way> attributes to build a new node\n          for (let subTagNode = node.firstElementChild; subTagNode; subTagNode = subTagNode.nextSibling)\n            switch (subTagNode.nodeName) {\n              case 'center':\n                // Set node attributes\n                newNode.setAttribute('lon', subTagNode.getAttribute('lon'));\n                newNode.setAttribute('lat', subTagNode.getAttribute('lat'));\n                newNode.setAttribute('nodeName', subTagNode.nodeName);\n                break;\n\n              case 'tag':\n                // Get existing properties\n                newNode.appendChild(subTagNode.cloneNode());\n\n                // Add a tag to mem what node type it was (for link build)\n                addTag(doc, newNode, 'nodetype', node.nodeName);\n            }\n        }\n\n        // Status 200 / error message\n        if (node.nodeName === 'remark' && statusEl)\n          statusEl.textContent = node.textContent;\n      }\n\n      // Add new nodes to the document\n      newNodes.forEach(n => doc.documentElement.appendChild(n));\n\n      return OSMXML.prototype.readFeatures.call(this, doc, opt);\n    };\n  }\n\n  query(extent, resolution, mapProjection) {\n    const selections = this.selector.getSelection(),\n      ex4326 = transformExtent(extent, mapProjection, 'EPSG:4326').map(c => c.toPrecision(6)),\n      bbox = '(' + ex4326[1] + ',' + ex4326[0] + ',' + ex4326[3] + ',' + ex4326[2] + ');',\n      args = [];\n\n    for (let s = 0; s < selections.length; s++) // For each selected input checkbox\n      selections[s].split('+') // Multiple choices separated by \"+\"\n      .forEach(sel => args.push('nwr' + sel + bbox)); // Ask for node, way & relation in the bbox\n\n    return {\n      _path: '/api/interpreter',\n      data: '[timeout:5];(' + args.join('') + ');out center;',\n    };\n  }\n\n  bbox() {}\n}\n\n// Vectors layers examples\nexport function collection(options = {}) {\n  return [\n    new WRI(options.wri),\n    new PRC(options.prc),\n    new C2C(options.c2c),\n    new Overpass(options.osm),\n    new Chemineur(options.chemineur),\n    new Alpages(options.alpages),\n  ];\n}","/**\n * This file defines the myol.layer exports\n */\n\nimport BackgroundLayer from './BackgroundLayer';\nimport VectorEditor from './VectorEditor';\nimport Hover from './Hover';\nimport Marker from './Marker';\nimport MyVectorLayer from './MyVectorLayer';\nimport Selector from './Selector';\nimport * as tileLayercollection from './TileLayerCollection';\nimport * as vectorLayerCollection from './VectorLayerCollection';\n\nexport default {\n  BackgroundLayer: BackgroundLayer,\n  VectorEditor: VectorEditor,\n  Hover: Hover,\n  Marker: Marker,\n  MyVectorLayer,\n  Selector: Selector,\n  tile: tileLayercollection,\n  vector: vectorLayerCollection,\n};","/**\n * VectorEditor layer to edit GeoJSON lines & polygons\n */\n\nimport Circle from 'ol/style/Circle';\nimport Control from 'ol/control/Control';\nimport Draw from 'ol/interaction/Draw';\nimport Feature from 'ol/Feature';\nimport Fill from 'ol/style/Fill';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Icon from 'ol/style/Icon';\nimport LineString from 'ol/geom/LineString';\nimport Modify from 'ol/interaction/Modify';\nimport {\n  never\n} from 'ol/events/condition';\nimport Point from 'ol/geom/Point';\nimport Polygon from 'ol/geom/Polygon';\nimport Select from 'ol/interaction/Select';\nimport Snap from 'ol/interaction/Snap';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\nimport './vectorEditor.css';\n\nclass VectorEditor extends VectorLayer {\n  constructor(opt) {\n    const options = {\n      geoJsonId: 'geojson',\n      format: new GeoJSON(),\n      dataProjection: 'EPSG:4326',\n      featureProjection: 'EPSG:3857',\n      decimals: 5, //Output precision\n      tolerance: 7, // Px\n      // direction: false, // Add arrows to each line segment to show the direction\n      // canMerge: false, // Merge lines having a common end\n      // withPolys: false, // Can edit polygons\n      // withHoles: false, // Allow holes in polygons\n      // baseStyleOptions: {},\n      // selectedStyleOptions: {},\n\n      writeGeoJson: () => // writeGeoJson (features, lines, polys, options)\n        this.options.format.writeFeatures(\n          this.editedSource.getFeatures(),\n          this.options,\n        ),\n\n      ...opt,\n    }\n\n    // Read data in an html element\n    const geoJsonEl = document.getElementById(options.geoJsonId) ||\n      document.createElement('textarea'),\n      geoJson = geoJsonEl.value.trim() ||\n      geoJsonEl.innerHTML.trim() ||\n      '{\"type\":\"FeatureCollection\",\"features\":[]}';\n\n    // The editor source\n    const editedSource = new VectorSource({\n      features: options.format.readFeatures(geoJson, options),\n      wrapX: false,\n\n      ...options,\n    });\n\n    // The editor layer\n    super({\n      source: editedSource,\n      zIndex: 400, // Editor & cursor above the features\n      style: new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 2,\n        }),\n        fill: new Fill({\n          color: 'rgba(0,0,255,0.2)',\n        }),\n\n        ...options.baseStyleOptions,\n      }),\n\n      ...options,\n    });\n\n    this.options = options;\n    this.geoJsonEl = geoJsonEl;\n    this.editedSource = editedSource;\n    this.snapSource = new VectorSource({});\n  } // End constructor\n\n  setMapInternal(map) {\n    super.setMapInternal(map);\n    this.map = map;\n\n    // Interactions\n    this.selectInteraction = new Select({\n      hitTolerance: this.options.tolerance, // Default is 0\n      toggleCondition: never, // No deselection on shift click\n      filter: (f, layer) => layer && (layer.getSource() === this.editedSource),\n      style: (f, r) => this.selectStyles(f, r),\n    });\n\n    this.modifyInteraction = new Modify({\n      features: this.selectInteraction.getFeatures(),\n      pixelTolerance: this.options.tolerance, // Default is 10\n    });\n\n    if (this.options.withPolys)\n      this.drawPolyInteraction = new Draw({ // Draw line\n        type: 'Polygon',\n        source: this.editedSource,\n        traceSource: this.snapSource,\n        trace: true,\n        stopClick: true, // Avoid zoom when finish drawing by doubleclick\n        style: f => this.selectStyles(f),\n      });\n\n    this.drawLineInteraction = new Draw({ // Draw line\n      type: 'LineString',\n      source: this.editedSource,\n      traceSource: this.snapSource,\n      trace: true,\n      stopClick: true, // Avoid zoom when finish drawing by doubleclick\n      style: f => this.selectStyles(f),\n    });\n\n    this.snapInteraction = new Snap({\n      source: this.editedSource,\n      pixelTolerance: this.options.tolerance, // Default is 10\n    });\n\n    // Buttons\n    const buttonsName = this.options.withPolys ? ['modify', 'drawPoly', 'drawLine'] : ['modify', 'drawLine'];\n\n    buttonsName.forEach(intName => {\n      const buttonEl = document.createElement('button'),\n        element = document.createElement('div');\n\n      buttonEl.setAttribute('type', 'button');\n      element.className = 'ol-unselectable ol-control edit-button edit-button-' + intName;\n      element.appendChild(buttonEl);\n\n      const helpEl = document.getElementById('edit-help-' + intName);\n      if (helpEl)\n        element.appendChild(helpEl);\n\n      buttonEl.addEventListener('click', () => this.restartInteractions(intName));\n\n      // Add the button to the map\n      map.addControl(new Control({\n        element: element,\n      }));\n    });\n\n    // Interactions listeners\n    this.selectInteraction.on('select', () => this.optimiseAndSave()); // Merge old separated segments\n\n    this.modifyInteraction.on('modifystart', evt => {\n      const oEvt = evt.mapBrowserEvent.originalEvent,\n        selectedFeature = this.selectInteraction.getFeatures().item(0),\n        coordinates = selectedFeature.getGeometry().getCoordinates();\n\n      // Shift + click : reverse line direction\n      if (oEvt.shiftKey && !oEvt.ctrlKey && !oEvt.altKey &&\n        typeof coordinates[0][0] === 'number') {\n        this.editedSource.removeFeature(selectedFeature);\n\n        this.editedSource.addFeature(new Feature({\n          geometry: new LineString(coordinates.reverse()),\n        }));\n      }\n\n      // Ctrl+Alt+click on segment : delete the line or poly\n      if (!oEvt.shiftKey && oEvt.ctrlKey && oEvt.altKey)\n        this.editedSource.removeFeature(selectedFeature);\n    });\n\n    this.editedSource.on('addfeature', () => {\n      this.optimiseAndSave();\n      this.restartInteractions('modify');\n    });\n\n    this.modifyInteraction.on('modifyend', () => this.optimiseAndSave());\n\n    // At init\n    this.map.once('loadend', () => {\n      this.coordinate = this.map.getView().getCenter();\n\n      this.optimiseAndSave();\n      this.restartInteractions('modify');\n    });\n\n    map.on('pointermove', evt => {\n      this.coordinate = evt.coordinate;\n\n      // Change pointer if a feature is hovered\n      const selectedFeatures = this.selectInteraction.getFeatures();\n\n      this.map.getTargetElement().classList.remove('edit-pointed');\n      if (selectedFeatures.getLength()) {\n        this.map.forEachFeatureAtPixel(\n          evt.pixel,\n          feature => {\n            if (feature !== selectedFeatures.item(0))\n              this.map.getTargetElement().classList.add('edit-pointed');\n          }, {\n            layerFilter: (layer) => layer.getSource() === this.editedSource, // Only the edited layer\n            hitTolerance: this.options.tolerance, // Default is 0\n          },\n        );\n      }\n    });\n\n    map.on('click', evt => {\n      const oEvt = evt.originalEvent;\n\n      if (!oEvt.shiftKey && oEvt.ctrlKey && !oEvt.altKey)\n        this.optimiseAndSave(\n          this.snapInteraction.snapTo(\n            evt.pixel,\n            evt.coordinate,\n            map,\n          ).vertex\n        );\n    });\n  } // End setMapInternal\n\n  restartInteractions(intName) {\n    const interactionName = this.options.withPolys ? ['select', 'modify', 'drawPoly', 'drawLine', 'snap'] : ['select', 'modify', 'drawLine', 'snap'];\n\n    interactionName.forEach(i =>\n      this.map.removeInteraction(this[i + 'Interaction'])\n    );\n\n    if (intName === 'modify')\n      this.map.addInteraction(this.selectInteraction);\n\n    this.map.addInteraction(this[intName + 'Interaction']);\n    this.map.addInteraction(this.snapInteraction); // Must be added after the others\n\n    this.map.getTargetElement().firstChild.className = 'ol-viewport edit-view-' + intName;\n\n    // For snap & traceSource : register again the full list of features as addFeature manages already registered\n    this.snapSource.clear();\n    this.map.getLayers().forEach(layer => {\n      if (layer.getSource() !== this.editedSource &&\n        layer.getSource() &&\n        layer.getSource().getFeatures) // Vector layers only\n        layer.getSource().getFeatures().forEach(feature => {\n          this.snapInteraction.addFeature(feature);\n          this.snapSource.addFeature(feature);\n        });\n    });\n  }\n\n  optimiseAndSave(splitCord) {\n    if (!this.semaphore) { // Avoid recursion when adding the features\n      this.semaphore = true;\n\n      // Get optimized coords\n      const editedFeatures = this.editedSource.getFeatures(), // Get edited features\n        coordinates = editedFeatures.map(\n          f => this.flatFeatures(f.getGeometry()) // Get flat coordinates\n        ),\n        // Get all edited features as array of lines coordinates\n        lines = this.flatCoord(coordinates, splitCord),\n        polys = [];\n\n      // Merge lines having a common end\n      if (this.options.canMerge)\n        for (const a in lines) {\n          for (let b = 0; b < a; b++) { // Once each combination\n            if (lines[b]) {\n              const m = [a, b];\n\n              for (let i = 4; i; i--) // 4 times\n                if (lines[m[0]] && lines[m[1]]) { // Test if the line has been removed\n                  // Shake lines end to explore all possibilities\n                  m.reverse();\n                  lines[m[0]].reverse();\n\n                  // Merge 2 lines having 2 ends in common\n                  if (this.compareCoords(lines[m[0]][lines[m[0]].length - 1], lines[m[1]][0], splitCord)) {\n                    lines[m[0]] = lines[m[0]].concat(lines[m[1]].slice(1)).reverse();\n                    delete lines[m[1]]; // Remove the line but don't renumber the array keys\n                  }\n                }\n            }\n          }\n        }\n\n      // Make polygons with looped lines\n      if (this.options.withPolys)\n        for (const a in lines)\n          if (this.compareCoords(lines[a]) && // If this line is closed\n            !this.compareCoords(splitCord, lines[a][0])) { // Except if we just split it\n            polys.push([lines[a]]); // Add the polygon\n            delete lines[a]; // Forget the line\n          }\n\n      // Makes holes if a polygon is included in a biggest one\n      if (this.options.withHoles)\n        for (const p1 in polys) { // Explore all Polygons combinaison\n          const fs = new Polygon(polys[p1]);\n\n          for (const p2 in polys)\n            if (polys[p2] && p1 !== p2) {\n              let intersects = true;\n\n              for (const c in polys[p2][0])\n                if (!fs.intersectsCoordinate(polys[p2][0][c]))\n                  intersects = false;\n\n              if (intersects) { // If one intersects a bigger\n                polys[p1].push(polys[p2][0]); // Include the smaler in the bigger\n                delete polys[p2]; // Forget the smaller\n              }\n            }\n        }\n\n      // Recreate features\n      this.editedSource.clear();\n      lines.forEach(l => {\n        this.editedSource.addFeature(new Feature({\n          geometry: new LineString(l),\n        }));\n      });\n      polys.forEach(p => {\n        this.editedSource.addFeature(new Feature({\n          geometry: new Polygon(p),\n        }));\n      });\n\n      // Save geometries in <EL> as geoJSON at every change\n      if (this.geoJsonEl)\n        this.geoJsonEl.value = this.options.writeGeoJson(\n          this.editedSource.getFeatures(),\n          lines.filter(Boolean),\n          polys.filter(Boolean),\n          this.options,\n        ).replaceAll(',\"properties\":null', '');\n\n      // Select the feature closest to the mouse position\n      //TODO do it also when loading a file\n      const selectedFeatures = this.selectInteraction.getFeatures();\n\n      if (this.editedSource.getFeatures().length) {\n        selectedFeatures.clear();\n        selectedFeatures.push(\n          this.editedSource.getClosestFeatureToCoordinate(this.coordinate)\n        );\n      }\n      delete this.semaphore;\n    }\n  } // End optimiseAndSave\n\n  flatFeatures(geom) {\n    if (geom.getType().match(/collection/iu)) // Recurse Collections\n      return geom.getGeometries().map(g => this.flatFeatures(g));\n    return geom.getCoordinates();\n  }\n\n  // Get all lines fragments (lines, polylines, polygons, multipolygons, hole polygons, ...) at the same level\n  flatCoord(coords, splitCord) {\n    const lines = [];\n\n    coords.forEach(segmentCoords => {\n      if (typeof segmentCoords[0] === 'object') {\n        if (typeof segmentCoords[0][0] === 'object') // Recurse for multi* or polys\n          lines.push(...this.flatCoord(segmentCoords, splitCord));\n        else if (typeof segmentCoords[0][0] === 'number') { // Lines\n          if (splitCord) {\n            lines.push([]);\n            segmentCoords.forEach(p => {\n              lines[lines.length - 1].push(p);\n              // Split segments if required\n              if (this.compareCoords(splitCord, p))\n                lines.push([p]);\n            });\n          } else\n            lines.push(segmentCoords);\n        }\n      }\n    });\n\n    return lines;\n  }\n\n  compareCoords(a, b, splitCord) {\n    if (!a) return false;\n    if (this.compareCoords(splitCord, a)) return false; // Except if we just split it\n    if (!b) return this.compareCoords(a[0], a[a.length - 1]); // Compare start with end\n    return a[0] === b[0] && a[1] === b[1]; // 2 coordinates\n  }\n\n  // Style to color selected features with arrows, begin & end points\n  selectStyles(feature, resolution) {\n    const geometry = feature.getGeometry(),\n\n      selectedStyleOptions = {\n        // Lines\n        stroke: new Stroke({\n          color: 'red',\n          width: 2,\n        }),\n        // Polygons\n        fill: new Fill({\n          color: 'rgba(255,0,0,0.2)',\n        }),\n        // Begin & end marker\n        radius: 3,\n\n        ...this.options.selectedStyleOptions,\n      },\n\n      circle = new Circle(selectedStyleOptions),\n\n      featureStyles = [\n        new Style({\n          // Line & Poly\n          ...selectedStyleOptions,\n          // Draw marker\n          image: circle,\n        }),\n      ];\n\n    // Circle at the ends of the line\n    if (geometry.getCoordinates) {\n      const coordinates = geometry.getCoordinates(),\n        circlesCoords = [coordinates[0]];\n\n      if (!this.options.direction)\n        circlesCoords.push(coordinates[coordinates.length - 1]);\n\n      circlesCoords.forEach(cc => {\n        featureStyles.push(\n          new Style({\n            geometry: new Point(cc),\n            image: circle,\n          }),\n        );\n      });\n    }\n\n    // Arrows to show the line direction\n    if (this.options.direction && geometry.forEachSegment && resolution) {\n      let last = null;\n\n      geometry.forEachSegment((start, end) => {\n        if (!last) last = start;\n\n        const dx = end[0] - last[0],\n          dy = end[1] - last[1];\n\n        if (Math.abs(dx) + Math.abs(dy) > resolution * 50) {\n          last = end;\n          featureStyles.push(\n            new Style({\n              geometry: new Point(end),\n              image: new Icon({\n                rotateWithView: true,\n                rotation: -Math.atan2(dy, dx),\n                src: 'data:image/svg+xml;utf8,\\\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 6 6\" width=\"10\" height=\"10\">\\\n<path stroke=\"red\" d=\"M0 0 4 3 M4 3 0 6\" />\\\n</svg>',\n              }),\n            }),\n          );\n        }\n      });\n    }\n\n    return featureStyles;\n  };\n}\n\nexport default VectorEditor;","/**\n * Hover & click management\n * Display the hovered feature with the hover style\n * Go to the link property when click a feature\n */\n\nimport Style from 'ol/style/Style';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\nclass Hover extends VectorLayer {\n  constructor(options) {\n    super({\n      source: new VectorSource(),\n      zIndex: 500, // Above all layers\n      wrapX: false,\n\n      ...options,\n    });\n  }\n\n  // Attach an hover & click listener to the map\n  setMapInternal(map) {\n    const mapEl = map.getTargetElement();\n\n    // Basic listeners\n    map.on(['pointermove', 'click'], evt => this.mouseListener(evt));\n\n    // Leaving the map reset hovering\n    window.addEventListener('mousemove', evt => {\n      if (mapEl) {\n        const divRect = mapEl.getBoundingClientRect();\n\n        // The mouse is outside of the map\n        if (evt.clientX < divRect.left || divRect.right < evt.clientX ||\n          evt.clientY < divRect.top || divRect.bottom < evt.clientY)\n          this.getSource().clear()\n      }\n    });\n\n    return super.setMapInternal(map);\n  }\n\n  mouseListener(evt) {\n    const map = evt.map,\n      resolution = map.getView().getResolution(),\n      source = this.getSource();\n\n    // Find the first hovered feature & layer\n    let hoveredLayer = null;\n    const hoveredFeature = map.forEachFeatureAtPixel(\n        map.getEventPixel(evt.originalEvent),\n        (f, l) => {\n          if ((l && l.options && l.options.hoverStylesOptions) ||\n            l === this) {\n            hoveredLayer = l;\n            return f; // Return feature & stop the search\n          }\n        }, {\n          hitTolerance: 6, // For lines / Default 0\n        }\n      ),\n      hoveredSubFeature = hoveredFeature;\n\n    if (hoveredFeature) {\n      const hoveredProperties = hoveredFeature.getProperties(),\n        hoveredSubProperties = hoveredSubFeature.getProperties();\n\n      // Click\n      if (evt.type === 'click' &&\n        !(hoveredLayer.options && hoveredLayer.options.noClick)) {\n        // Click cluster\n        if (hoveredSubProperties.cluster) {\n          map.getView().animate({\n            zoom: map.getView().getZoom() + 2,\n            center: hoveredSubProperties.geometry.getCoordinates(),\n          });\n          source.clear();\n        }\n        // Click link\n        else if (hoveredSubProperties.link) {\n          // Open a new tag\n          if (evt.originalEvent.ctrlKey)\n            window.open(hoveredSubProperties.link, '_blank').focus();\n          else\n            // Open a new window\n            if (evt.originalEvent.shiftKey)\n              window.open(hoveredSubProperties.link, '_blank', 'resizable=yes').focus();\n            // Go on the same window\n            else\n              window.location.href = hoveredSubProperties.link;\n        }\n      }\n      // Hover\n      else if (hoveredSubFeature !== map.lastHoveredSubFeature &&\n        !(hoveredLayer.options && hoveredLayer.options.noHover)) {\n        const f = hoveredSubFeature.clone();\n\n        if (hoveredLayer.options && hoveredLayer.options.hoverStylesOptions)\n          f.setStyle(\n            new Style(hoveredLayer.options.hoverStylesOptions(f, resolution, hoveredLayer))\n          );\n\n        source.clear();\n        source.addFeature(f);\n\n        map.getViewport().style.cursor =\n          (hoveredProperties.link || hoveredProperties.cluster) &&\n          !(hoveredLayer.options && hoveredLayer.options.noClick) ?\n          'pointer' :\n          '';\n      }\n    }\n    // Reset hoverLayer, style & cursor\n    else {\n      source.clear();\n      map.getViewport().style.cursor = '';\n    }\n\n    // Mem hovered feature for next change\n    map.lastHoveredSubFeature = hoveredSubFeature;\n  }\n}\n\nexport default Hover;","/**\n * Marker position display & edit\n */\n\nimport {\n  containsCoordinate,\n} from 'ol/extent';\nimport Feature from 'ol/Feature';\nimport Icon from 'ol/style/Icon';\nimport Point from 'ol/geom/Point';\nimport Pointer from 'ol/interaction/Pointer';\nimport proj4Lib from 'proj4/lib';\nimport {\n  register,\n} from 'ol/proj/proj4';\nimport Style from 'ol/style/Style';\nimport {\n  toStringHDMS,\n} from 'ol/coordinate';\nimport {\n  transform,\n} from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\nclass Marker extends VectorLayer {\n  constructor(opt) {\n    const options = {\n      // src: 'imageUrl', // url of marker image\n      defaultPosition: [localStorage.myolLon || 2, localStorage.myolLat || 47], // Initial position of the marker\n      // dragable: false, // Can draw the marker to edit position\n      // focus: number // Center & value of zoom on the marker\n      zIndex: 600, // Above points & hover\n\n      prefix: 'marker', // Will take the values on\n      // marker-json, // <input> json form\n      // marker-lon, marker-lat, // <input> longitude / latitude\n      // marker-x, marker-y', // <input> Swiss EPSG:21781\n      // marker-select, marker-string, select // display coords format\n      //BEST split in 4 options\n\n      ...opt,\n    };\n\n    const point = new Point(\n      transform(options.defaultPosition, 'EPSG:4326', 'EPSG:3857') // If no json value\n    );\n\n    super({\n      source: new VectorSource({\n        features: [new Feature({\n          geometry: point,\n        })],\n        wrapX: false,\n\n        ...options,\n      }),\n      style: new Style({\n        image: new Icon(options),\n        ...options.styleOptions,\n      }),\n      properties: {\n        marker: true, // To recognise that this is a marker\n      },\n\n      ...options,\n    });\n\n    this.options = options;\n    this.point = point;\n\n    // Initialise specific projection\n    if (typeof proj4Lib === 'function') {\n      // Swiss\n      proj4Lib.defs('EPSG:21781',\n        '+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 ' +\n        '+k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel ' +\n        '+towgs84=660.077,13.551,369.344,2.484,1.783,2.939,5.66 +units=m +no_defs'\n      );\n      // UTM zones\n      for (let u = 1; u <= 60; u++) {\n        proj4Lib.defs('EPSG:' + (32600 + u), '+proj=utm +zone=' + u + ' +ellps=WGS84 +datum=WGS84 +units=m +no_defs');\n        proj4Lib.defs('EPSG:' + (32700 + u), '+proj=utm +zone=' + u + ' +ellps=WGS84 +datum=WGS84 +units=m +no_defs');\n      }\n      register(proj4Lib);\n    }\n\n    // Register the action listeners\n    this.els = [];\n    ['json', 'lon', 'lat', 'x', 'y', 'select', 'string'].forEach(i => {\n      this.els[i] = document.getElementById(this.options.prefix + '-' + i) || document.createElement('div');\n      this.els[i].addEventListener('change', evt => this.action(evt.target));\n    });\n  }\n\n  setMapInternal(map) {\n    map.once('postrender', () => { //HACK the only event to trigger if the map is not centered\n      this.view = map.getView();\n\n      if (this.options.focus) {\n        this.action(this.els.lon); // Il value is provided in lon / lat inputs fields\n        this.action(this.els.json); // Il value is provided in json inputs fields\n        this.view.setZoom(this.options.focus);\n      }\n    });\n\n    // Change the cursor over a dragable feature\n    map.on('pointermove', evt => {\n      const hoverDragable = map.getFeaturesAtPixel(evt.pixel, {\n        layerFilter: l => {\n          if (this.options.dragable)\n            return l.ol_uid === this.ol_uid;\n        }\n      });\n\n      map.getTargetElement().style.cursor = hoverDragable.length ? 'move' : 'auto';\n    });\n\n    // Drag the marker\n    if (this.options.dragable) {\n      map.addInteraction(new Pointer({\n        handleDownEvent: evt => map.getFeaturesAtPixel(evt.pixel, {\n          layerFilter: l => l.ol_uid === this.ol_uid\n        }).length,\n        handleDragEvent: evt => {\n          this.changeLL(evt.coordinate, 'EPSG:3857');\n        },\n      }));\n\n      // Get the marker at the dblclick position\n      map.on('dblclick', evt => {\n        this.changeLL(evt.coordinate, 'EPSG:3857');\n        return false;\n      });\n    }\n\n    return super.setMapInternal(map);\n  } // End setMapInternal\n\n  // Read new values\n  action(el) {\n    // Find changed input type from tne input id\n    const idMatch = el.id.match(/-([a-z]+)/u);\n\n    if (idMatch)\n      switch (idMatch[1]) {\n        case 'json': // Init the field\n          this.changeLL([...this.els.json.value.matchAll(/-?[0-9.]+/gu)], 'EPSG:4326', true);\n          break;\n        case 'lon': // Change lon / lat\n        case 'lat':\n          this.changeLL([this.els.lon.value, this.els.lat.value], 'EPSG:4326', true);\n          break;\n        case 'x': // Change X / Y\n        case 'y':\n          this.changeLL([this.els.x.value, this.els.y.value], 'EPSG:21781', true);\n          break;\n        case 'select': // Change the display format\n          this.changeLL();\n      }\n  }\n\n  // Display values\n  changeLL(pos, prj, focus) {\n    let position = pos,\n      projection = prj || 'EPSG:3857';\n\n    sessionStorage.myolLastchange = Date.now(); // Mem the last change date\n\n    // If no position is given, use the marker's (dragged)\n    if (!position || position.length < 2) {\n      position = this.point.getCoordinates();\n      projection = 'EPSG:3857';\n    }\n\n    // Don't change if none entry\n    if (!position[0] && !position[1])\n      return;\n\n    const ll4326 = transform([\n      // Protection against non-digital entries / transform , into .\n      parseFloat(position[0].toString().replace(/[^-0-9]+/u, '.')),\n      parseFloat(position[1].toString().replace(/[^-0-9]+/u, '.'))\n    ], projection, 'EPSG:4326');\n\n    ll4326[0] -= Math.round(ll4326[0] / 360) * 360; // Wrap +-180°\n\n    const ll3857 = transform(ll4326, 'EPSG:4326', 'EPSG:3857');\n\n    const inEPSG21781 =\n      typeof proj4Lib === 'function' &&\n      containsCoordinate([664577, 5753148, 1167741, 6075303], ll3857);\n\n    // Move the marker\n    this.point.setCoordinates(ll3857);\n\n    // Move the map\n    if (focus && this.view)\n      this.view.setCenter(ll3857);\n\n    // Populate inputs\n    this.els.lon.value = Math.round(ll4326[0] * 100000) / 100000;\n    this.els.lat.value = Math.round(ll4326[1] * 100000) / 100000;\n    this.els.json.value = '{\"type\":\"Point\",\"coordinates\":[' + this.els.lon.value + ',' + this.els.lat.value + ']}';\n\n    // Display\n    const strings = {\n      dec: 'Lon: ' + this.els.lon.value + ', Lat: ' + this.els.lat.value,\n      dms: toStringHDMS(ll4326),\n    };\n\n    if (inEPSG21781) {\n      const ll21781 = transform(ll4326, 'EPSG:4326', 'EPSG:21781'),\n        z = Math.floor(ll4326[0] / 6 + 90) % 60 + 1,\n        u = 32600 + z + (ll4326[1] < 0 ? 100 : 0),\n        llutm = transform(ll3857, 'EPSG:4326', 'EPSG:' + u);\n\n      // UTM zones\n      strings.utm = ' UTM ' + z +\n        ' E:' + Math.round(llutm[0]) + ' ' +\n        (llutm[1] > 0 ? 'N:' : 'S:') + Math.round(llutm[1] + (llutm[1] > 0 ? 0 : 10000000));\n\n      // Swiss\n      this.els.x.value = Math.round(ll21781[0]);\n      this.els.y.value = Math.round(ll21781[1]);\n      strings.swiss = 'X=' + this.els.x.value + ', Y=' + this.els.y.value + ' (CH1903)';\n    }\n    // When not on the CH1903 extend, hide the choice\n    else if (this.els.select.value === 'swiss')\n      this.els.select.value = 'dec';\n\n    // Hide Swiss coordinates when out of extent\n    document.querySelectorAll('.xy').forEach(el => {\n      el.style.display = inEPSG21781 ? '' : 'none';\n    });\n\n    // Display selected format\n    this.els.string.textContent = strings[this.els.select.value || 'dec'];\n  }\n}\n\nexport default Marker;","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * Display misc values\n */\n\nimport {\n  VERSION as olVersion,\n} from 'ol/util';\n\nexport const VERSION = '__myolBuildVersion__ __myolBuildDate__';\n\nexport async function trace() {\n  const data = [\n    'Ol v' + olVersion,\n    'MyOl ' + VERSION,\n    'Geocoder __geocoderBuildVersion__',\n    'Proj4 __proj4BuildVersion__',\n    'language ' + navigator.language,\n  ];\n\n  // Storages in the subdomain\n  ['localStorage', 'sessionStorage'].forEach(s => {\n    if (window[s].length)\n      data.push(s + ':');\n\n    Object.keys(window[s])\n      .forEach(k => data.push('  ' + k + ': ' + window[s].getItem(k)));\n  });\n\n  // Registered service workers in the scope\n  if ('serviceWorker' in navigator)\n    await navigator.serviceWorker.getRegistrations().then(registrations => {\n      if (registrations.length) {\n        data.push('service-workers:');\n\n        for (const registration of registrations)\n          if (registration.active)\n            data.push('  ' + registration.active.scriptURL);\n      }\n    });\n\n  // Registered caches in the scope\n  if (typeof caches === 'object')\n    await caches.keys().then(names => {\n      if (names.length) {\n        data.push('caches:');\n\n        for (const name of names)\n          data.push('  ' + name);\n      }\n    });\n\n  // Log all the traces\n  console.info(data.join('\\n'));\n}\n\n/* global map */\n// Zoom & resolution\nfunction traceZoom() {\n  console.log(\n    'zoom ' + map.getView().getZoom().toFixed(2) + ', ' +\n    'res ' + map.getView().getResolution().toPrecision(4) + ' m/pix'\n  );\n}\n\nwindow.addEventListener('load', () => { // Wait for document load\n  if (typeof map === 'object' && map.once)\n    map.once('precompose', () => { // Wait for view load\n      traceZoom();\n      map.getView().on('change:resolution', traceZoom);\n    });\n});\n\nexport default trace;","/**\n * This file defines the myol exports\n */\n\nimport control from './control';\nimport layer from './layer';\nimport * as stylesOptions from './layer/stylesOptions';\nimport * as trace from './trace';\n\nexport default {\n  control: control,\n  layer: layer,\n  Selector: layer.Selector,\n  stylesOptions: stylesOptions,\n  trace: trace.trace,\n  VERSION: trace.VERSION,\n};"],"names":["BaseEvent","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","ObjectEventType","Disposable","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","clear","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","EventType$1","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","MapEventType","Control","options","element","style","pointerEvents","target_","map_","listenerKeys","render","setTarget","remove","getMap","setMap","map","getOverlayContainerStopEvent","appendChild","mapEvent","document","getElementById","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","size","weight","variant","families","family","split","ua","navigator","userAgent","toLowerCase","test","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","passive","defineProperty","window","error","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","frameState","layers","getAllLayers","visibleAttributions","Set","flatMap","layer","getAttributions","forEach","item","add","some","getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","display","Promise","all","attribution","toPromise","getter","err","reject","resolve","promiseGetter","visible","node","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","MapProperty","events","FullScreenEventType","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","createTextNode","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","getTargetElement","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","updateSize","fullscreen","oldMap","body","requestFullscreen","fullscreenEnabled","fullscreenElement","METERS_PER_UNIT","radians","Math","PI","degrees","ft","m","Projection$1","code_","code","units_","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","stride","y","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","transform","Relationship","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","x","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","rotation","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getRotatedViewport","getIntersection","intersection","intersects","applyTransform","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","clamp","squaredSegmentDistance","t","squaredDistance","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","pow","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","delta","closestOnCircle","circle","getRadius","d","sqrt","closestOnSegment","segment","start","along","createStringXY","fractionDigits","template","replace","format","toStringXY","degreesToStringHDMS","hemispheres","normalizedDegrees","abs","deg","sec","hdms","charAt","coordinate1","coordinate2","coord1","coord2","distance","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getLength","geometry","getType","clone","coords","j","jj","getCoordinates","geometries","getGeometries","bearing","lon1","dByR","lat","asin","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","args","console","warn","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","destMetersPerUnit","lonLat","lon","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","setDpi","viewState","pointResolutionUnits","nominalCount","suffix","metersPerDegree","count","decimalCount","previousCount","previousWidth","previousDecimalCount","isNaN","html","createScaleBar","scale","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","position","isLast","lengthString","easeIn","easeOut","inAndOut","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","duration_","duration","zoomByDelta_","view","getView","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","animate","zoom","easing","setZoom","Button","opt","subMenuHTML","buttonAction","subMenuAction","buttonEl","subMenuEl","subMenuId","language","buttonListener","querySelectorAll","el","getElementsByClassName","contains","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","id","name","styles","compose","dx1","dy1","sx","sy","angle","dx2","dy2","matrixPrecision","transform2D","destinationStride","k","rotate","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","simplify","tolerance","intersectsExtent","translate","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","ends","deflateMultiCoordinatesArray","coordinatesss","endss","Circle","setCenterAndRadius","getRadiusSquared_","setCenter","setRadius","GeometryCollection","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","ret","interpolatePoint","fraction","o","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","MultiLineString","ends_","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","Point","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","fromCircle","sides","arrayLength","startAngle","makeRegular","linearRingss","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","RenderFeature","styleFunction","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","FeatureFormat","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","write","equivalentProjection","fromProjection","toProjection","power","transformExtentWithOptions","GeometryConstructor","createRenderFeature","flat","geometryType","orientFlatCoordinates","createGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GEOMETRY_READERS","z","getGeometryLayout","paths","rings","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","esriJSONPolygon","flatRing","outerRings","holes","hole","matched","outerRing","reverse","convertRings","geometryReader","geometryWriter","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","readGeometryInternal","geoJSONFeatures","featureObject","geometryObject","crs","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","array","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","implementation","createDocument","XMLFeature","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","prefix","defaultPrefix","childNodes","child","uri","ns","featureTypes","p","readFeatureElement","readGeometryOrExtent","getAttribute","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","attributes","_content_","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","readLineString","readFlatLinearRing","ring","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","internalOptions","readBoolean","readBooleanString","string","exec","readDateTime","s","dateTime","Date","readDecimal","readDecimalString","parseFloat","readPositiveInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","toString","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","readFlatCoordinates","containerSrs","proj","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","flatLinearRing","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","writeLineStringOrCurveMember","line","writeMultiCurveOrLineString","curve","lines","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","parts","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","innerBoundaryIs","outerBoundaryIs","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","re","substr","readFlatPosList","contextDimension","dim","asXYZ","writePos_","srsDimension","writePosList_","pos","posList","writeFeatureMembers_","geom","setAttributeNS","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","AUTHOR_PARSERS","email","domain","link","parseLink","METADATA_PARSERS","desc","author","copyright","COPYRIGHT_PARSERS","time","keywords","bounds","minlat","minlon","maxlat","maxlon","extensions","parseExtensions","year","license","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","src","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","applyLayoutOptions","href","TextFeature","readFeatureFromText","getText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","HFDTEDATE_RECORD_RE","NEWLINE_RE","Versions","IIIF_PROFILE_VALUES","level0","supports","formats","qualities","level1","level2","none","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","url","imageInfo","resolutions","scale_factors","tileSize","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","sizes","tiles","tile","scaleFactors","extraFormats","preferredFormat","preferredFormats","filter","reduce","acc","extraFeatures","extraQualities","ImageState","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","luv","arg","_u","_v","u","v","xn","yn","zn","vn","yr","lchuv","hr","c","h","names$z","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","cstr","space","alpha","names","base","dims","endsWith","NO_COLOR","cacheSize","withAlpha","rgbaToLcha","fromString","parseRgba","normalize","asArray","decodeFallback","image","then","catch","e","complete","handleLoad","unlisten","handleError","load","getCacheKey","crossOrigin","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","update","getImageState","ready","createPattern","getImage","setSize","maxCacheSize","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","pixelRatio","replaceColor_","getPixelRatio","getHitDetectionImage","fillRect","getSize","getSrc","HTMLImageElement","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","iconImageCache","Fill","patternImage_","setColor","getColor","patternImage","getIconImage","loading","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","asColorLike","iconCache","canvasPattern","patternCanvasContext","asCanvasPattern","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","padding","border","left","offsetHeight","removeChild","measureAndCacheTextWidth","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","w","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","points_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","getFill","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","maxRadius","createPath_","lineWidth","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","CircleStyle","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","getRenderer","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","setZIndex","toFunction","defaultStyles","createDefaultStyle","createEditingStyle","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","open","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","TEXTAREA","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","baseURI","location","URL","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","origin","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","GX_TRACK_PARSERS","when","whens","gxTrackObject","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","imageStyle","iconUrlFunction_","imageScale","resizeScale","LabelStyle","textStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","iconProperties","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","Uint8Array","ArrayBuffer","isView","dataView","DataView","readFields","readField","result","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","toNum","readVarintRemainder","readVarint64","readSVarint","num","Boolean","subarray","str","b0","b1","b2","b3","bytesPerSequence","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","finish","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","charCodeAt","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","LN2","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","XML","read","readFromDocument","readFromNode","readHref","PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","flipXY","destOffset","encodeUnsignedInteger","encoded","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","collection","readFeatureFromGeometry","transformArc","vertex","GML32","Filter","tagName","tagName_","getTagName","LogicalNary","conditions","And","Bbox","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","Property","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","request","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","typeName","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","writeLogicalFilter","Or","Not","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","condition","matchCase","writeLiteral","expression","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","timeInstant","timePosition","writeGetFeature","WKBGeometryType","WkbReader","view_","pos_","initialized_","isLittleEndian_","hasZ_","hasM_","srid_","layout_","readUint8","getUint8","readUint32","isLittleEndian","numPoints","numRings","readWkbHeader","expectedTypeId","wkbType","wkbTypeThousandth","hasSRID","typeId","srid","readWkbPayload","readGeometryCollection","readWkbBlock","readWkbCollection","reader","items","getSrid","WkbWriter","opts","littleEndian","isEWKB_","ewkb","writeQueue_","nodata_","X","Y","Z","M","nodata","writeUint8","writeUint32","coordsObj","axis","idx","writeLineString","writeWkbHeader","isInteger","writeMultiLineString","writeMultiPolygon","writeGeometryCollection","findMinimumLayout","geoms","wkblut","geomType","getBuffer","byteLength","setUint8","setUint32","getDataView","decodeHexString","byteOffset","POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","EMPTY","TokenType","wktTypeLookup","Lexer","wkt","index_","isAlpha_","isNumeric_","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","toUpperCase","Parser$1","lexer","lexer_","token_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","token","isEmptyGeometry_","ctor","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","encode","enc","geometryEncoder","wktType","encodeGeometryLayout","isV13","Service","SERVICE_PARSERS_V13","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS_V13","CAPABILITY_PARSERS","COMMON_CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","Layer","layerObject","LAYER_PARSERS_V13","LAYER_PARSERS","readLayer","UserDefinedSymbolization","SupportSLD","UserLayer","UserStyle","RemoteWFS","COMMON_SERVICE_PARSERS","Name","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","Format","COMMON_LAYER_PARSERS","BoundingBox","readBoundingBox","Dimension","dimensionObject","unitSymbol","default","multipleValues","nearestValue","current","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","SRS","Extent","ScaleHint","LatLonBoundingBox","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","MinScaleDenominator","MaxScaleDenominator","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","withCrs","res","srs","v13","parentLayerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","addKeys","childValue","replaceKeys","parentValue","formatOnlineresource","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","idField","esriJSONFeature","esriJSONFeatures","objectIdFieldName","wkid","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readMetadata","readMetadataFromDocument","readMetadataFromNode","metadata","featureReader","gpx","altitudeMode_","lad_","lod_","ladStart_","ladStop_","lodStart_","lodStop_","month","day","lastDateTime","hour","minute","second","UTC","numberAdds","addCode","addStart","addStop","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","identifier","getComplianceLevelFromProfile","complianceLevel","level","getTileSourceOptions","preferredOptions","imageOptions","quality","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","numEnds","getGeometryType","PBF","pbfLayers","pbfLayer","setLayers","factor_","geometryLayout_","geometryLayout","lastNumbers","numbers","decodeUnsignedIntegers","decodeSignedIntegers","decodeFloats","decodeDeltas","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","encodeDeltas","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","version_","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","startIndex","viewParams","bbox","combineBboxAndFilter","completeFilter","bboxFilter","bboxFilterFn","params","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","splitCollection","viewCache_","hex_","littleEndian_","ewkb_","nodataZ_","nodataZ","nodataM_","nodataM","f","writer","encodeHexString","splitCollection_","parse_","Parser","wmsCapabilityObject","getLayers","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","owsParser_","WMTSCapabilityObject","subMenuHTMLfr","Download","fileName","hiddenEl","formatName","innerText","downloadFormat","mime","mapExtent","calculateExtent","featuresToSave","savedLayer","getFeatures","marker","forEachFeatureInExtent","subCoords","file","Blob","download","createObjectURL","click","TileState","Tile","tileCoord","state","transition_","transition","transitionStarts_","release","setState","getKey","getTileCoord","getState","getAlpha","inTransition","endTransition","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","beginPath","moveTo","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","mat","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","pixelRatio_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","setTimeout","TileEventType","Source","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","state_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getResolutions","getWrapX","getInterpolate","refresh","setAttributions","attributionLike","TileRange","containsTileRange","tileRange","DEFAULT_TILE_SIZE","hash","tmpTileCoord","TileGrid","zoomFactor","minZoom","resolutions_","compare","every","currentVal","isSorted","origins","zoomFactor_","maxZoom","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getMaxZoom","getMinZoom","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","maxResolution","half","TileSource","tilePixelRatio_","tilePixelRatio","tmpSize","key_","tileOptions","zDirection","getGutterForProjection","setKey","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","ratio","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","appendParams","keyParams","encodeURIComponent","qs","zRegEx","xRegEx","yRegEx","dashYRegEx","expandUrl","urls","startCharCode","stopCharCode","charCode","stop","createFromTemplate","range","renderXYZTemplate","createFromTileUrlFunctions","tileUrlFunctions","tileCoordHash","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","setTileLoadFunction","setTileUrlFunction","templates","createFromTemplates","TileImage","defaultTileLoadFunction","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","fetch","response","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","searchParams","delete","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","OSM","XYZ","LayerProperty","BaseLayer","background_","background","minResolution","className_","getBackground","getClassName","getLayerState","managed","getVisible","getMaxResolution","getMinResolution","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","RenderEventType","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenterInternal","newPadding","getUpdatedOptions_","newOptions","var_args","isDef","resolveConstraints","animateInternal","animationCount","animationCallback","now","series","animation","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","cosAngle","sinAngle","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","pixel","getData","isVisible","getMapInternal","layerState","layerStatesArray","getLayerGroup","find","layerExtent","inView","layerRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","getPreload","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","forEachFeatureAtCoordinate","hitTolerance","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","RenderEvent","inversePixelTransform","ZIndexContext","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","pixelContext","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","prepareContainer","det","makeInverse","canvasTransform","dispatchRenderEvent_","preRender","declutter","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","sharedContext","defaultSize","DataTile","loader_","loader","data_","error_","controller_","controller","imageData","getError","abort","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","getCount","expireCache","keep","entry","containsKey","value_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","ReprojDataTile","Uint8ClampedArray","reprojData_","reprojError_","reprojSize_","sourceTileGridExtent","dataSources","imageLike","tileData","arrayData","Float32Array","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","ImageData","sourceKey","getKeyZXY","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","getRenderExtent","layerIndex","gridExtent","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","renderedProjection_","getTileCache","getOrCreateTile","tileCache","tileSource","pixelToCoordinateTransform","tileOrigin","tileResolution","sourceRevision","renderedRevision_","enqueueTiles","initialZ","tileSourceKey","wantedTiles","minZ","tileQueueKey","tileQueue","isKeyQueued","enqueue","findStaleTile_","staleKeys","findAltTiles_","altZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","nextExtent","targetZ","renderExtent","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","usedTiles","postRenderFunctions","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","TileLayer","DEFAULT_VERSION","getImageSrc","serverType","REQUEST","imageResolution","baseUrl","getRequestUrl","getRequestParams","SERVICE","VERSION","FORMAT","STYLES","TRANSPARENT","TileWMS","params_","v13_","serverType_","updateV13_","getKeyForParams_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","sourceProjCoord","tileExtent","baseParams","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","mpu","getParams","updateParams","WMTS","requestEncoding","format_","dimensions_","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Version","localContext","TileCol","TileRow","SourceXYZ","Positron","NoTile","OpenStreetMap","OpenTopo","MRI","Kompass","hidden","subLayer","Thunderforest","IGN","IGNresolutions","IGNmatrixIds","TilegridWMTS","SwissTopo","host","IgnES","server","IGM","updateResolution","mapResolution","layerResolution","OS","ArcGIS","Maxbox","tileset","Google","subLayers","Bing","MapboxElevation","thunderforest","ign","kompass","England","os","Italie","Maxar","mapbox","bing","Cadastre","Blank","BackgroundLayer","layerTile.Positron","lowResLayer","layerTile.NoTile","addLayer","tuneDisplay","needed","LengthLine","forEachFeatureAtPixel","calculateLength","sphereGetLength","fcs","denivPos","denivNeg","quickselect","defaultCompare","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","_all","search","toBBox","nodesToSearch","children","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","expectedType","colorFromString","returnType","parseCallExpression","Ops","Ops_Get","createCallExpressionParser","hasArgsCount","withGetArgs","Ops_Var","Ops_Has","Ops_Id","withNoArgs","Ops_Concat","withArgsOfType","Ops_GeometryType","Ops_LineMetric","Ops_Resolution","Ops_Zoom","Ops_Time","Ops_Any","Ops_All","Ops_Not","Ops_Equal","Ops_NotEqual","Ops_GreaterThan","Ops_GreaterThanOrEqualTo","Ops_LessThan","Ops_LessThanOrEqualTo","Ops_Multiply","withArgsOfReturnType","Ops_Coalesce","Ops_Divide","Ops_Add","Ops_Subtract","Ops_Clamp","Ops_Mod","Ops_Pow","Ops_Abs","Ops_Floor","Ops_Ceil","Ops_Round","Ops_Sin","Ops_Cos","Ops_Atan","Ops_Sqrt","Ops_Match","hasEvenArgs","argsCount","inputType","fallback","message","Ops_Between","Ops_Interpolate","interpolationType","interpolation","Ops_Case","operation","argCount","Ops_In","needleType","Ops_Number","Ops_String","Ops_Array","Ops_Color","Ops_Band","Ops_Palette","colors","parsedColors","Ops_ToString","minArgs","maxArgs","argType","validators","computeGeometryType","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","declutterImageWithText","setTextStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","reverseHitDetectionInstructions","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasPolygonBuilder","drawFlatCoordinatess_","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","getPixelIndexArray","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","CanvasImmediateRenderer","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","viewHints","endWorld","world","setDrawContext_","resetDrawContext_","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","getSquaredRenderTolerance","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","CollectionEventType","CollectionEvent","Collection","unique_","unique","array_","assertUnique_","updateLength_","getArray","insertAt","elem","removeAt","setAt","except","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorEventType","xhr","success","failure","XMLHttpRequest","responseType","withCredentials","status","responseText","responseXML","onerror","send","loadFeaturesXhr","addFeatures","VectorSourceEvent","VectorSource","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","Load","FileReader","blob","files","readAsText","loadText","loadUrl","loadFormat","receivedLat","receivedProjection","gpxSource","fileExtent","alert","receivingLayer","loadedStyleOptions","module","exports","__esModule","create","getOwnPropertyDescriptor","enumerable","freeze","$","spin","country","city","road","olControl","glass","control","button","expanded","inputText","S","containerId","buttonControlId","inputQueryId","inputLabelId","inputSearchId","q","__proto__","L","T","I","P","R","F","_","O","D","V","provider","placeholder","targetType","lang","limit","keepOpen","preventPanning","preventMarker","defaultFlyResolution","debug","B","U","performance","timing","navigationStart","Q","H","K","J","replaceAll","W","classname","attr","createDocumentFragment","append","ee","te","els","createControl","querySelector","se","method","mode","credentials","jsonp","head","random","callbackName","ne","langs","getParameters","query","handleResponse","postcode","original","formatted","details","oe","addressdetails","countrycodes","viewbox","boundingbox","display_name","houseNumber","house_number","town","ae","neighbourhood","ie","includeNeighborhood","maxResults","formattedAddress","le","countrycode","pretty","no_annotations","results","lng","ce","de","Base","displayInLayerSwitcher","newProvider","registeredListeners","mapClick","setListeners","collapse","expand","which","keyCode","focus","clearResults","info","createList","listenMapClick","addressTemplate","chosen","place","createFeature","building","village","blur","ue","setProvider","setProviderKey","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","MyGeocoder","Geocoder","getElementsByTagName","stopImmediatePropagation","hoveredEl","elementFromPoint","controlEl","GeolocationErrorType","GeolocationError","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","sphereRadius","sphereOffset","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","MyGeolocation","enableHighAccuracy","maximumAge","timeout","statusEl","addGraticule","webkitCompassHeading","graticuleFeature","northGraticuleFeature","graticuleLayer","active","sourceEls","getElementsByName","checked","sourceLevelEl","displayEls","displayLevelEl","sourceLevel","displayLevel","valueName","hg","getCoordinateFromPixel","bd","far","hypot","northGeometry","accuracygeometry","screen","isZoomed","PROJECTION","COORDINATE_FORMAT","MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","getEventPixel","handleMouseOut","getViewport","getCoordinateFromPixelInternal","MyMousePosition","Print","reload","mapEl","poEl","insertAdjacentHTML","print","LayerSwitcher","selectExtId","bl","localStorage","myolBaselayer","decodeURI","sliderEl","oninput","displayTransparencyRange","selectorEls","action","selectExtEl","offsetWidth","ctrlKey","selectedEls","transparentlayer","parentElement","after","Permalink","linkEl","urlMod","init","myolZoom","myolLon","myolLat","ll4326","newParams","fullScreen","geocoder","lengthLine","myMousePosition","scaleLine","InteractionProperty","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","MapBrowserEventType","Interaction","setActive","getActive","mapBrowserEvent","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","stopEvent","updateTrackedPointers_","handledUp","handled","never","singleClick","noModifierKeys","altKey","metaKey","shiftKey","shiftKeyOnly","primaryAction","pointerEvent","isPrimary","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","rel","getPointSegmentRelationship","sharedRel","px","py","Draw","pointerOptions","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","mode_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","condition_","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","pass","clearTimeout","addToDrawing_","handlePointerMove_","pointerType","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","getPixelFromCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","tempSegment","ModifyEventType","ModifyEvent","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","delta_","snapToPointer_","snapToPointer","isRendered","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","vertexFeature","removePoint","dragSegment","coordinateDistance","setGeometryCoordinates_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestOnSegmentData","insertVertex_","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","layerFilter","bufferExtent","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","squaredDistanceToSegment","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","interactions","getInteractions","interaction","removeFeatureLayerAssociation_","SnapEventType","SnapEvent","getFeatureFromEvent","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","register","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","to_meter","ignoredChar","testkey","lkey","projStr","defData","paramName","paramVal","paramOutname","paramObj","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","utmSouth","towgs84","datum_params","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","legalAxis","approx","whitespace","latin","keyword","endThings","digets","root","currentObject","mapit","thing","out","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","d2r","lisp","projName","local","AXIS","axisOrder","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","outName","inName","rename","cleanWKT","defs","that","def","parseProj","EPSG","ESRI","IAU2000","WGS84","GOOGLE","globals","codeWords","codes","testObj","testDef","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","es","projStore","exports$2","ellipseName","exports$1","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","militargeographische_institut","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","mapNodes","longitudeShift","latitudeShift","readGridHeader","lowerLatitude","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","latitudeAccuracy","longitudeAccuracy","srsCode","parseCode","ourProj","datumDef","Datum","a2","sphere_","Ellipsoid","dc_sphere","ecc","ep2","getNadgrids","datumObj","datum_type","grids","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Height","geocentricToGeodetic","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","checkParams","datum_transform","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","attemptedGrids","outer","subgrids","subgrid","epsilon","del","ll","lim","applySubgridShift","pin","ct","tb","nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","adjust_axis","denorm","xin","yin","zin","common","checkCoord","TypeError","enforceAxis","toPoint","checkSanity","checkNotWGS","transformer","to","transformedArray","checkProj","oProj","proj4","fromProj","toProj","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs","UTMtoLL","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","eccPrimeSquared","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","getLetterDesignator","LLtoUTM","radToDeg","rad","T1","C1","R1","LongOrigin","mu","phi1Rad","e1","LetterDesignator","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","temp","sinh","asinhy","log1py","gatg","pp","cos_2B","h1","h2","clens_cmplx","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hr1","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss","rc","phic0","ratexp","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","k1","k2","k3","Sa1","Sa2","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","omerc","cosph0","sinph0","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","Qp","Sp","Tp","Vp","Up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","krovak","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","tl","asq","cl","nl1","rl1","tl1","dl","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","qp","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","sinb","cosb","cCe","sCe","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","qs0","ns0","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","cea","iqsfnz","eqc","dlat","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu","C_y","C_x","moll","delta_theta","eqdc","ml1","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s3","s4","cosAz","Ee","sinpsi","ortho","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","robin","f_df","max_err","iters","upd","newton_rapshon","poly3_der","geocent","azi","tilt","tpers","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","geos","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","v_x","v_y","v_z","v_zp","A1","A2","A3","A4","eqearth","paramLat","paramLatSq","paramLatPow6","EPS10","e_fwd","am1","e_inv","s_fwd","cphi1","s_inv","bonne","defaultDatum","Proj","nadgrid","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","readSubgrids","includedProjections","Cluster","interpolationRatio","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","centroid","scaleCoordinate","searchCenter","Selector","initSelect","safeName","selectEls","callbacks","allChecked","getSelection","cb","featureArea","elLabel","basic","agregateText","glue","bed","hover","MyVectorSource","selectName","yetAdded","addProperties","tuneDistance","MyClusterSource","ClusterSource","createCluster_","ex","browserClusterFeaturelMaxPerimeter","nbMaxClusters","includeCluster","stylesOptions.agregateText","MyBrowserClusterVectorLayer","hiResOptions","browserClusterMinResolution","lowResOptions","lowResolutionLayer","MyServerClusterVectorLayer","serverClusterMinResolution","serverClusterLayer","MyVectorLayer","basicStylesOptions","stylesOptions.basic","hoverStylesOptions","stylesOptions.hover","selector","urlArgs","_path","sessionStorage","myolLastchange","URLSearchParams","mapProjection","stylesOptions.cluster","so","WAY_PARSERS","nd","ndrefs","hasAttribute","readTag","tags","NODE_PARSERS","way","ways","OSMXML","genericIconUrl","hostIcons","icons","addTag","newTag","GeoBB","cat","Chemineur","Alpages","forums","WRI","nb_points","type_points","nom","icone","alt","places","valeur","lien","PRC","type_hebergement","capacity","cap_ete","C2C","documents","document_id","locales","waypoint_type","elevation","wtyp","Overpass","newNodes","documentElement","tagv","subTagNode","cloneNode","selections","ex4326","sel","wri","prc","c2c","osm","chemineur","alpages","VectorEditor","geoJsonId","writeGeoJson","editedSource","geoJsonEl","geoJson","baseStyleOptions","snapSource","selectInteraction","selectStyles","modifyInteraction","withPolys","drawPolyInteraction","drawLineInteraction","snapInteraction","intName","helpEl","restartInteractions","addControl","optimiseAndSave","oEvt","selectedFeature","selectedFeatures","removeInteraction","addInteraction","splitCord","semaphore","flatFeatures","flatCoord","canMerge","compareCoords","withHoles","segmentCoords","selectedStyleOptions","featureStyles","circlesCoords","Hover","mouseListener","divRect","getBoundingClientRect","clientX","clientY","hoveredLayer","hoveredFeature","hoveredSubFeature","hoveredProperties","hoveredSubProperties","noClick","lastHoveredSubFeature","noHover","Marker","defaultPosition","styleOptions","proj4Lib","projCodes","code1","proj1","code2","proj2","hoverDragable","getFeaturesAtPixel","dragable","Pointer","changeLL","idMatch","matchAll","prj","ll3857","inEPSG21781","strings","dec","dms","ll21781","llutm","swiss","select","tileLayercollection","vector","vectorLayerCollection","traceZoom","myol","stylesOptions","async","getItem","serviceWorker","getRegistrations","registrations","registration","scriptURL","caches","trace.VERSION"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,214,216,217,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,332,338]}